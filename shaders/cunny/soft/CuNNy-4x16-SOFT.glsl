// CuNNy 4x16 SOFT
// Copyright (c) 2024 funnyplanter

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */


//!DESC CuNNy-4x16-SOFT-in
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND LUMA
//!SAVE in
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
#define l0(x, y) F((LUMA_mul * texelFetch(LUMA_raw, clamp(pos + ivec2(x, y), ivec2(0), sz) * ivec2(1, 1) + ivec2(0, 0), 0)).r)
shared F G[1][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			G[0][ay][ax] = l0(x - 1, y - 1);
		}
	}
	barrier();
	F s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2;
	V4 r0, r1, r2, r3;
	r0 = V4(0.0); r1 = V4(0.0); r2 = V4(0.0); r3 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2];
	r0 += V4(2.654e-02, 3.835e-02, 1.188e-02, 2.228e-02) * s0_0_0;
	r1 += V4(-1.453e-02, -5.067e-02, 7.598e-03, 5.118e-03) * s0_0_0;
	r2 += V4(6.696e-02, 2.687e-02, 2.144e-03, -7.696e-03) * s0_0_0;
	r3 += V4(1.071e-03, 5.112e-03, 2.531e-04, -2.942e-02) * s0_0_0;
	r0 += V4(-4.418e-01, 7.103e-02, -1.092e-01, -5.347e-02) * s0_0_1;
	r1 += V4(6.013e-01, -5.944e-01, 1.265e-01, 7.840e-01) * s0_0_1;
	r2 += V4(7.124e-02, -4.348e-02, -6.166e-02, 8.081e-02) * s0_0_1;
	r3 += V4(4.932e-01, -1.583e-02, 7.581e-03, 5.969e-03) * s0_0_1;
	r0 += V4(4.120e-01, 1.271e-02, 3.320e-03, 1.533e-03) * s0_0_2;
	r1 += V4(3.381e-02, 6.566e-01, 6.571e-01, 2.425e-02) * s0_0_2;
	r2 += V4(-6.065e-02, 1.160e-02, 9.210e-02, -7.349e-02) * s0_0_2;
	r3 += V4(1.055e-02, 4.034e-03, -2.136e-03, 3.339e-01) * s0_0_2;
	r0 += V4(3.760e-01, -1.781e-02, -1.582e-01, -9.618e-02) * s0_1_0;
	r1 += V4(-2.779e-02, 7.359e-03, -4.329e-02, -8.507e-03) * s0_1_0;
	r2 += V4(-1.760e-02, 1.331e-02, 5.205e-02, 3.130e-03) * s0_1_0;
	r3 += V4(-4.970e-01, -2.882e-02, -5.579e-02, -1.592e-02) * s0_1_0;
	r0 += V4(9.735e-02, -2.711e-02, 4.424e-01, -5.954e-01) * s0_1_1;
	r1 += V4(-5.628e-01, -1.473e-01, -5.045e-02, -7.637e-01) * s0_1_1;
	r2 += V4(3.824e-01, -4.722e-02, 3.389e-01, 8.054e-01) * s0_1_1;
	r3 += V4(-1.008e-02, -7.480e-01, 5.429e-02, 4.472e-03) * s0_1_1;
	r0 += V4(-4.663e-01, 3.766e-02, -7.644e-03, -1.042e-01) * s0_1_2;
	r1 += V4(-3.302e-02, 1.321e-01, -6.490e-01, -4.503e-02) * s0_1_2;
	r2 += V4(-4.290e-01, 2.713e-02, -6.628e-01, -7.983e-01) * s0_1_2;
	r3 += V4(2.717e-03, -3.013e-02, -1.349e-02, -4.220e-01) * s0_1_2;
	r0 += V4(-4.204e-01, 1.003e-01, -7.213e-02, 5.886e-02) * s0_2_0;
	r1 += V4(1.188e-02, -1.846e-03, 3.172e-02, 4.740e-03) * s0_2_0;
	r2 += V4(-2.103e-03, 6.709e-01, -2.548e-02, -3.087e-03) * s0_2_0;
	r3 += V4(1.819e-03, 2.448e-02, -7.201e-01, -7.634e-03) * s0_2_0;
	r0 += V4(3.521e-01, -1.127e+01, -6.172e-02, 7.051e-01) * s0_2_1;
	r1 += V4(-2.649e-03, -2.423e-02, -3.870e-02, -1.803e-02) * s0_2_1;
	r2 += V4(-1.761e-02, 4.535e-02, 7.395e-02, 5.056e-02) * s0_2_1;
	r3 += V4(-1.076e-03, 7.630e-01, 7.166e-01, 6.411e-02) * s0_2_1;
	r0 += V4(5.987e-02, 2.239e-02, 8.580e-03, 6.222e-02) * s0_2_2;
	r1 += V4(-6.063e-03, 2.392e-02, -3.964e-02, 1.658e-02) * s0_2_2;
	r2 += V4(3.516e-03, -4.245e-02, 9.279e-02, -5.660e-02) * s0_2_2;
	r3 += V4(-4.877e-04, 2.786e-02, 1.555e-02, -3.797e-02) * s0_2_2;
	r0 += V4(-1.151e-03, 1.030e-02, 1.464e-03, 1.445e-02);
	r0 = clamp(r0, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0));
	r1 += V4(1.254e-02, 4.626e-03, 2.368e-03, 6.124e-04);
	r1 = clamp(r1, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r1));
	r2 += V4(-9.805e-03, -6.425e-01, -2.442e-03, 3.242e-03);
	r2 = clamp(r2, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r2));
	r3 += V4(-1.197e-03, -9.069e-04, 1.111e-04, -1.430e-02);
	r3 = clamp(r3, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r3));
}

//!DESC CuNNy-4x16-SOFT-conv1
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND in
//!BIND LUMA
//!SAVE conv1
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
shared V4 G[4][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(2, 2) + ivec2(1, 1)) * in_pt;
			V4 sr0 = V4(in_gather(p, 0));
			V4 sg0 = V4(in_gather(p, 1));
			V4 sb0 = V4(in_gather(p, 2));
			V4 sa0 = V4(in_gather(p, 3));
			G[0][ay][ax] = V4(sr0.w, sg0.w, sb0.w, sa0.w);
			G[1][ay][ax] = V4(sr0.z, sg0.z, sb0.z, sa0.z);
			G[2][ay][ax] = V4(sr0.x, sg0.x, sb0.x, sa0.x);
			G[3][ay][ax] = V4(sr0.y, sg0.y, sb0.y, sa0.y);
		}
	}
	barrier();
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0, r1, r2, r3;
	r0 = V4(0.0); r1 = V4(0.0); r2 = V4(0.0); r3 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2]; s1_0_0 = G[1][xy.y+0][xy.x+0];
	s1_0_1 = G[1][xy.y+0][xy.x+1]; s1_0_2 = G[1][xy.y+0][xy.x+2];
	s1_1_0 = G[1][xy.y+1][xy.x+0]; s1_1_1 = G[1][xy.y+1][xy.x+1];
	s1_1_2 = G[1][xy.y+1][xy.x+2]; s1_2_0 = G[1][xy.y+2][xy.x+0];
	s1_2_1 = G[1][xy.y+2][xy.x+1]; s1_2_2 = G[1][xy.y+2][xy.x+2];
	r0 += M4(6.516e-02, 3.663e-02, 2.138e-02, 2.856e-02, 5.130e-03, -3.539e-01, -1.943e-01, 2.183e-01, -2.000e-01, 9.962e-02, 2.940e-01, 1.559e-01, -2.092e-02, -1.652e-02, -1.313e-01, -2.152e-01) * s0_0_0;
	r1 += M4(5.340e-02, -4.575e-02, 4.427e-02, -2.069e-02, -2.355e-01, -1.000e+00, 1.230e-01, -6.698e-03, 9.454e-03, -1.186e-01, -4.183e-01, 7.498e-02, -7.574e-02, -4.256e-02, -4.382e-02, 3.818e-02) * s0_0_0;
	r2 += M4(-3.668e-02, 8.900e-02, 1.001e-01, -5.894e-02, 2.290e-01, 1.593e-01, -6.355e-02, -2.201e-01, -1.320e-01, -3.643e-01, -3.401e-03, -3.252e-01, -5.914e-02, 8.572e-02, -5.001e-02, -1.913e-01) * s0_0_0;
	r3 += M4(4.195e-02, 5.641e-03, 3.703e-02, 1.246e-01, 8.114e-01, 1.503e-01, 6.243e-01, -2.160e-01, -3.701e-03, -1.692e-04, 3.247e-02, -1.550e-01, -4.384e-01, -5.978e-02, -2.472e-01, -7.666e-03) * s0_0_0;
	r0 += M4(1.104e-01, 3.192e-01, -1.814e-01, -4.295e-02, -7.824e-01, 1.000e+00, -6.819e-01, -1.000e+00, -1.447e-01, 1.045e-01, -4.277e-01, -4.311e-01, 2.335e-01, 3.714e-01, 1.860e-02, 1.000e+00) * s0_0_1;
	r1 += M4(3.985e-02, 1.824e-01, 2.499e-01, -2.494e-03, 1.107e-01, -1.000e+00, -7.386e-01, -1.224e-01, 4.985e-02, -2.621e-02, 2.334e-01, -1.179e-01, 1.372e-01, 1.274e-01, -2.516e-01, -1.400e-01) * s0_0_1;
	r2 += M4(-1.291e-01, 3.271e-01, 1.440e-01, 5.547e-02, -1.000e+00, -3.718e-01, -3.546e-01, 5.117e-01, -2.787e-01, 9.768e-02, -2.392e-01, 3.134e-01, 5.958e-01, -2.709e-01, 4.393e-01, -2.394e-01) * s0_0_1;
	r3 += M4(1.362e-01, -1.071e-02, -1.219e-01, 1.067e-02, 5.253e-01, -2.820e-02, 3.767e-01, -1.000e+00, 5.424e-02, -3.512e-02, -4.950e-03, 4.222e-02, -8.987e-02, 2.198e-01, -7.880e-01, 2.173e-02) * s0_0_1;
	r0 += M4(-2.512e-02, -2.161e-02, 1.163e-02, -9.444e-03, -6.328e-02, -1.562e-01, -3.893e-01, -5.112e-02, 1.975e-01, -2.017e-01, 3.053e-01, 6.615e-02, -4.040e-02, -1.368e-01, -1.014e-01, -1.169e-01) * s0_0_2;
	r1 += M4(2.384e-02, 1.193e-01, 1.678e-01, -2.156e-03, -4.086e-02, -1.713e-01, 1.355e-02, 4.258e-02, -7.862e-02, 1.796e-01, 1.516e-01, 4.614e-02, -7.500e-02, 3.818e-01, -4.145e-02, 1.043e-01) * s0_0_2;
	r2 += M4(5.826e-02, 1.107e-01, 5.294e-02, -6.872e-02, -5.270e-01, 3.123e-01, -6.969e-03, 1.735e-01, 3.164e-01, 3.059e-01, 1.070e-01, 7.399e-02, -7.238e-02, 4.790e-02, -6.157e-02, -8.708e-02) * s0_0_2;
	r3 += M4(4.050e-02, -1.550e-03, -2.127e-01, 1.507e-01, -5.566e-01, -6.144e-01, -5.814e-01, 4.619e-01, 1.091e-02, -2.959e-03, -1.072e-01, 2.334e-01, 5.380e-02, -1.217e-01, 8.951e-01, -7.178e-02) * s0_0_2;
	r0 += M4(-1.191e-01, -7.468e-02, 2.760e-01, -6.191e-03, -5.829e-02, -5.272e-02, -2.418e-01, 4.799e-02, -2.394e-01, 1.173e-01, -8.666e-02, -1.608e-01, 1.440e-01, 1.648e-01, -2.544e-01, -1.030e-01) * s0_1_0;
	r1 += M4(8.226e-02, 1.001e-01, 1.366e-02, -3.199e-02, 9.872e-02, -4.926e-01, 8.244e-02, -1.047e-01, 2.959e-01, -1.709e-02, 1.516e-01, -8.982e-02, 4.354e-02, 3.188e-01, 1.229e-01, -1.945e-02) * s0_1_0;
	r2 += M4(-9.109e-02, 1.639e-01, 5.985e-02, -1.754e-01, -9.445e-02, -8.237e-01, 1.684e-01, -5.940e-02, -5.605e-01, 2.606e-01, -1.974e-01, 6.637e-01, -1.200e-01, -1.284e-01, -2.830e-01, -4.027e-01) * s0_1_0;
	r3 += M4(1.333e-01, -1.644e-02, 1.794e-01, 1.274e-01, 1.357e-01, -1.717e-01, 3.041e-01, 7.936e-01, 1.846e-01, -1.653e-01, -1.193e-01, 2.284e-01, -3.410e-02, 1.005e-01, 1.056e-01, 7.179e-02) * s0_1_0;
	r0 += M4(-2.979e-01, -7.447e-02, 4.440e-01, 1.477e-01, -8.118e-02, -3.653e-01, 7.049e-01, 2.880e-02, 7.636e-01, -2.346e-01, 1.908e-01, 3.512e-01, -2.480e-01, -3.545e-01, 3.052e-01, -2.974e-02) * s0_1_1;
	r1 += M4(6.472e-02, 1.702e-01, -8.709e-02, -2.967e-02, 5.587e-02, 5.566e-01, -5.164e-01, 1.646e-01, -2.329e-01, 7.622e-03, -1.221e-02, 8.106e-02, -5.229e-02, -4.861e-01, 4.603e-02, -1.996e-01) * s0_1_1;
	r2 += M4(1.095e-01, 2.195e-01, -6.356e-02, 2.586e-01, 2.302e-01, 1.095e-01, -2.888e-01, -6.753e-04, 2.010e-01, -2.306e-01, 7.715e-01, -4.209e-01, 2.158e-01, -6.228e-01, 3.413e-01, 2.697e-01) * s0_1_1;
	r3 += M4(4.829e-02, -9.731e-03, 2.019e-01, 2.173e-01, -9.058e-02, -1.135e-02, 2.782e-01, -6.901e-01, -3.694e-01, -8.025e-01, -3.584e-01, -1.516e-01, 1.914e-01, -3.334e-02, -3.768e-01, -2.711e-01) * s0_1_1;
	r0 += M4(1.408e-01, 3.231e-01, 1.611e-01, 5.326e-02, 6.782e-03, 5.625e-01, -4.271e-01, -6.956e-03, -3.267e-01, 1.625e-01, -2.106e-02, -2.525e-02, 2.035e-01, -1.453e-01, 6.628e-02, -8.481e-02) * s0_1_2;
	r1 += M4(1.416e-03, 2.483e-01, 5.021e-02, 3.806e-02, -6.155e-02, 2.941e-01, 1.096e-01, -1.471e-01, -9.368e-02, 1.081e-01, -1.715e-01, 2.588e-02, 5.264e-02, -1.730e-03, -7.551e-03, 6.829e-02) * s0_1_2;
	r2 += M4(-1.141e-01, -1.728e-01, -9.721e-02, -4.008e-02, -2.990e-02, -1.759e-01, -3.754e-02, -1.312e-02, 3.129e-01, 2.145e-02, -4.163e-01, -1.671e-01, -4.980e-02, -8.728e-02, -4.260e-02, -1.674e-01) * s0_1_2;
	r3 += M4(-6.724e-02, 3.113e-02, -7.083e-02, 1.468e-01, -4.981e-01, 3.591e-01, -2.781e-01, -1.000e+00, 1.878e-01, 1.000e+00, 3.619e-01, 3.446e-02, 1.946e-01, -9.347e-02, 1.043e-01, 2.967e-01) * s0_1_2;
	r0 += M4(-8.337e-02, 9.455e-02, -9.892e-02, 1.117e-02, -7.864e-02, -1.867e-01, 1.022e-03, -1.780e-02, 1.141e-01, 4.065e-01, 9.004e-02, -5.425e-02, -3.005e-02, 3.591e-01, 1.703e-01, -8.323e-02) * s0_2_0;
	r1 += M4(-2.197e-02, 2.041e-01, -5.906e-02, 6.545e-04, -8.866e-02, -5.589e-01, -3.085e-02, -5.852e-03, 4.505e-03, -3.404e-01, -1.926e-01, 2.805e-02, 6.335e-02, -1.542e-01, -2.345e-01, -7.737e-02) * s0_2_0;
	r2 += M4(1.699e-01, -2.607e-02, -1.277e-02, 5.744e-02, 6.221e-02, -2.265e-01, 6.705e-02, 2.593e-02, 7.490e-03, -1.399e-01, 1.960e-01, -3.683e-01, -2.379e-01, 1.000e+00, 2.098e-02, 1.678e-02) * s0_2_0;
	r3 += M4(-1.639e-02, -1.732e-02, -3.397e-02, -3.990e-02, -3.180e-01, 1.258e-02, -9.935e-02, -2.314e-01, -4.228e-01, 6.957e-02, -1.905e-01, 1.263e-02, -1.568e-01, -6.823e-02, 6.166e-02, -2.131e-01) * s0_2_0;
	r0 += M4(-1.980e-01, -3.864e-03, 2.880e-01, 3.526e-02, -3.543e-03, 2.375e-01, 2.831e-02, -1.417e-02, -1.770e-01, -2.343e-01, -3.115e-01, 7.104e-02, 7.682e-02, -2.184e-01, -9.831e-02, 1.016e-01) * s0_2_1;
	r1 += M4(3.190e-02, 3.610e-01, -7.239e-02, -2.019e-02, 1.913e-02, 9.139e-02, -2.450e-01, 5.791e-02, 4.217e-02, 2.318e-01, 2.811e-01, 1.320e-02, -5.334e-02, 5.440e-02, -1.259e-02, -4.101e-03) * s0_2_1;
	r2 += M4(7.506e-02, -9.110e-03, 7.380e-02, 1.469e-01, -6.754e-02, -3.018e-03, -1.742e-02, -5.725e-02, 3.033e-02, -1.256e-01, -2.685e-01, 2.079e-01, 3.630e-02, -1.000e+00, 2.074e-01, -4.070e-02) * s0_2_1;
	r3 += M4(-1.563e-01, -3.730e-02, 1.998e-01, -2.610e-01, 1.667e-01, -1.940e-02, -1.231e-01, -2.369e-02, 4.169e-01, -4.468e-02, 3.711e-01, 2.116e-01, -1.254e-01, -2.681e-02, -1.369e-01, 5.671e-01) * s0_2_1;
	r0 += M4(3.995e-02, 1.521e-01, 2.160e-01, -4.307e-02, 2.722e-01, -1.398e-01, 5.484e-02, -3.539e-02, 1.014e-02, -2.278e-01, -7.736e-02, 2.163e-02, -1.100e-01, 9.425e-02, 1.629e-02, -7.815e-02) * s0_2_2;
	r1 += M4(9.116e-03, 1.458e-01, -1.756e-02, -7.362e-03, -4.023e-03, 3.305e-03, -2.168e-02, -1.086e-01, -1.055e-02, 2.100e-01, 6.973e-02, -1.041e-01, 2.935e-02, -2.487e-02, -3.384e-02, 6.447e-02) * s0_2_2;
	r2 += M4(-8.080e-02, 1.500e-01, -1.318e-02, -6.203e-03, -6.021e-02, 4.229e-01, 5.984e-02, 1.201e-01, 8.011e-02, 2.416e-01, 7.428e-04, 1.791e-01, 6.859e-02, 7.217e-01, -3.191e-02, -3.981e-01) * s0_2_2;
	r3 += M4(-2.224e-01, 2.053e-02, 8.338e-02, 7.975e-02, 2.093e-01, -4.584e-02, 1.512e-01, 5.912e-01, -6.473e-02, -1.561e-02, 1.326e-02, -3.500e-01, 3.427e-02, 3.250e-02, 1.885e-01, -3.007e-01) * s0_2_2;
	r0 += M4(-2.222e-01, 5.609e-01, 3.223e-02, 2.725e-01, 5.513e-02, -8.822e-02, 6.845e-03, 5.221e-04, 2.338e-02, -1.782e-02, -8.283e-02, -1.179e-01, 1.974e-01, -4.795e-01, -2.202e-01, -2.075e-01) * s1_0_0;
	r1 += M4(-7.349e-02, -5.435e-03, -1.426e-01, 4.193e-02, 1.173e-02, 1.327e-01, 3.758e-02, -3.317e-02, 6.901e-02, -5.946e-02, 1.247e-01, 1.119e-01, 5.833e-02, 1.636e-01, -4.172e-02, -6.615e-02) * s1_0_0;
	r2 += M4(8.998e-02, -5.500e-01, -1.841e-01, -3.698e-01, -1.966e-02, 1.342e-01, -9.302e-03, 5.212e-02, 2.397e-01, -4.417e-02, 1.285e-02, -6.714e-02, -1.581e-01, 4.150e-01, 1.909e-01, 3.024e-01) * s1_0_0;
	r3 += M4(1.217e-02, -1.096e-01, -3.502e-02, -1.890e-02, 2.691e-02, -1.216e-02, -7.851e-02, 6.543e-03, -2.553e-01, -1.067e-02, -4.956e-01, -1.007e-01, -3.403e-02, 7.770e-02, 2.134e-02, 5.078e-02) * s1_0_0;
	r0 += M4(-2.267e-01, -2.867e-01, 3.751e-01, -1.824e-01, -2.059e-02, -7.164e-02, 1.847e-02, 4.561e-02, 1.799e-01, 3.942e-01, 9.105e-02, 8.061e-02, 1.702e-01, 4.636e-01, -4.109e-01, 2.090e-01) * s1_0_1;
	r1 += M4(-3.737e-02, 6.808e-01, 2.214e-01, -4.975e-02, -3.971e-02, 1.342e-01, -5.618e-02, -7.520e-03, 4.158e-02, -4.526e-01, -7.413e-01, 3.923e-02, -1.838e-02, -1.937e-01, 6.723e-02, -2.891e-02) * s1_0_1;
	r2 += M4(6.572e-02, 8.535e-01, 2.499e-01, -4.150e-01, -8.918e-02, -2.076e-01, -7.946e-02, 7.364e-02, 9.269e-02, -2.117e-01, -1.958e-01, -1.067e-01, -3.022e-01, -4.119e-01, 3.741e-02, 5.014e-01) * s1_0_1;
	r3 += M4(5.778e-02, -1.429e-01, -1.402e-02, -1.456e-01, 2.260e-02, -1.918e-02, 1.451e-02, 9.023e-02, -2.393e-03, -9.333e-02, 5.399e-01, -1.532e-01, 1.736e-01, 1.222e-01, 3.105e-01, 2.127e-01) * s1_0_1;
	r0 += M4(-6.117e-02, -1.653e-01, 2.961e-01, 2.777e-02, -7.915e-03, 1.537e-02, 5.311e-02, 2.049e-02, 2.379e-02, -6.433e-02, 4.040e-02, 1.795e-02, -1.072e-01, -2.808e-01, -4.262e-01, -1.243e-01) * s1_0_2;
	r1 += M4(-7.879e-02, 9.786e-02, -4.026e-01, -1.597e-02, -1.771e-02, 3.131e-02, 7.942e-03, 8.360e-03, 1.744e-02, 6.595e-03, 4.848e-03, -1.620e-03, 4.274e-02, 1.870e-01, 8.490e-01, 6.969e-03) * s1_0_2;
	r2 += M4(-2.241e-01, -2.533e-01, -5.664e-02, -1.558e-01, 2.803e-02, 1.532e-02, 6.125e-03, 5.971e-02, -7.587e-02, -2.009e-02, -4.034e-02, -1.062e-02, 3.676e-03, 3.959e-01, 2.190e-01, 2.926e-01) * s1_0_2;
	r3 += M4(-1.282e-01, 5.282e-02, -7.029e-02, -1.088e-02, -8.071e-02, -1.876e-02, 1.473e-01, -1.224e-02, 1.650e-01, 4.311e-02, -1.914e-01, 8.490e-02, 1.737e-01, 4.932e-02, -8.042e-01, 1.644e-01) * s1_0_2;
	r0 += M4(5.215e-02, -6.782e-03, -6.094e-02, 1.473e-01, 3.051e-01, -1.437e-01, -2.786e-01, -6.952e-02, 5.825e-02, -4.221e-01, -4.121e-01, -8.933e-01, 2.923e-02, -6.373e-02, 1.054e-01, -1.770e-01) * s1_1_0;
	r1 += M4(1.267e-02, 6.039e-01, 1.127e-01, -1.003e-02, 5.693e-02, 4.485e-01, -6.911e-02, 2.134e-02, -2.037e-01, -7.758e-01, 4.570e-01, 3.865e-02, 5.907e-03, -6.479e-01, -2.380e-01, -3.323e-02) * s1_1_0;
	r2 += M4(3.642e-01, -6.062e-01, 6.910e-02, -1.197e-01, 1.693e-01, -2.644e-01, 1.871e-01, -3.490e-01, -4.157e-01, 2.042e-01, -4.220e-02, 9.972e-02, 1.248e-01, -2.587e-01, -3.111e-02, -1.033e-01) * s1_1_0;
	r3 += M4(2.184e-01, 8.472e-02, -2.112e-01, 1.511e-01, -4.565e-01, -3.490e-02, 1.797e-01, -1.632e-02, 2.965e-01, 2.642e-02, 6.682e-01, -1.358e-01, -1.713e-01, -7.842e-02, 5.056e-01, 1.070e-01) * s1_1_0;
	r0 += M4(-1.371e-01, 9.841e-02, 3.299e-01, -6.223e-01, 2.218e-01, 4.288e-01, -6.575e-01, -1.127e-01, 1.036e-01, 1.467e-01, 4.503e-02, 2.465e-02, 1.226e-01, 1.550e-01, -1.000e+00, -1.000e+00) * s1_1_1;
	r1 += M4(1.622e-01, 1.682e-01, 6.313e-01, -8.109e-02, -2.556e-02, 2.367e-01, 6.613e-04, 3.046e-02, -4.468e-02, -2.356e-01, 1.406e-01, 1.556e-01, -7.266e-02, -7.829e-01, -1.664e-01, -1.420e-02) * s1_1_1;
	r2 += M4(1.176e-01, 2.906e-02, 2.231e-01, 2.067e-01, 2.520e-02, -2.762e-02, -6.536e-02, -1.561e-01, 4.095e-01, -3.964e-01, 2.861e-01, 1.957e-01, -3.091e-01, 4.336e-01, -4.387e-01, 1.930e-01) * s1_1_1;
	r3 += M4(-6.119e-01, -1.122e-02, 3.446e-01, -1.660e-01, 3.123e-01, 2.261e-01, -5.914e-01, -4.044e-02, 2.130e-01, -1.467e-01, -4.975e-01, 1.414e-02, 4.215e-01, 1.173e-01, -2.256e-01, 7.485e-02) * s1_1_1;
	r0 += M4(1.595e-01, -4.854e-02, 6.630e-02, 1.101e-01, -1.193e-02, -2.491e-02, -9.883e-02, -1.509e-02, -1.359e-02, -3.798e-03, -2.287e-01, -2.326e-02, -1.494e-01, 4.652e-01, -2.155e-01, -1.667e-01) * s1_1_2;
	r1 += M4(-1.027e-03, -5.678e-01, -3.369e-01, -7.061e-02, 1.562e-02, -5.385e-02, 1.434e-02, 1.927e-02, 1.389e-02, 4.695e-02, 5.966e-02, 2.496e-04, 2.291e-02, 4.477e-01, 4.732e-02, -5.936e-02) * s1_1_2;
	r2 += M4(-1.711e-02, -3.748e-01, -1.330e-01, -2.147e-01, 1.100e-01, 1.124e-01, -6.594e-03, -3.047e-02, -1.697e-01, -4.109e-02, 3.837e-02, 5.881e-02, -1.987e-01, -2.597e-02, 4.706e-02, 3.986e-02) * s1_1_2;
	r3 += M4(1.501e-01, 1.145e-01, 3.660e-01, -1.181e-01, -6.877e-02, -5.049e-02, -6.648e-02, -1.758e-01, 2.626e-02, -3.912e-02, -9.956e-02, 1.173e-01, -1.789e-01, -2.329e-01, -3.970e-01, 2.381e-01) * s1_1_2;
	r0 += M4(-5.220e-02, 1.010e-01, -3.974e-01, 2.184e-02, 3.265e-01, -3.195e-01, 4.577e-01, 5.030e-02, -2.350e-01, 3.321e-01, 1.931e-01, 3.902e-03, 1.745e-01, 1.813e-01, 2.367e-01, -1.048e-01) * s1_2_0;
	r1 += M4(-1.535e-01, -3.137e-02, 6.808e-02, -1.159e-01, -5.053e-01, -3.693e-01, 1.462e-01, 2.515e-02, 1.522e-01, 5.684e-01, -9.591e-03, 7.844e-02, -6.819e-02, -1.914e-01, -1.421e-01, 2.046e-01) * s1_2_0;
	r2 += M4(1.974e-02, -1.134e-01, 1.901e-01, 4.276e-02, 1.333e-01, 2.929e-01, 1.706e-01, -3.740e-01, -9.625e-02, 1.645e-01, -9.802e-02, -3.808e-01, 2.620e-01, -7.814e-01, -1.229e-01, -7.156e-01) * s1_2_0;
	r3 += M4(-2.839e-01, -1.332e-02, -7.109e-01, 1.301e-01, 2.939e-01, 3.880e-02, 3.173e-02, 1.810e-01, -3.611e-01, -1.390e-02, -6.732e-02, -8.508e-01, 8.018e-02, 3.956e-03, 5.323e-01, -3.222e-01) * s1_2_0;
	r0 += M4(4.186e-01, -2.332e-02, -2.460e-02, -8.078e-02, -5.518e-02, -8.182e-02, 2.607e-01, 1.083e-01, -8.383e-02, -3.514e-01, 1.902e-01, 2.456e-02, -3.038e-01, -1.000e+00, 6.438e-01, 1.132e-01) * s1_2_1;
	r1 += M4(9.694e-02, -2.025e-01, 1.226e-01, 9.323e-01, 5.740e-02, -1.000e+00, 8.036e-02, 3.307e-02, 1.722e-02, 5.910e-01, 2.926e-01, 3.345e-01, 7.666e-03, -2.473e-01, -2.370e-02, 2.604e-01) * s1_2_1;
	r2 += M4(-4.991e-01, 7.002e-01, 3.731e-02, 9.308e-03, 7.719e-02, 1.667e-01, -1.142e-01, -1.538e-01, -1.499e-01, -3.486e-01, 3.360e-02, 1.876e-01, 1.040e-01, 2.662e-02, -1.320e-02, 5.191e-01) * s1_2_1;
	r3 += M4(-2.385e-02, 2.013e-01, 3.878e-01, -7.681e-01, 6.378e-02, 4.768e-01, 1.167e-01, 2.427e-01, 1.334e-01, 8.327e-02, -3.585e-01, -1.830e-01, 4.925e-01, -2.275e-01, 4.023e-01, -1.000e+00) * s1_2_1;
	r0 += M4(2.115e-01, -1.618e-01, -6.721e-01, 4.688e-02, 4.436e-02, 1.302e-01, 4.330e-02, 2.082e-02, -3.547e-02, -3.077e-02, 4.121e-02, 1.883e-02, 5.528e-02, 2.308e-01, -8.619e-02, -1.203e-01) * s1_2_2;
	r1 += M4(-1.501e-02, -3.765e-01, -1.928e-01, -2.881e-01, 1.744e-02, 1.511e-01, 2.141e-02, -6.384e-03, -1.128e-02, 1.058e-02, 6.018e-02, -1.753e-02, -2.105e-02, 1.610e-01, -2.703e-02, -6.789e-02) * s1_2_2;
	r2 += M4(1.132e-01, 2.392e-02, -8.132e-02, 1.155e-02, -1.400e-01, -2.332e-02, 4.563e-02, 4.850e-02, -1.245e-04, -2.201e-02, -9.933e-04, -4.009e-03, 1.172e-01, -3.042e-01, -8.267e-02, 1.284e-01) * s1_2_2;
	r3 += M4(4.273e-01, -1.200e-01, 1.505e-01, 1.285e-01, -1.855e-01, -1.421e-01, -4.638e-01, 1.309e-01, -4.258e-02, 5.380e-02, -3.915e-02, 2.642e-02, -4.984e-01, 2.175e-01, -2.565e-01, -1.000e+00) * s1_2_2;
	s0_0_0 = G[2][xy.y+0][xy.x+0]; s0_0_1 = G[2][xy.y+0][xy.x+1];
	s0_0_2 = G[2][xy.y+0][xy.x+2]; s0_1_0 = G[2][xy.y+1][xy.x+0];
	s0_1_1 = G[2][xy.y+1][xy.x+1]; s0_1_2 = G[2][xy.y+1][xy.x+2];
	s0_2_0 = G[2][xy.y+2][xy.x+0]; s0_2_1 = G[2][xy.y+2][xy.x+1];
	s0_2_2 = G[2][xy.y+2][xy.x+2]; s1_0_0 = G[3][xy.y+0][xy.x+0];
	s1_0_1 = G[3][xy.y+0][xy.x+1]; s1_0_2 = G[3][xy.y+0][xy.x+2];
	s1_1_0 = G[3][xy.y+1][xy.x+0]; s1_1_1 = G[3][xy.y+1][xy.x+1];
	s1_1_2 = G[3][xy.y+1][xy.x+2]; s1_2_0 = G[3][xy.y+2][xy.x+0];
	s1_2_1 = G[3][xy.y+2][xy.x+1]; s1_2_2 = G[3][xy.y+2][xy.x+2];
	r0 += M4(-6.915e-02, 1.800e-01, 2.665e-02, 2.598e-01, 8.668e-02, -2.710e-01, 4.067e-01, 1.635e-02, -1.399e-01, -2.501e-01, 3.721e-01, 1.943e-01, 1.318e-01, 8.918e-02, -1.705e-01, -5.159e-02) * s0_0_0;
	r1 += M4(2.815e-02, 3.961e-01, -3.263e-01, 4.367e-02, -1.950e-01, 3.755e-01, -4.980e-01, -8.169e-03, 1.326e-03, 3.075e-01, -1.000e+00, -4.995e-02, -8.061e-02, -5.047e-01, -2.498e-01, 2.039e-02) * s0_0_0;
	r2 += M4(-5.524e-02, 2.266e-01, 1.485e-01, 2.211e-01, 2.538e-01, -2.993e-02, -7.952e-02, 7.582e-02, 2.265e-01, -7.637e-02, 1.833e-01, 6.798e-02, -2.696e-01, 2.101e-01, -2.132e-01, -1.249e-01) * s0_0_0;
	r3 += M4(-3.562e-01, 5.553e-02, -1.496e-01, 1.314e-01, 5.438e-01, -7.992e-02, -3.519e-02, -6.021e-01, -1.372e-01, 6.050e-02, -5.007e-01, -2.675e-01, 2.303e-01, 5.196e-03, -4.422e-01, -6.187e-02) * s0_0_0;
	r0 += M4(-2.529e-01, -2.578e-01, 5.201e-01, 9.521e-02, 1.756e-02, 5.810e-01, -3.822e-01, 1.327e-02, -7.911e-02, -1.516e-02, -1.209e-01, 4.117e-02, 1.563e-01, 7.095e-02, 1.375e-03, -2.082e-01) * s0_0_1;
	r1 += M4(1.229e-01, -2.498e-01, -1.681e-01, 4.053e-02, 3.344e-01, -6.975e-01, 2.038e-01, -3.045e-03, 4.384e-02, 1.429e-01, -2.317e-01, -3.793e-02, -3.844e-02, -6.087e-02, 3.213e-01, 8.544e-03) * s0_0_1;
	r2 += M4(3.494e-01, 1.988e-01, 2.831e-02, 6.280e-02, -2.511e-01, 3.313e-01, -5.279e-01, 5.054e-01, -4.450e-02, -2.603e-01, -2.100e-01, 1.848e-01, -1.567e-01, -5.906e-03, -3.211e-02, 6.272e-02) * s0_0_1;
	r3 += M4(-3.369e-01, -2.267e-01, -1.609e-01, -1.144e-01, 1.881e-01, -2.386e-01, -1.000e+00, 3.044e-01, -1.571e-02, -7.454e-02, 1.000e+00, -2.095e-02, 1.404e-01, 1.830e-02, -8.084e-01, 5.816e-02) * s0_0_1;
	r0 += M4(-1.244e-01, 7.383e-02, 4.138e-02, -4.693e-02, 9.560e-01, -9.821e-03, 8.270e-01, 4.034e-03, 5.011e-02, -1.577e-01, 1.031e-01, 1.061e-02, 3.228e-02, 9.420e-02, -2.793e-02, 2.851e-02) * s0_0_2;
	r1 += M4(2.765e-02, 2.747e-01, -8.168e-02, -9.612e-03, 8.321e-03, -3.417e-01, 6.262e-01, 8.217e-02, -3.450e-02, -2.276e-01, -1.497e-01, 1.073e-02, 1.464e-03, 1.881e-02, 5.243e-02, -5.335e-03) * s0_0_2;
	r2 += M4(3.604e-02, 1.382e-01, -3.462e-02, 8.918e-02, -2.224e-01, 8.106e-01, 4.568e-01, 2.196e-01, 7.203e-02, -2.259e-01, 6.585e-02, -6.670e-02, -1.671e-01, -9.388e-02, 5.662e-03, 3.791e-02) * s0_0_2;
	r3 += M4(-2.057e-01, -8.445e-02, -2.501e-01, 3.076e-01, -8.465e-01, 2.787e-01, 4.658e-01, 7.618e-01, 1.039e-01, -1.808e-02, 4.301e-01, -3.464e-02, 1.511e-02, 8.844e-02, -1.190e-01, -1.112e-01) * s0_0_2;
	r0 += M4(1.791e-01, 3.951e-01, 1.948e-01, -1.611e-01, 2.816e-01, -1.561e-02, -1.787e-01, -2.766e-02, -6.269e-01, 1.000e+00, -2.442e-01, -1.843e-01, -3.154e-02, -6.022e-01, -1.070e-01, 2.836e-02) * s0_1_0;
	r1 += M4(-1.617e-01, -3.829e-01, -1.152e-01, 2.477e-02, -9.831e-02, -2.359e-01, 1.831e-01, 5.669e-02, -1.297e-02, 1.000e+00, 7.204e-01, 3.127e-02, 1.000e+00, -1.000e+00, -7.610e-01, -1.328e-01) * s0_1_0;
	r2 += M4(4.762e-01, -2.856e-01, -1.091e-01, 1.550e-01, -2.519e-01, -4.177e-01, -1.644e-01, -1.124e-01, -1.886e-01, 5.988e-02, -3.374e-01, -4.930e-01, -2.660e-01, -2.527e-01, -1.391e-01, 1.992e-01) * s0_1_0;
	r3 += M4(-2.010e-01, -1.920e-02, -1.808e-01, -6.934e-01, 4.581e-02, 4.835e-02, 4.015e-01, 8.177e-01, 2.339e-01, 3.272e-01, 1.364e-01, 1.910e-01, 7.252e-01, -1.924e-02, -7.575e-02, 4.334e-01) * s0_1_0;
	r0 += M4(-3.892e-01, -5.548e-01, 1.079e-01, 4.270e-02, -5.746e-01, -1.188e-01, 1.676e-01, -1.104e-01, 1.195e-01, -6.962e-01, -4.243e-02, -5.203e-02, 2.157e-01, -1.000e+00, -2.933e-01, 7.104e-02) * s0_1_1;
	r1 += M4(-4.798e-02, 3.651e-01, -3.839e-01, -1.233e-01, -9.986e-02, 5.434e-01, -3.429e-02, 5.216e-02, -1.517e-04, -3.707e-01, 9.159e-02, 1.049e-01, -6.864e-02, 3.327e-01, 1.103e-01, 6.573e-02) * s0_1_1;
	r2 += M4(-2.640e-01, 2.435e-01, 3.977e-01, -1.713e-01, -3.787e-03, 8.696e-04, 1.548e-01, 1.203e-01, 5.549e-02, -4.977e-02, 3.762e-01, 2.140e-01, 1.651e-01, -2.186e-01, -3.877e-01, -4.262e-02) * s0_1_1;
	r3 += M4(-2.924e-01, -5.814e-01, -1.000e+00, -1.475e-01, -2.281e-02, 5.499e-03, 4.702e-02, 1.797e-01, -1.761e-01, -6.333e-01, 2.908e-01, -2.294e-01, -5.443e-01, -1.000e+00, -1.000e+00, 5.110e-02) * s0_1_1;
	r0 += M4(-1.139e-01, -1.982e-01, 2.605e-01, -4.439e-02, -2.303e-01, -2.931e-01, -2.583e-01, 6.218e-03, -2.481e-02, -1.760e-01, -2.724e-01, -4.456e-02, 5.566e-02, 6.702e-02, -7.953e-02, 4.855e-02) * s0_1_2;
	r1 += M4(-7.546e-03, 4.280e-02, 3.062e-01, 2.477e-03, 8.253e-02, 5.306e-01, -5.595e-01, 4.043e-02, -2.598e-02, -2.191e-02, -1.721e-01, 1.012e-02, 1.154e-02, -1.042e-01, -5.001e-02, -3.037e-02) * s0_1_2;
	r2 += M4(3.983e-01, 1.899e-01, 5.978e-02, 3.031e-02, 1.274e-01, -1.904e-01, -1.252e-01, 1.690e-01, -2.172e-01, -3.209e-02, 7.447e-02, -1.189e-01, 2.549e-02, -1.028e-01, -4.580e-02, -2.518e-03) * s0_1_2;
	r3 += M4(1.638e-01, 6.365e-02, 5.199e-01, -1.302e-01, -2.868e-01, 7.564e-02, -7.870e-01, -3.458e-01, -1.029e-02, 2.817e-02, 5.324e-02, -2.866e-01, -1.826e-01, -5.573e-02, -2.010e-01, -1.179e-02) * s0_1_2;
	r0 += M4(1.806e-01, -1.529e-01, -3.707e-01, 6.022e-02, -1.404e-01, 3.840e-02, 1.744e-01, 3.920e-03, 2.493e-02, 3.491e-02, 1.255e-01, -2.306e-02, -2.803e-01, 7.960e-02, 3.636e-01, -2.831e-02) * s0_2_0;
	r1 += M4(5.948e-02, 3.890e-01, 7.212e-02, 1.012e-01, 1.516e-01, -8.635e-02, 1.452e-01, -1.810e-02, 8.509e-02, -1.532e-01, 7.813e-02, -7.764e-03, -1.798e-01, -2.922e-01, 3.076e-02, 2.500e-02) * s0_2_0;
	r2 += M4(1.475e-01, -3.567e-01, 1.041e-01, 1.100e-01, 1.739e-01, 1.321e-02, -1.239e-01, -3.017e-01, -9.416e-02, 8.589e-02, -2.076e-01, 1.270e-01, 1.632e-01, 3.135e-01, 7.781e-02, 5.769e-02) * s0_2_0;
	r3 += M4(-3.225e-01, -6.015e-02, -4.455e-01, -5.313e-01, -1.338e-02, -4.181e-02, 1.171e-01, -3.823e-01, -8.668e-02, 1.258e-01, -4.102e-01, -4.514e-01, -1.234e-01, -7.209e-02, 4.297e-01, -1.000e+00) * s0_2_0;
	r0 += M4(-2.396e-02, -7.306e-01, -4.292e-01, 2.848e-02, 8.630e-02, -4.242e-01, -2.476e-01, -3.206e-02, 3.995e-02, 4.394e-01, 1.176e-01, -5.677e-02, -6.242e-02, 8.101e-02, 1.882e-01, 4.119e-02) * s0_2_1;
	r1 += M4(-1.632e-02, -2.803e-01, 4.911e-01, -6.306e-02, -7.192e-02, -1.162e-01, -6.730e-01, -1.161e-01, 4.486e-02, -2.100e-01, -1.388e-01, 7.932e-02, 2.479e-02, 6.713e-02, -2.625e-01, -7.267e-02) * s0_2_1;
	r2 += M4(-1.311e-01, 5.942e-02, 8.625e-02, -2.908e-01, 9.260e-02, 7.667e-02, 4.421e-02, 2.319e-01, -3.767e-02, -1.737e-01, -6.942e-02, -1.224e-02, 1.946e-02, 2.960e-01, 4.279e-02, 4.267e-02) * s0_2_1;
	r3 += M4(-7.761e-02, -9.597e-02, -3.616e-01, 1.000e+00, -2.557e-01, 2.669e-02, -1.416e-01, -5.756e-01, 3.422e-01, -3.976e-02, -5.736e-02, 2.780e-01, -3.053e-01, -1.322e-01, 5.479e-01, -4.800e-01) * s0_2_1;
	r0 += M4(-7.098e-02, 1.018e-01, 5.225e-02, 9.808e-02, -2.197e-01, 1.960e-03, -6.043e-01, 6.944e-02, -1.292e-02, -3.319e-02, 7.499e-02, -2.308e-02, 6.591e-02, 5.994e-03, -2.245e-02, -4.322e-02) * s0_2_2;
	r1 += M4(4.992e-02, 3.381e-02, 2.357e-01, 1.678e-02, -1.194e-01, -6.886e-02, 4.867e-02, -9.116e-02, -2.597e-02, -5.559e-02, 9.369e-02, -3.786e-02, -1.419e-02, 3.912e-02, -1.392e-01, 3.046e-02) * s0_2_2;
	r2 += M4(1.141e-02, -2.724e-01, -8.101e-02, -4.079e-02, 1.356e-01, -9.240e-01, 1.504e-01, -2.263e-02, -2.229e-02, 5.759e-02, 1.678e-02, -4.425e-02, -4.432e-03, 2.348e-01, 8.771e-03, 4.824e-02) * s0_2_2;
	r3 += M4(5.566e-01, -2.263e-01, -6.826e-01, 2.339e-01, -3.294e-01, -1.409e-01, 2.630e-01, 1.884e-01, -6.263e-02, 2.107e-02, -2.580e-02, -9.009e-02, -1.479e-01, 8.786e-02, 2.979e-01, 7.900e-02) * s0_2_2;
	r0 += M4(1.379e-02, -4.929e-03, 1.073e-01, -2.966e-02, 6.485e-02, -1.135e-06, 4.607e-02, 3.135e-01, 8.463e-02, 5.666e-02, -3.327e-02, 4.033e-02, -1.541e-02, -6.251e-02, -6.573e-02, 1.173e-01) * s1_0_0;
	r1 += M4(-1.518e-02, -2.812e-02, -3.872e-02, -1.656e-02, 4.937e-02, -3.887e-01, -4.786e-01, -4.193e-02, -2.476e-02, 8.868e-02, 1.596e-01, 2.472e-02, 2.134e-02, 1.411e-01, -1.889e-01, -4.689e-02) * s1_0_0;
	r2 += M4(-8.940e-02, 7.354e-02, -2.427e-02, 2.231e-02, -1.127e-02, 2.123e-01, 1.151e-01, -2.392e-01, 4.251e-02, -7.506e-02, -2.449e-02, 2.111e-01, -2.437e-01, -4.892e-01, -3.675e-01, -1.811e-01) * s1_0_0;
	r3 += M4(-2.999e-02, 2.271e-03, -1.185e-02, 8.989e-02, -2.173e-01, 6.970e-02, 3.330e-01, -1.448e-02, 1.350e-01, 2.407e-02, 4.910e-02, -3.162e-02, 2.789e-01, 1.291e-03, 4.031e-01, -8.060e-02) * s1_0_0;
	r0 += M4(-6.838e-02, -1.393e-01, 3.099e-01, 1.865e-02, 4.715e-02, -1.000e+00, 3.326e-01, -1.222e-01, -1.688e-01, -1.000e+00, 2.124e-01, 1.336e-01, -6.117e-02, -8.709e-03, 2.526e-02, 1.922e-03) * s1_0_1;
	r1 += M4(-2.405e-02, -5.172e-01, -1.516e-01, 1.012e-02, -1.140e-01, -6.753e-01, -1.000e+00, 9.142e-02, -1.000e+00, -3.884e-01, -1.947e-01, 5.505e-02, -5.372e-02, -1.028e-01, 1.765e-01, -1.127e-02) * s1_0_1;
	r2 += M4(7.116e-02, -1.431e-01, -7.398e-02, 4.946e-02, 1.913e-02, 2.958e-01, 4.906e-01, 5.098e-01, 2.371e-01, 1.963e-01, -6.653e-02, -1.378e-01, 3.700e-01, -1.041e-01, -1.790e-03, -1.474e-01) * s1_0_1;
	r3 += M4(-1.265e-01, 5.563e-03, -5.552e-02, 5.699e-02, 3.906e-01, -2.744e-01, 2.184e-01, 1.724e-01, -2.865e-01, 7.087e-02, 4.720e-01, -1.859e-01, -7.129e-02, -3.982e-03, -2.855e-01, -6.738e-02) * s1_0_1;
	r0 += M4(9.008e-02, -6.368e-02, 2.588e-01, 6.202e-02, 2.074e-02, -2.477e-01, 9.251e-03, 1.529e-01, 1.575e-02, 3.509e-01, -6.493e-02, -1.482e-01, -1.016e-01, 1.552e-01, 5.459e-03, -3.199e-02) * s1_0_2;
	r1 += M4(-2.606e-02, 7.427e-02, -6.090e-02, -3.232e-02, 5.147e-02, -6.356e-02, 1.574e-01, -1.040e-01, 6.578e-02, -6.991e-01, -9.251e-02, -5.054e-02, -9.999e-03, 3.106e-02, -1.302e-01, 4.518e-03) * s1_0_2;
	r2 += M4(1.396e-01, 1.454e-02, -2.964e-02, -1.818e-01, -1.538e-01, 1.135e-01, 5.550e-02, 1.072e-01, 2.766e-01, 7.098e-02, -2.802e-01, 1.057e-01, 5.150e-02, 5.369e-02, 1.350e-01, 9.933e-02) * s1_0_2;
	r3 += M4(-1.599e-01, -8.890e-03, 1.000e+00, -1.673e-01, -1.939e-01, 1.496e-01, -1.000e+00, 2.659e-01, 5.392e-02, 4.284e-02, -1.472e-01, 7.001e-01, -2.976e-01, -4.594e-02, 2.817e-01, -1.142e-01) * s1_0_2;
	r0 += M4(-3.611e-02, -6.861e-02, -2.752e-02, -4.391e-02, -2.168e-01, -2.168e-01, 1.965e-01, 1.622e-01, 1.839e-02, -1.345e-01, -1.961e-01, 1.970e-02, 7.690e-02, 5.996e-01, 1.000e+00, 8.756e-01) * s1_1_0;
	r1 += M4(9.690e-03, 3.470e-02, -5.634e-02, -5.050e-02, 4.276e-02, -4.902e-01, -5.239e-02, -2.637e-02, -2.146e-02, -1.461e-01, -2.046e-03, 7.910e-03, 8.581e-03, -7.389e-01, -4.268e-01, 2.954e-03) * s1_1_0;
	r2 += M4(4.485e-02, 1.937e-01, 5.807e-02, -1.730e-01, 1.311e-02, 1.665e-03, 2.818e-01, 2.550e-01, 1.947e-01, 1.230e-01, -4.453e-03, 4.867e-03, 3.626e-01, -4.611e-01, 1.964e-01, -1.038e-01) * s1_1_0;
	r3 += M4(-7.236e-02, 1.751e-02, 6.160e-02, 7.387e-03, 3.894e-01, -7.105e-02, 3.991e-02, 3.987e-02, 1.096e-02, -4.931e-03, -3.609e-02, 3.649e-03, 1.902e-02, 2.060e-01, -3.935e-01, -2.465e-02) * s1_1_0;
	r0 += M4(5.617e-02, 4.415e-01, -2.662e-01, -3.038e-01, 1.029e-01, 2.567e-01, -1.000e+00, -8.010e-02, 1.951e-01, 5.907e-01, 9.574e-02, -2.277e-02, -1.659e-02, -2.599e-01, -5.703e-02, -1.273e-01) * s1_1_1;
	r1 += M4(6.068e-02, -1.000e+00, -1.127e-01, 7.926e-02, -9.976e-02, 1.137e-01, -3.437e-01, 1.316e-01, 2.005e-01, 2.045e-01, -8.302e-02, -1.479e-01, 1.225e-01, 3.851e-01, 2.471e-01, 8.682e-02) * s1_1_1;
	r2 += M4(-1.913e-01, -6.281e-02, 9.313e-02, -4.504e-01, 4.138e-02, -5.434e-01, -3.174e-01, 7.166e-02, -1.838e-01, -2.516e-01, -3.561e-03, -2.205e-01, -6.346e-03, 4.795e-01, -2.052e-01, -4.994e-02) * s1_1_1;
	r3 += M4(4.359e-01, 1.754e-02, -3.149e-01, 6.924e-02, -3.617e-01, 2.902e-01, -6.261e-02, -2.955e-01, 2.055e-01, 8.338e-02, -1.309e-01, -3.901e-01, 1.063e-01, -1.917e-01, 6.302e-01, -1.487e-01) * s1_1_1;
	r0 += M4(-3.701e-01, -8.515e-01, 6.256e-01, 2.350e-01, -2.773e-01, 4.128e-01, 5.939e-02, 1.236e-01, 2.737e-02, 1.011e-01, -1.028e-01, -7.152e-02, -8.972e-02, -5.917e-03, 3.270e-01, 3.270e-02) * s1_1_2;
	r1 += M4(8.533e-02, -1.000e+00, -2.575e-01, -6.360e-02, -5.375e-03, -1.513e-01, -1.945e-01, -5.040e-02, -3.653e-02, 1.728e-01, 5.460e-02, 9.839e-02, -3.468e-02, 8.188e-02, 4.575e-02, -2.318e-02) * s1_1_2;
	r2 += M4(-3.012e-01, 1.313e-01, -1.539e-01, -7.468e-02, -9.530e-03, -1.674e-01, 4.184e-02, 8.094e-02, -4.706e-02, -1.656e-01, -6.533e-03, 2.265e-01, 1.962e-01, 8.668e-02, 1.249e-01, 1.312e-02) * s1_1_2;
	r3 += M4(-5.342e-01, 2.574e-01, -1.750e-02, -2.927e-01, -2.849e-01, -1.696e-01, 6.068e-02, 3.117e-01, -4.315e-02, 1.742e-01, -3.232e-01, -1.000e+00, -3.333e-03, 1.766e-01, -1.899e-01, -4.516e-02) * s1_1_2;
	r0 += M4(-2.456e-02, -1.121e-01, 1.432e-01, -6.239e-03, -6.514e-02, -3.976e-01, -1.738e-01, 9.801e-02, 3.139e-03, -3.604e-03, 3.884e-03, 2.206e-03, 3.673e-01, 5.781e-01, -3.875e-01, -1.101e-01) * s1_2_0;
	r1 += M4(-2.167e-02, 2.289e-01, -1.253e-03, 2.742e-02, -4.823e-02, 2.055e-01, 2.371e-01, 6.793e-02, -5.371e-04, 2.610e-02, 4.019e-02, -6.918e-03, -7.429e-02, -6.499e-02, -2.965e-01, -7.130e-02) * s1_2_0;
	r2 += M4(-1.518e-02, -2.648e-01, 2.346e-02, -7.885e-02, 2.203e-01, -1.000e+00, -1.284e-01, -1.062e-02, -3.366e-02, 2.630e-02, -2.585e-02, -6.386e-03, 8.297e-03, -1.538e-01, 4.647e-01, 3.677e-01) * s1_2_0;
	r3 += M4(-3.194e-02, 1.407e-02, 7.798e-02, -1.909e-01, 1.193e-01, 6.491e-02, -2.921e-02, -9.607e-02, 2.750e-02, -8.941e-03, 1.324e-02, 5.721e-02, -4.805e-01, 1.392e-01, 4.166e-02, 1.000e+00) * s1_2_0;
	r0 += M4(-2.823e-01, -1.000e+00, -1.713e-01, 1.067e-01, -6.091e-02, 2.046e-01, 2.300e-01, -9.594e-02, 4.753e-02, -1.294e-01, -8.239e-02, 2.001e-03, 5.847e-02, 7.322e-02, 3.224e-02, 7.287e-02) * s1_2_1;
	r1 += M4(1.116e-02, -3.739e-01, 2.332e-01, -3.429e-02, 4.810e-02, 5.270e-02, -7.953e-03, 4.070e-02, -1.349e-02, -1.059e-01, 7.997e-02, 3.446e-02, 2.714e-02, -8.984e-02, -1.884e-04, 1.051e-01) * s1_2_1;
	r2 += M4(-1.947e-03, 5.927e-02, -1.914e-02, 1.000e+00, -8.182e-03, 1.000e+00, -6.391e-02, 5.740e-02, -2.224e-02, 1.854e-01, -3.075e-02, 3.462e-03, -3.651e-02, 7.043e-01, 1.036e-02, -1.410e-01) * s1_2_1;
	r3 += M4(-3.966e-01, 5.676e-02, -3.735e-02, 5.958e-01, 8.616e-02, 9.413e-03, 2.127e-01, -1.000e+00, 9.907e-02, -6.398e-04, -7.888e-02, 8.841e-02, -1.687e-01, -1.248e-01, 1.554e-01, 1.000e+00) * s1_2_1;
	r0 += M4(5.277e-02, 4.522e-01, 1.347e-01, -3.081e-02, 1.109e-01, -3.926e-02, -1.383e-01, 7.298e-02, 1.348e-03, -1.204e-01, -1.232e-01, 1.847e-02, -7.776e-02, -5.345e-02, -4.901e-02, -6.947e-05) * s1_2_2;
	r1 += M4(1.004e-02, -5.475e-03, 1.098e-01, 2.799e-02, -2.598e-02, 9.594e-02, -4.562e-02, -1.061e-01, -3.815e-03, 2.053e-03, 7.284e-02, 3.182e-02, 8.219e-03, -1.418e-01, -1.648e-01, -1.711e-02) * s1_2_2;
	r2 += M4(9.390e-03, -6.394e-01, -7.793e-03, 3.791e-02, -4.327e-02, -9.776e-01, 2.785e-02, 4.287e-01, -9.222e-03, 2.354e-01, -3.204e-02, 5.148e-02, 7.415e-02, -5.693e-01, 5.975e-02, 1.832e-02) * s1_2_2;
	r3 += M4(1.174e-01, -2.724e-01, 1.479e-01, -1.000e+00, -8.323e-03, -1.844e-02, -1.411e-01, 4.921e-02, 8.630e-02, -2.106e-02, 2.858e-02, -1.931e-01, -1.536e-01, -2.808e-02, 9.866e-02, -3.045e-01) * s1_2_2;
	r0 = clamp(r0, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0));
	r1 = clamp(r1, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r1));
	r2 = clamp(r2, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r2));
	r3 = clamp(r3, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r3));
}

//!DESC CuNNy-4x16-SOFT-conv2
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND conv1
//!BIND LUMA
//!SAVE conv2
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
shared V4 G[4][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(2, 2) + ivec2(1, 1)) * conv1_pt;
			V4 sr0 = V4(conv1_gather(p, 0));
			V4 sg0 = V4(conv1_gather(p, 1));
			V4 sb0 = V4(conv1_gather(p, 2));
			V4 sa0 = V4(conv1_gather(p, 3));
			G[0][ay][ax] = V4(sr0.w, sg0.w, sb0.w, sa0.w);
			G[1][ay][ax] = V4(sr0.z, sg0.z, sb0.z, sa0.z);
			G[2][ay][ax] = V4(sr0.x, sg0.x, sb0.x, sa0.x);
			G[3][ay][ax] = V4(sr0.y, sg0.y, sb0.y, sa0.y);
		}
	}
	barrier();
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0, r1, r2, r3;
	r0 = V4(0.0); r1 = V4(0.0); r2 = V4(0.0); r3 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2]; s1_0_0 = G[1][xy.y+0][xy.x+0];
	s1_0_1 = G[1][xy.y+0][xy.x+1]; s1_0_2 = G[1][xy.y+0][xy.x+2];
	s1_1_0 = G[1][xy.y+1][xy.x+0]; s1_1_1 = G[1][xy.y+1][xy.x+1];
	s1_1_2 = G[1][xy.y+1][xy.x+2]; s1_2_0 = G[1][xy.y+2][xy.x+0];
	s1_2_1 = G[1][xy.y+2][xy.x+1]; s1_2_2 = G[1][xy.y+2][xy.x+2];
	r0 += M4(-9.119e-03, -3.542e-03, -1.308e-01, -1.326e-01, 5.586e-02, -7.212e-02, 1.989e-01, 3.019e-02, 1.263e-01, -3.022e-02, 5.464e-02, 1.338e-01, 6.044e-02, 1.966e-02, 1.499e-01, -4.706e-01) * s0_0_0;
	r1 += M4(-3.033e-02, 2.100e-03, -3.907e-02, -2.036e-01, -2.747e-02, -1.422e-03, 1.657e-02, 2.054e-01, 1.799e-03, -3.674e-03, 1.410e-01, 3.247e-01, 4.910e-02, -2.088e-03, -5.399e-03, -6.006e-01) * s0_0_0;
	r2 += M4(4.221e-02, 1.273e-03, 1.511e-02, -9.546e-02, -7.923e-02, 3.306e-02, 1.313e-02, -7.166e-02, 4.216e-02, 2.762e-03, 4.434e-02, 4.896e-02, -1.559e-02, 1.850e-02, -2.413e-02, -4.122e-02) * s0_0_0;
	r3 += M4(6.772e-05, -1.587e-01, 2.230e-02, 1.018e-01, 6.927e-03, 9.507e-02, 8.016e-02, -9.305e-02, 2.824e-02, -1.494e-02, 5.091e-02, 2.412e-01, -2.065e-02, 2.688e-02, -9.194e-02, 1.405e-01) * s0_0_0;
	r0 += M4(2.191e-01, -4.919e-02, -2.498e-01, -5.167e-02, -1.298e-01, -5.303e-02, -9.677e-02, 3.829e-02, 3.225e-01, 5.794e-02, 7.351e-02, 1.358e-01, -1.447e-01, 5.009e-02, 6.185e-02, -3.867e-02) * s0_0_1;
	r1 += M4(-7.682e-02, 9.710e-03, 2.772e-02, -3.229e-01, -3.330e-02, 1.826e-02, 1.744e-01, 1.144e-01, 3.588e-02, -5.230e-02, 2.507e-01, 3.022e-01, 1.102e-01, 1.029e-02, -1.246e-01, -4.794e-01) * s0_0_1;
	r2 += M4(-7.724e-02, -1.465e-02, -6.385e-02, -1.918e-01, -1.513e-01, 1.017e-01, 3.239e-02, -3.187e-02, 1.888e-01, 8.389e-02, -4.607e-03, -1.666e-01, 3.055e-02, -3.083e-02, -6.535e-03, 2.043e-01) * s0_0_1;
	r3 += M4(2.129e-03, -2.465e-02, -1.406e-01, -5.165e-01, 5.171e-02, 2.009e-01, -8.750e-02, -2.889e-01, -2.826e-03, 4.866e-02, 1.331e-01, -1.387e-01, -6.120e-02, -8.144e-02, 8.325e-02, -2.532e-01) * s0_0_1;
	r0 += M4(-2.106e-01, -4.324e-02, -5.068e-02, 9.665e-02, 1.600e-02, -6.459e-02, -1.341e-01, 1.265e-02, -1.024e-01, -8.355e-02, -1.804e-02, 6.562e-02, 5.937e-02, -4.759e-02, 8.973e-02, 1.164e-02) * s0_0_2;
	r1 += M4(7.033e-03, -2.496e-02, -7.384e-03, -1.437e-01, -6.260e-02, 1.733e-02, 1.141e-01, 2.667e-01, -2.904e-02, -2.374e-03, 6.907e-02, 5.650e-02, -1.124e-01, 3.018e-03, -9.692e-02, -3.165e-01) * s0_0_2;
	r2 += M4(-4.595e-02, 6.576e-02, -2.606e-03, 7.146e-02, -1.880e-01, 4.712e-02, 1.925e-02, -6.131e-02, -1.160e-01, 1.005e-02, 1.757e-02, 2.719e-01, -6.976e-02, -3.107e-02, -3.626e-02, 6.340e-02) * s0_0_2;
	r3 += M4(1.754e-02, -1.500e-02, 1.768e-02, -1.327e-01, 5.071e-02, 4.683e-02, 7.505e-02, 1.291e-01, 3.151e-02, 9.854e-03, 2.499e-01, -1.621e-01, -2.033e-02, -5.016e-02, -1.676e-01, 1.758e-01) * s0_0_2;
	r0 += M4(-6.347e-02, 4.897e-02, -1.459e-01, 4.969e-02, 1.166e-01, -3.259e-01, 1.617e-01, -2.330e-01, 9.007e-02, 5.346e-02, 4.467e-02, 1.119e-01, 1.615e-01, 7.384e-02, 6.809e-02, -4.161e-01) * s0_1_0;
	r1 += M4(-7.787e-02, -7.693e-03, 6.441e-02, -2.036e-01, -5.849e-02, -1.768e-02, 1.589e-01, 1.154e-01, 1.527e-02, 1.007e-01, 1.429e-01, 2.216e-01, -1.438e-01, 5.681e-02, 1.243e-01, -5.076e-01) * s0_1_0;
	r2 += M4(3.998e-02, -1.241e-02, -2.689e-03, -8.190e-02, -1.157e-01, 4.573e-02, 9.821e-02, -6.912e-01, -2.259e-02, 7.435e-04, 4.419e-02, 1.069e-01, 1.120e-01, -2.704e-02, 3.210e-03, -2.850e-01) * s0_1_0;
	r3 += M4(-6.806e-03, 3.534e-01, -3.573e-02, 1.194e-01, -5.155e-02, 3.701e-01, 2.827e-01, -5.560e-01, 3.888e-02, 2.928e-01, 1.776e-01, 3.708e-01, -1.863e-02, -1.133e-01, -2.125e-01, 1.742e-01) * s0_1_0;
	r0 += M4(-2.694e-01, -4.364e-01, -1.069e-01, -2.548e-01, -2.571e-01, -6.248e-01, -3.565e-01, -7.240e-02, -2.036e-01, 4.304e-02, -1.012e-01, -9.842e-02, 2.915e-01, 2.802e-01, -1.211e-01, -1.000e+00) * s0_1_1;
	r1 += M4(-4.309e-01, -2.477e-02, 1.139e-01, -1.519e-01, -1.135e-01, 6.351e-02, 2.340e-01, 1.387e-01, -2.177e-01, 4.399e-02, 1.414e-01, -5.552e-01, 3.890e-01, -5.144e-02, -8.103e-02, 4.895e-01) * s0_1_1;
	r2 += M4(9.239e-02, -1.398e-01, 1.645e-02, -3.398e-01, -3.867e-01, 7.828e-03, 7.066e-02, -2.318e-01, -3.657e-02, -7.849e-02, 2.278e-02, 1.322e-01, -1.818e-01, -9.183e-02, -7.339e-02, 3.517e-01) * s0_1_1;
	r3 += M4(-1.242e-01, 1.121e-01, 3.780e-01, 2.474e-01, -2.626e-01, -2.741e-01, 8.428e-02, 6.482e-01, 3.229e-02, -1.259e-01, 2.088e-01, 3.744e-01, -1.427e-01, 3.558e-01, -5.518e-01, -4.043e-01) * s0_1_1;
	r0 += M4(1.500e-01, -1.729e-02, -8.186e-02, -2.755e-02, -1.735e-01, -9.316e-02, -1.030e-01, -1.028e-01, 1.833e-01, -2.566e-02, 8.486e-02, -2.017e-02, -1.838e-01, 1.012e-01, -1.165e-01, 2.637e-01) * s0_1_2;
	r1 += M4(-4.997e-02, -1.908e-02, 8.273e-02, -5.434e-01, 3.252e-04, 5.915e-03, 3.503e-02, 4.352e-01, 2.750e-02, 5.807e-02, 5.342e-02, 4.682e-01, -2.586e-01, -2.252e-03, 2.326e-02, -4.712e-01) * s0_1_2;
	r2 += M4(7.766e-02, 8.275e-02, 6.638e-02, 1.646e-01, -1.465e-01, -2.000e-02, 9.472e-02, 4.814e-02, 6.979e-02, 1.652e-03, 2.686e-02, 2.233e-01, 4.926e-02, 1.022e-01, -8.727e-02, 1.103e-01) * s0_1_2;
	r3 += M4(4.522e-02, -1.059e-01, 2.842e-01, -1.726e-01, 8.190e-03, -1.307e-01, 9.876e-02, -5.950e-02, 8.011e-02, 1.913e-02, 1.964e-01, 4.391e-02, 1.827e-02, 1.272e-01, -3.042e-01, -8.556e-02) * s0_1_2;
	r0 += M4(3.719e-02, 1.978e-02, -5.604e-02, -4.110e-02, -6.747e-02, -1.206e-02, 1.657e-01, -8.252e-02, 8.087e-02, -1.121e-01, -1.177e-01, -6.222e-02, 9.465e-02, 8.533e-02, 1.989e-01, 5.968e-02) * s0_2_0;
	r1 += M4(-7.198e-03, -2.162e-02, -3.508e-02, -4.716e-01, -2.032e-01, 1.077e-01, 1.725e-01, 1.861e-01, 1.047e-01, 1.554e-02, 1.427e-01, 3.884e-01, -2.466e-01, -2.086e-02, -1.030e-01, -4.193e-01) * s0_2_0;
	r2 += M4(7.345e-02, 1.290e-02, -1.386e-02, -1.676e-02, -1.223e-01, 9.989e-03, 8.531e-02, 3.394e-01, -9.070e-02, -1.155e-02, 4.307e-02, 3.357e-02, -9.702e-03, -3.103e-02, -6.425e-02, -2.762e-01) * s0_2_0;
	r3 += M4(-2.095e-02, -2.927e-01, -9.051e-02, -1.857e-01, 5.630e-03, 1.945e-01, -1.651e-02, 1.970e-02, 4.714e-02, 4.601e-02, 9.427e-02, 1.449e-01, -1.869e-02, -8.953e-02, -1.684e-01, -4.049e-01) * s0_2_0;
	r0 += M4(-2.943e-01, -3.759e-02, -6.312e-02, -5.744e-01, 4.884e-02, -6.024e-02, 5.531e-02, 6.102e-03, 4.303e-02, -1.297e-01, 5.675e-04, 2.504e-02, -1.637e-02, 4.120e-01, -1.812e-01, 1.774e-01) * s0_2_1;
	r1 += M4(2.210e-01, 1.603e-03, -1.513e-01, 1.685e-01, -6.928e-02, 6.206e-02, 9.933e-02, 1.823e-01, -1.489e-01, 3.733e-02, 2.887e-01, 2.207e-01, -2.319e-01, -4.099e-01, -1.000e+00, 3.632e-01) * s0_2_1;
	r2 += M4(-3.996e-02, 2.229e-03, 8.928e-02, -2.622e-01, -1.197e-01, -3.879e-02, -5.384e-02, -1.726e-01, -7.281e-02, -1.727e-02, 4.186e-02, 1.242e-01, 3.457e-01, -7.425e-02, 5.849e-01, 2.673e-01) * s0_2_1;
	r3 += M4(8.791e-02, -2.123e-01, -7.904e-02, -2.911e-01, -3.348e-02, 9.865e-03, 1.935e-02, -3.184e-01, 5.548e-02, 5.159e-03, -4.847e-02, -1.777e-01, -5.152e-02, 7.841e-02, -6.700e-01, -1.000e+00) * s0_2_1;
	r0 += M4(-1.092e-02, -7.216e-02, -2.201e-02, -2.375e-01, -6.292e-03, -6.474e-02, 2.089e-02, -3.582e-02, 8.853e-02, -5.704e-02, -1.254e-01, -5.398e-02, 8.038e-03, 2.993e-02, -3.084e-02, 5.131e-02) * s0_2_2;
	r1 += M4(-1.101e-01, 1.339e-02, 3.493e-01, -4.544e-02, 1.001e-01, 3.002e-02, 2.247e-01, 2.183e-01, 7.281e-02, 5.094e-02, 7.284e-02, 7.008e-01, -1.546e-01, -4.600e-02, -1.817e-01, -5.591e-01) * s0_2_2;
	r2 += M4(5.228e-02, 6.028e-02, 3.510e-02, -7.746e-02, -6.041e-02, 8.449e-03, 5.638e-02, -5.395e-02, -7.570e-02, 2.395e-02, 1.037e-01, 1.190e-01, -5.535e-02, 4.533e-02, -5.386e-02, -4.514e-02) * s0_2_2;
	r3 += M4(6.258e-02, -6.917e-02, 1.199e-01, -1.284e-01, 4.212e-02, -2.898e-02, -1.220e-02, 1.031e-01, 4.527e-02, 1.336e-01, 1.148e-02, 1.844e-01, -9.643e-02, -4.309e-02, -1.325e-01, -9.613e-02) * s0_2_2;
	r0 += M4(4.700e-02, 2.789e-02, -5.730e-02, -1.423e-01, -1.281e-02, -2.182e-02, -3.114e-01, 9.618e-02, -2.533e-02, -1.537e-02, -6.471e-02, -2.411e-01, -4.825e-02, 1.190e-01, -2.497e-02, -1.260e-01) * s1_0_0;
	r1 += M4(5.155e-02, 4.282e-02, 1.428e-02, -1.248e-01, 3.462e-02, 1.500e-02, 1.240e-02, 3.334e-02, 4.598e-02, 1.946e-02, 7.000e-02, -2.734e-01, 1.646e-01, -4.696e-02, -1.332e-01, -3.372e-01) * s1_0_0;
	r2 += M4(8.702e-04, -1.319e-02, -3.233e-03, -9.837e-02, -1.154e-01, -1.720e-02, -6.517e-03, 4.547e-02, -1.980e-02, -5.481e-03, 2.361e-02, 2.256e-01, -9.276e-02, 5.981e-03, -3.171e-02, -2.737e-02) * s1_0_0;
	r3 += M4(1.432e-02, -9.745e-02, -3.685e-02, -9.273e-02, 2.362e-02, -2.226e-01, -2.592e-02, -1.523e-01, 2.144e-02, 5.520e-02, 7.285e-02, -5.719e-03, -1.205e-02, -1.892e-01, -1.390e-01, -3.648e-01) * s1_0_0;
	r0 += M4(1.599e-02, -2.411e-02, -2.133e-01, -6.822e-02, 1.558e-01, 6.271e-02, 1.069e-01, 4.403e-01, -1.087e-01, 4.462e-02, -3.799e-02, -1.321e-01, 1.008e-01, 1.437e-01, 2.016e-01, 3.633e-01) * s1_0_1;
	r1 += M4(-5.907e-02, 8.353e-02, 1.130e-01, -2.797e-02, -5.068e-02, 2.698e-03, -2.821e-02, 2.556e-01, 5.722e-02, -1.227e-02, 9.562e-02, -1.534e-01, -1.400e-01, -2.270e-03, 2.781e-01, 1.306e-01) * s1_0_1;
	r2 += M4(7.585e-02, -3.048e-02, -1.256e-02, -1.405e-01, 4.572e-02, 3.275e-02, -2.223e-02, -8.499e-02, 1.101e-01, -3.249e-03, -1.807e-02, -1.043e-01, 1.758e-01, 2.208e-01, 1.749e-03, -1.587e-01) * s1_0_1;
	r3 += M4(2.110e-02, -3.521e-01, 2.467e-01, -5.689e-01, -2.153e-02, -1.653e-01, -1.033e-01, -4.446e-03, -1.358e-02, -4.442e-03, 1.375e-02, -1.454e-02, -1.576e-02, -1.010e-02, -5.080e-01, -9.250e-01) * s1_0_1;
	r0 += M4(-2.888e-02, 4.673e-02, 6.794e-02, -1.727e-01, 2.442e-01, -1.376e-02, -1.267e-01, 2.256e-01, -1.107e-01, -2.527e-02, 2.998e-02, -9.679e-02, 2.877e-01, -1.161e-01, -5.224e-02, -3.034e-02) * s1_0_2;
	r1 += M4(5.181e-02, -1.968e-02, -6.341e-02, -1.454e-01, -1.875e-01, -2.634e-03, -1.227e-03, -5.643e-02, -8.985e-02, 8.120e-03, 7.517e-02, -1.327e-01, -2.838e-01, -8.890e-03, -5.972e-02, 2.182e-01) * s1_0_2;
	r2 += M4(1.288e-01, -2.181e-01, 3.776e-03, -2.355e-01, 2.910e-02, -8.156e-03, -2.541e-02, 4.619e-02, 7.478e-02, 4.958e-02, 1.701e-03, -7.256e-03, 1.151e-01, -1.053e-01, -3.165e-02, -2.207e-01) * s1_0_2;
	r3 += M4(-5.947e-02, 6.770e-02, -1.067e-01, 1.828e-02, -6.447e-03, 1.528e-02, -8.713e-02, 8.936e-02, 1.917e-02, 3.954e-02, 8.721e-02, -1.527e-01, -1.656e-01, 1.031e-01, 8.423e-02, 1.554e-01) * s1_0_2;
	r0 += M4(3.281e-02, -3.900e-02, 4.144e-02, -2.487e-01, -1.552e-01, 1.354e-01, -1.231e-01, 1.645e-01, -2.404e-02, -7.333e-02, -1.906e-01, -2.574e-01, 3.704e-03, -3.804e-02, -3.776e-02, 8.163e-02) * s1_1_0;
	r1 += M4(7.009e-02, 1.653e-03, -4.389e-03, -1.631e-01, -1.661e-02, -2.793e-02, -1.069e-02, 4.682e-01, -5.244e-02, 1.440e-02, 1.173e-01, 7.872e-02, 3.141e-01, -1.372e-01, -2.956e-01, -1.774e-01) * s1_1_0;
	r2 += M4(-6.224e-02, -8.474e-03, 1.488e-02, -1.016e-01, 1.400e-01, 1.748e-02, -2.274e-02, 2.038e-01, -4.116e-02, -3.159e-03, 3.813e-02, 1.596e-01, 6.634e-02, 1.547e-02, -3.402e-02, -8.683e-02) * s1_1_0;
	r3 += M4(6.382e-02, -6.123e-02, 1.968e-02, 1.108e-01, -9.708e-03, -1.654e-01, 9.250e-02, -9.677e-02, 1.716e-03, 1.613e-02, -2.148e-02, 1.053e-01, -2.107e-02, -1.802e-01, 2.862e-02, -9.320e-02) * s1_1_0;
	r0 += M4(-9.638e-02, 3.820e-01, 1.049e-01, 2.300e-01, -2.541e-01, -3.584e-01, 7.036e-02, -1.390e-01, 6.420e-02, -4.072e-02, -2.707e-01, -1.803e-01, -4.419e-02, 3.279e-02, 2.474e-01, 9.596e-02) * s1_1_1;
	r1 += M4(-2.915e-01, 2.036e-01, 8.567e-02, 3.038e-01, -7.961e-01, 3.907e-02, -3.402e-02, -1.000e+00, -1.839e-01, 7.765e-02, -2.982e-02, 5.283e-01, -9.176e-01, 9.701e-01, 1.756e-01, -7.484e-01) * s1_1_1;
	r2 += M4(2.282e-01, -1.314e-01, 9.027e-02, 3.277e-01, 1.249e-01, -1.671e-02, 5.215e-02, -8.260e-01, 1.866e-01, 6.104e-02, -9.186e-02, 2.392e-02, -1.770e-01, -5.288e-02, -3.052e-01, 1.825e-01) * s1_1_1;
	r3 += M4(1.291e-02, -1.000e+00, -7.919e-01, -1.000e+00, -4.986e-03, -4.798e-01, 2.052e-02, -8.628e-01, 6.308e-02, -1.477e-01, 2.983e-01, 1.622e-01, 1.337e-01, 9.453e-02, -9.302e-02, -4.911e-02) * s1_1_1;
	r0 += M4(-1.834e-01, 4.146e-01, 3.921e-01, 2.272e-01, -1.683e-01, -2.255e-01, -9.564e-02, -2.282e-01, 1.928e-02, 1.286e-01, 1.851e-01, -9.435e-02, -6.410e-02, -1.483e-01, -5.433e-02, -1.261e-01) * s1_1_2;
	r1 += M4(-6.296e-01, 1.120e-03, -1.337e-01, -3.174e-01, 1.085e-01, 3.453e-02, -1.818e-01, -5.294e-01, -4.230e-02, -2.063e-03, 8.292e-02, -3.841e-02, -1.907e-01, -3.194e-02, -6.291e-02, 1.185e-01) * s1_1_2;
	r2 += M4(-3.701e-02, 5.414e-02, -6.946e-02, -2.899e-01, -9.220e-02, -3.467e-02, 2.532e-02, -3.218e-01, 1.568e-01, 1.268e-01, 4.008e-02, -2.133e-01, -4.861e-02, 1.437e-04, -1.283e-01, -3.768e-01) * s1_1_2;
	r3 += M4(8.127e-01, -8.218e-02, -5.471e-01, 1.015e-01, -7.535e-02, 5.361e-02, 1.528e-01, 2.458e-01, 2.587e-02, 1.864e-03, 2.973e-02, 7.467e-02, -1.703e-01, -7.492e-02, -2.938e-02, -1.051e-01) * s1_1_2;
	r0 += M4(-5.589e-02, 1.102e-01, -8.696e-02, -1.419e-01, 4.175e-02, 4.422e-02, -1.845e-02, 7.983e-02, 3.849e-03, 1.231e-01, -1.242e-01, -6.187e-02, -9.941e-03, 7.651e-02, 7.070e-02, 1.209e-01) * s1_2_0;
	r1 += M4(-5.452e-02, -3.596e-02, 6.358e-04, 3.039e-03, -3.203e-01, 4.984e-02, 1.194e-02, -1.337e-02, -3.874e-02, 9.940e-02, 8.693e-02, 4.746e-01, -3.560e-02, -3.735e-02, -3.590e-01, -3.668e-01) * s1_2_0;
	r2 += M4(1.033e-01, -5.525e-03, 5.510e-03, 1.081e-01, -5.377e-02, -7.771e-04, 3.071e-02, 1.389e-01, 5.537e-02, -2.007e-02, -1.296e-02, 2.076e-01, 3.963e-02, -1.220e-02, -4.128e-02, -1.253e-01) * s1_2_0;
	r3 += M4(-2.841e-03, -1.018e-01, -5.551e-02, -7.910e-02, 1.609e-02, -4.256e-01, 2.467e-04, 3.743e-02, -2.962e-02, 4.753e-02, -6.619e-02, 1.942e-01, -2.198e-02, 1.499e-02, -5.207e-03, -8.531e-02) * s1_2_0;
	r0 += M4(-7.993e-02, -1.122e-01, -2.099e-01, -1.887e-01, -1.733e-01, 5.777e-03, 1.766e-01, -6.840e-02, 1.860e-01, -1.491e-01, 4.983e-02, -2.763e-01, -7.080e-02, 8.187e-03, -1.044e-01, 1.722e-02) * s1_2_1;
	r1 += M4(-7.844e-02, 6.471e-02, -1.259e-01, -1.126e-01, -1.727e-01, -3.945e-02, -1.042e-01, -5.132e-01, -6.749e-01, -2.052e-02, 6.961e-01, 2.772e-01, 1.147e-01, -7.093e-02, -1.000e+00, -1.884e-01) * s1_2_1;
	r2 += M4(6.977e-02, 5.053e-02, -6.572e-03, -1.067e-01, 2.068e-02, 5.700e-03, -1.056e-02, -1.015e-01, -1.675e-01, -3.061e-03, 5.872e-02, -1.000e+00, 1.062e-01, 2.341e-02, 1.199e-02, -2.256e-02) * s1_2_1;
	r3 += M4(1.896e-02, 1.774e-01, 1.322e-01, -5.850e-02, 5.282e-02, -1.691e-01, 1.621e-02, -1.948e-01, -5.987e-03, 5.557e-02, 5.485e-02, -5.768e-02, 2.357e-02, -2.395e-02, 4.989e-02, 5.618e-02) * s1_2_1;
	r0 += M4(-9.148e-02, -8.627e-02, -2.458e-02, 7.707e-02, -5.591e-02, -5.478e-02, -9.555e-02, -1.343e-02, -4.743e-03, -3.616e-02, 6.887e-02, -1.835e-01, -3.031e-02, -8.431e-03, -2.861e-02, 1.311e-02) * s1_2_2;
	r1 += M4(-6.140e-02, 1.582e-03, -1.000e+00, -3.746e-01, 2.079e-01, -4.885e-03, 2.364e-01, 2.597e-01, -3.278e-01, -6.234e-02, -3.690e-03, -4.757e-01, -3.589e-02, 3.117e-02, 3.312e-02, 3.741e-02) * s1_2_2;
	r2 += M4(2.646e-02, 6.026e-02, -2.330e-02, 5.535e-02, -2.080e-02, -4.382e-02, -2.216e-03, -1.707e-01, 2.427e-02, -3.803e-02, -1.799e-02, -2.250e-01, 3.642e-03, -1.336e-02, -1.329e-02, -3.190e-02) * s1_2_2;
	r3 += M4(1.161e-01, 9.347e-02, 1.110e-01, -1.018e-01, -2.761e-02, 7.478e-03, -3.322e-02, -2.742e-03, -2.007e-02, 6.569e-02, 5.827e-02, -3.647e-02, -4.389e-03, -4.567e-02, -4.304e-02, -6.372e-02) * s1_2_2;
	s0_0_0 = G[2][xy.y+0][xy.x+0]; s0_0_1 = G[2][xy.y+0][xy.x+1];
	s0_0_2 = G[2][xy.y+0][xy.x+2]; s0_1_0 = G[2][xy.y+1][xy.x+0];
	s0_1_1 = G[2][xy.y+1][xy.x+1]; s0_1_2 = G[2][xy.y+1][xy.x+2];
	s0_2_0 = G[2][xy.y+2][xy.x+0]; s0_2_1 = G[2][xy.y+2][xy.x+1];
	s0_2_2 = G[2][xy.y+2][xy.x+2]; s1_0_0 = G[3][xy.y+0][xy.x+0];
	s1_0_1 = G[3][xy.y+0][xy.x+1]; s1_0_2 = G[3][xy.y+0][xy.x+2];
	s1_1_0 = G[3][xy.y+1][xy.x+0]; s1_1_1 = G[3][xy.y+1][xy.x+1];
	s1_1_2 = G[3][xy.y+1][xy.x+2]; s1_2_0 = G[3][xy.y+2][xy.x+0];
	s1_2_1 = G[3][xy.y+2][xy.x+1]; s1_2_2 = G[3][xy.y+2][xy.x+2];
	r0 += M4(-1.703e-01, -4.941e-02, -6.914e-02, 2.188e-01, -1.177e-01, -7.731e-03, -6.254e-02, -2.569e-02, 4.460e-02, 3.186e-02, -5.863e-02, 2.628e-01, 4.635e-02, 1.307e-02, 9.855e-02, 9.070e-02) * s0_0_0;
	r1 += M4(9.719e-02, 1.283e-03, 1.717e-02, 1.339e-01, 2.104e-02, 2.268e-02, 4.307e-02, 6.103e-03, 3.102e-02, 3.871e-03, 1.919e-02, 5.119e-01, -3.251e-02, -3.827e-03, 3.760e-03, 2.526e-01) * s0_0_0;
	r2 += M4(-7.351e-02, 3.265e-02, 1.511e-02, -1.178e-01, -7.786e-02, -3.628e-02, -5.401e-03, -1.172e-01, 1.033e-01, 5.477e-03, 1.430e-02, 1.899e-01, 1.675e-01, 2.651e-02, 8.382e-04, 8.170e-02) * s0_0_0;
	r3 += M4(9.916e-03, -1.756e-03, 4.202e-02, 3.049e-02, 6.613e-03, -4.866e-02, 1.890e-02, 1.207e-01, 2.104e-02, 9.407e-02, 3.651e-02, -2.431e-01, 8.524e-03, -5.708e-02, 2.107e-02, 1.809e-01) * s0_0_0;
	r0 += M4(-1.467e-01, -1.058e-01, -7.518e-02, 2.859e-01, 1.422e-01, 3.580e-02, -3.597e-02, 4.306e-02, -3.490e-02, -3.341e-02, 1.295e-01, 7.535e-02, -4.979e-02, -3.135e-02, -5.635e-02, -4.288e-01) * s0_0_1;
	r1 += M4(-1.323e-01, 1.443e-02, 5.992e-02, 1.710e-01, 7.008e-02, 9.339e-03, -1.110e-01, 5.449e-01, -8.769e-02, -2.151e-02, 1.375e-01, 4.151e-01, 2.962e-01, -2.400e-02, 6.412e-02, -2.507e-01) * s0_0_1;
	r2 += M4(-1.007e-02, -2.893e-03, 7.735e-03, -2.333e-01, -1.252e-01, 1.091e-02, -3.507e-02, 1.193e-01, 5.676e-02, -1.875e-02, 4.449e-02, 3.744e-02, -1.136e-01, 1.029e-01, 7.113e-03, 1.110e-01) * s0_0_1;
	r3 += M4(-1.169e-02, -3.786e-04, 4.151e-02, -1.274e-01, -2.838e-02, 9.623e-02, -3.975e-02, 2.392e-02, 4.912e-02, 6.394e-02, 8.027e-02, 5.449e-01, 1.970e-02, 5.051e-02, -3.460e-02, 3.613e-01) * s0_0_1;
	r0 += M4(9.431e-02, 2.010e-02, -1.013e-01, -7.219e-02, -4.402e-02, 2.106e-02, 1.315e-01, -2.616e-02, 2.046e-02, 5.857e-02, -1.532e-01, 1.363e-02, -2.789e-01, 1.359e-01, 1.675e-01, 8.482e-02) * s0_0_2;
	r1 += M4(3.213e-02, -2.288e-02, -2.297e-02, 1.036e-01, 1.454e-01, 6.049e-03, 5.592e-02, 6.474e-02, 5.052e-02, -8.818e-03, 1.354e-01, 3.786e-01, 2.575e-01, -3.888e-02, -1.490e-02, -3.024e-01) * s0_0_2;
	r2 += M4(1.079e-01, 5.586e-02, 1.602e-02, -7.082e-02, -1.979e-01, -8.057e-02, 7.929e-03, -2.383e-02, 2.054e-01, 1.869e-02, 3.482e-02, -2.409e-01, 1.127e-01, 4.149e-02, -4.654e-02, 2.793e-01) * s0_0_2;
	r3 += M4(8.461e-02, -1.827e-02, 8.993e-03, 5.964e-03, -1.413e-03, 1.571e-02, -1.025e-03, -1.272e-01, 9.548e-03, 1.054e-02, 4.589e-02, -1.980e-01, -3.041e-02, -9.339e-02, 2.028e-02, 4.602e-02) * s0_0_2;
	r0 += M4(-4.956e-02, -1.509e-01, -1.344e-01, -1.153e-01, 9.804e-03, -2.496e-02, 3.145e-02, -3.822e-01, -4.373e-02, 1.537e-01, 1.467e-01, -4.581e-02, 5.525e-02, -1.111e-01, 4.007e-03, -3.148e-02) * s0_1_0;
	r1 += M4(9.983e-02, 2.129e-02, 3.494e-02, 6.091e-03, 1.832e-01, -4.590e-02, 2.463e-01, -1.228e-01, 1.400e-01, 4.485e-02, -4.358e-02, 1.476e-01, 1.053e-01, -1.179e-02, -8.838e-02, -1.833e-01) * s0_1_0;
	r2 += M4(-4.622e-02, 5.830e-02, 5.920e-02, -1.971e-01, 2.052e-02, -1.421e-02, 2.912e-02, -1.894e-01, 5.031e-02, 2.114e-02, -4.006e-02, 3.294e-01, -1.704e-01, 6.720e-03, 4.720e-02, -7.970e-02) * s0_1_0;
	r3 += M4(8.949e-02, -2.153e-01, 1.246e-01, 2.688e-01, 2.576e-03, 4.969e-02, -1.731e-02, 2.797e-01, -3.689e-02, -2.886e-01, 2.576e-02, -4.913e-01, 4.674e-02, -1.466e-01, 3.139e-02, -1.678e-02) * s0_1_0;
	r0 += M4(-3.425e-01, -7.397e-02, 7.239e-02, 3.458e-01, 2.326e-01, 8.518e-02, 3.008e-01, 4.018e-01, -4.571e-01, -1.626e-01, 1.551e-01, -9.414e-01, 1.332e-01, 2.677e-01, -2.299e-01, 2.666e-01) * s0_1_1;
	r1 += M4(6.450e-02, -6.663e-02, 5.217e-02, 2.034e-01, -1.767e-01, -3.829e-02, 1.488e-01, 5.957e-01, -2.284e-01, 4.977e-02, -1.326e-01, -5.622e-01, 6.575e-02, 4.744e-02, -3.234e-02, -3.618e-01) * s0_1_1;
	r2 += M4(8.816e-02, 9.729e-02, 5.397e-02, 2.894e-02, 1.730e-01, -4.198e-02, -6.971e-02, -1.296e-01, -8.707e-02, 4.583e-02, -5.877e-02, -2.396e-01, 6.316e-03, -1.942e-02, -2.905e-02, 5.965e-02) * s0_1_1;
	r3 += M4(-1.549e-02, 2.041e-01, 3.262e-01, 2.881e-01, -2.043e-01, 1.663e-02, -1.268e-01, -2.046e-01, 1.922e-01, -1.825e-01, 4.756e-01, 8.595e-02, -7.382e-02, 3.103e-01, -1.173e-01, 2.104e-01) * s0_1_1;
	r0 += M4(-1.417e-01, -1.388e-01, 3.280e-02, 3.952e-02, -5.655e-02, -1.944e-03, 1.982e-01, 7.369e-03, 5.079e-02, -4.752e-02, 1.848e-01, -1.568e-01, 7.558e-02, -8.216e-02, 2.586e-02, 1.302e-01) * s0_1_2;
	r1 += M4(-1.501e-01, 4.193e-02, -1.460e-01, -1.017e-01, 2.182e-01, -5.746e-02, -1.582e-04, 3.417e-01, 1.721e-01, -4.657e-02, 7.443e-02, 2.812e-01, 2.543e-01, 1.753e-02, 2.115e-01, -2.153e-01) * s0_1_2;
	r2 += M4(-1.815e-01, 9.331e-02, 6.191e-02, -1.868e-01, -1.617e-01, -1.842e-02, -1.396e-02, 2.845e-01, 1.783e-01, 1.322e-01, 4.721e-02, -2.748e-01, -5.266e-02, -4.710e-02, 6.065e-03, 2.452e-01) * s0_1_2;
	r3 += M4(2.321e-02, 1.839e-02, 9.814e-02, -1.008e-01, -6.909e-02, -5.756e-02, 7.914e-02, -3.259e-02, -2.573e-02, -1.743e-01, 7.764e-02, 2.291e-01, -4.172e-02, 3.713e-02, 9.182e-02, -1.919e-02) * s0_1_2;
	r0 += M4(-7.300e-02, -1.353e-02, -4.972e-02, 1.312e-02, -1.384e-02, -1.276e-02, -9.047e-02, -6.203e-02, 6.114e-02, 1.128e-01, -1.994e-02, 1.555e-02, -1.567e-02, -4.121e-02, -8.304e-02, 6.040e-02) * s0_2_0;
	r1 += M4(1.145e-01, -1.374e-02, -4.623e-03, -1.306e-01, 1.141e-01, 2.168e-02, 9.780e-03, 1.663e-01, 1.532e-01, 1.121e-02, 1.832e-01, 2.706e-01, 2.858e-03, -1.354e-02, 1.829e-01, 1.582e-01) * s0_2_0;
	r2 += M4(1.443e-01, 1.231e-02, 4.521e-02, -1.364e-01, -3.230e-03, 8.683e-03, 2.647e-02, -1.094e-01, 4.957e-02, 3.596e-03, 4.207e-02, 2.222e-01, -1.232e-02, 3.258e-02, 1.960e-02, -6.069e-02) * s0_2_0;
	r3 += M4(1.410e-02, -1.202e-01, 4.519e-02, 2.556e-01, -1.398e-02, -1.580e-02, -2.016e-02, 1.494e-01, 1.996e-02, -4.649e-02, 3.311e-02, 7.934e-02, 1.558e-02, -2.341e-02, -1.353e-02, 3.110e-01) * s0_2_0;
	r0 += M4(-8.890e-02, -1.295e-01, 1.619e-01, 3.102e-02, -1.013e-01, 1.044e-01, 1.038e-01, 1.155e-01, 4.060e-02, 7.622e-02, -1.283e-01, -5.696e-02, 1.498e-01, -1.871e-02, 5.543e-02, 1.286e-01) * s0_2_1;
	r1 += M4(-1.154e-01, -1.315e-01, 1.445e-01, -5.214e-01, 1.200e-01, 1.434e-02, -1.255e-01, -4.674e-02, 3.787e-01, -5.371e-03, 4.303e-02, 2.977e-01, -4.040e-02, 1.564e-02, -2.466e-01, -1.424e-01) * s0_2_1;
	r2 += M4(-7.238e-02, 8.259e-02, 5.257e-02, -6.405e-01, 4.761e-02, 3.963e-02, 1.851e-02, 3.361e-02, -1.378e-02, -9.033e-03, 1.969e-01, 3.465e-01, -1.290e-01, 3.490e-02, -3.748e-02, -8.239e-02) * s0_2_1;
	r3 += M4(1.660e-02, 5.790e-03, 9.595e-02, -8.003e-02, 7.435e-03, 4.935e-02, 6.648e-02, -9.960e-02, -2.614e-03, 6.786e-02, 1.141e-01, 4.740e-01, -7.001e-02, -8.505e-03, 3.257e-03, 1.749e-01) * s0_2_1;
	r0 += M4(1.107e-02, 5.210e-03, 1.313e-02, 4.398e-03, 5.597e-02, 1.624e-02, 5.979e-02, 1.287e-01, -1.647e-02, 4.864e-02, 1.290e-02, 1.346e-01, 6.558e-02, 6.485e-02, -1.344e-02, 1.952e-01) * s0_2_2;
	r1 += M4(5.639e-01, 2.745e-02, -1.323e-02, 1.813e-01, 2.535e-02, 2.538e-02, 8.138e-02, 6.567e-02, -1.783e-01, 5.948e-03, 3.487e-02, 1.561e-01, 9.855e-02, -1.946e-02, -2.455e-01, -2.662e-01) * s0_2_2;
	r2 += M4(8.506e-02, -4.547e-04, 4.739e-02, -1.632e-01, -4.284e-02, 6.715e-03, 5.819e-03, 2.093e-01, -2.879e-02, -4.364e-03, 3.487e-02, 6.277e-02, -2.244e-02, -1.901e-02, 3.694e-02, 2.377e-01) * s0_2_2;
	r3 += M4(5.358e-02, 6.541e-02, -4.767e-02, 1.613e-01, 1.984e-02, -2.032e-02, 2.048e-02, -1.210e-01, 7.056e-02, 7.502e-02, 1.406e-01, -6.898e-02, 2.837e-02, -3.560e-02, 9.766e-02, 1.361e-01) * s0_2_2;
	r0 += M4(-1.103e-01, 2.729e-02, -9.648e-02, 1.682e-01, 1.304e-02, 8.322e-02, 1.098e-01, -5.405e-01, 1.813e-01, -4.406e-02, 1.520e-01, -3.504e-01, -8.819e-02, -1.203e-01, -8.521e-02, 3.858e-01) * s1_0_0;
	r1 += M4(3.226e-02, -2.154e-02, 7.278e-02, 1.103e-01, 1.628e-01, -2.527e-02, -1.981e-01, -5.132e-01, -6.677e-02, 4.451e-02, -6.728e-02, 1.872e-01, -4.199e-01, -5.196e-02, 1.148e-01, -1.782e-01) * s1_0_0;
	r2 += M4(1.082e-01, -7.596e-03, 5.222e-03, -2.785e-02, 9.897e-02, 7.825e-02, 4.340e-02, 4.006e-01, -1.902e-02, 4.197e-02, 2.866e-02, 4.081e-01, -7.450e-02, -5.055e-02, 4.576e-02, 6.650e-02) * s1_0_0;
	r3 += M4(-1.251e-02, -3.996e-02, 2.401e-02, 1.250e-01, -1.263e-02, 2.780e-02, 4.163e-02, 6.688e-02, -1.002e-02, -2.274e-02, 8.978e-03, 3.861e-01, 4.588e-02, -2.428e-01, 7.625e-02, 3.068e-01) * s1_0_0;
	r0 += M4(3.633e-02, -2.303e-02, 2.802e-01, 1.261e-01, -1.422e-01, 2.941e-02, 5.357e-02, -1.471e-01, 3.360e-02, -8.913e-02, -3.312e-01, -4.067e-01, -1.268e-01, -1.489e-01, -2.759e-01, -1.298e-01) * s1_0_1;
	r1 += M4(3.331e-02, -1.102e-02, 1.479e-02, 4.981e-02, 1.289e-01, 1.653e-02, -5.618e-02, -3.990e-01, 2.120e-01, 3.185e-02, -7.042e-02, -7.931e-02, -4.446e-04, -2.240e-02, -4.581e-02, -1.000e+00) * s1_0_1;
	r2 += M4(3.488e-02, 7.650e-03, 1.165e-02, 6.668e-03, -7.498e-02, 6.994e-02, -1.999e-02, 2.787e-01, -2.839e-01, -5.740e-02, 7.725e-03, 1.403e-01, -6.715e-02, -5.398e-02, -7.935e-03, -2.380e-01) * s1_0_1;
	r3 += M4(-5.844e-02, 1.206e-02, -6.224e-02, 3.999e-01, -4.600e-02, -7.430e-02, -8.578e-02, -3.329e-01, -4.347e-02, -1.017e-01, 2.887e-01, -3.718e-01, 1.496e-02, 3.982e-02, 8.352e-02, -7.919e-02) * s1_0_1;
	r0 += M4(-3.040e-01, -4.740e-02, -4.979e-02, -6.786e-03, -1.815e-02, 5.568e-02, 2.843e-02, 5.584e-02, -2.650e-01, 1.384e-02, -5.020e-01, 1.395e-02, -3.706e-03, -1.771e-02, -1.431e-02, -4.996e-02) * s1_0_2;
	r1 += M4(1.167e-01, 1.466e-02, -4.722e-02, 3.888e-01, 3.254e-02, -2.230e-02, 1.319e-02, -1.072e-01, -2.805e-02, 1.822e-02, 6.489e-02, 4.553e-02, -1.463e-02, 1.335e-02, -4.209e-02, 3.321e-01) * s1_0_2;
	r2 += M4(-1.971e-01, -1.517e-02, -1.744e-02, 8.955e-02, 1.067e-01, -5.172e-03, -2.917e-02, 8.154e-02, -2.256e-01, -1.485e-02, 4.603e-02, -1.728e-01, -7.645e-02, -3.596e-02, 4.244e-02, -1.979e-01) * s1_0_2;
	r3 += M4(6.228e-03, 1.028e-01, 5.877e-02, -2.426e-03, -4.738e-02, -3.131e-02, -6.317e-02, -3.828e-03, 4.176e-02, 1.461e-01, 6.651e-02, 1.493e-01, -5.292e-02, 3.570e-02, 1.143e-01, 2.239e-01) * s1_0_2;
	r0 += M4(-1.111e-01, 1.465e-02, -1.378e-01, 1.432e-01, 3.401e-01, 1.325e-01, 1.167e-02, -2.822e-01, 1.142e-01, -4.195e-02, -5.758e-02, 7.437e-02, 1.512e-01, -2.471e-01, -1.174e-01, -3.966e-01) * s1_1_0;
	r1 += M4(2.541e-03, 2.370e-02, 3.966e-02, -3.961e-02, 2.929e-01, -1.304e-01, -8.309e-02, -6.394e-02, -4.387e-01, 1.679e-02, -8.228e-02, -3.681e-01, 1.250e-01, -1.112e-02, -3.301e-01, 8.456e-03) * s1_1_0;
	r2 += M4(-1.603e-01, 2.613e-02, 3.661e-02, 1.372e-01, -2.242e-01, -7.911e-03, -1.149e-01, -1.475e-01, -3.564e-02, -5.134e-02, 8.419e-03, -3.376e-01, -3.722e-01, 7.441e-02, 9.009e-02, 2.451e-02) * s1_1_0;
	r3 += M4(-1.730e-02, 1.135e-01, -3.255e-02, 3.397e-01, -1.024e-01, 6.426e-01, -3.755e-01, 1.206e-01, -3.435e-02, -6.674e-02, -6.170e-02, 2.533e-01, 4.702e-02, -3.943e-02, 1.771e-02, 1.168e-01) * s1_1_0;
	r0 += M4(-2.650e-01, -2.294e-01, -1.116e-01, -1.715e-01, 3.943e-01, 1.327e-01, -2.456e-01, 1.319e-01, 6.024e-02, 3.994e-02, -4.572e-01, 2.681e-02, -2.354e-01, -4.187e-02, -1.467e-01, -1.519e-01) * s1_1_1;
	r1 += M4(2.007e-01, 4.477e-02, -3.100e-01, -2.774e-01, 2.707e-01, 6.490e-03, 8.588e-02, 5.613e-01, -4.234e-01, -1.311e-02, 2.049e-02, 2.428e-01, 3.138e-01, 6.070e-02, -3.272e-01, 6.543e-01) * s1_1_1;
	r2 += M4(-2.341e-01, 5.492e-02, -4.331e-03, -2.338e-01, 8.105e-02, 5.841e-01, 6.143e-02, 2.092e-01, 1.663e-01, -9.988e-02, -6.965e-02, -5.149e-01, 3.863e-03, 2.009e-01, -4.561e-02, 3.326e-01) * s1_1_1;
	r3 += M4(-1.297e-02, 3.113e-02, 1.843e-02, -2.676e-01, -3.493e-01, 1.625e-01, -1.000e+00, -1.000e+00, -2.544e-01, -6.699e-02, 1.829e-01, -2.245e-01, 1.559e-01, -6.800e-03, 4.015e-01, 5.374e-01) * s1_1_1;
	r0 += M4(-7.555e-01, 2.732e-02, 1.788e-01, -1.863e-01, 1.129e-01, 5.170e-02, 6.163e-02, 1.653e-02, 2.647e-01, 9.248e-02, -4.478e-01, -3.101e-02, -2.154e-01, -2.001e-02, -4.686e-02, 6.097e-02) * s1_1_2;
	r1 += M4(4.394e-01, -1.221e-02, -1.353e-01, 2.319e-01, -4.751e-02, 2.868e-02, 8.141e-03, -3.678e-02, -5.247e-01, 5.409e-04, -8.827e-02, -2.107e-01, -1.429e-02, -1.479e-02, 5.761e-02, -2.612e-02) * s1_1_2;
	r2 += M4(-3.759e-01, -4.334e-02, 6.113e-02, 9.733e-02, -1.640e-01, -2.255e-02, -2.363e-02, 3.271e-02, -9.147e-02, -5.351e-02, -3.595e-02, 1.715e-01, -1.478e-01, 2.578e-02, 2.520e-02, 1.796e-01) * s1_1_2;
	r3 += M4(1.473e-01, 1.505e-01, -3.918e-01, 8.594e-02, 3.368e-02, 2.665e-02, 7.885e-02, 4.593e-02, -6.632e-02, -6.114e-02, -1.517e-02, 9.002e-02, 1.099e-02, -6.003e-02, -6.877e-02, -1.178e-01) * s1_1_2;
	r0 += M4(-3.072e-02, 6.040e-03, 3.159e-03, 2.396e-01, 1.662e-01, 2.214e-01, 2.291e-01, 3.035e-01, 1.244e-02, -3.848e-02, 6.500e-02, 8.321e-02, -4.330e-02, -1.661e-01, 1.286e-01, -7.085e-03) * s1_2_0;
	r1 += M4(1.458e-01, 1.880e-02, 2.794e-02, 1.798e-01, -2.673e-01, 1.818e-02, -1.000e+00, -2.713e-01, -3.740e-01, 1.065e-02, -1.885e-02, -2.632e-01, -3.157e-02, -1.035e-03, 9.649e-02, 2.321e-02) * s1_2_0;
	r2 += M4(-1.616e-01, -4.443e-02, -4.245e-02, -3.065e-01, 3.722e-02, 1.798e-02, -7.281e-02, -2.436e-01, -3.958e-02, -3.648e-03, -9.508e-03, 1.385e-01, -1.982e-01, 2.380e-03, -1.830e-02, -3.419e-01) * s1_2_0;
	r3 += M4(-3.832e-02, -3.769e-02, -6.110e-02, 2.061e-01, -3.265e-02, -8.042e-02, -3.588e-02, -2.386e-02, -9.104e-03, 1.156e-02, 2.894e-02, -1.396e-01, 9.203e-02, 7.427e-03, 9.825e-02, 2.854e-02) * s1_2_0;
	r0 += M4(7.092e-02, -1.253e-01, 1.189e-01, 9.119e-02, -9.571e-03, 1.614e-01, 9.691e-02, 6.837e-02, 3.720e-02, 2.686e-02, -5.323e-01, -1.738e-01, 6.011e-02, -1.256e-01, 1.254e-02, -6.207e-02) * s1_2_1;
	r1 += M4(6.290e-01, -1.752e-01, 7.840e-02, 1.870e-01, -3.686e-01, -1.423e-01, -3.749e-01, 8.809e-03, -8.675e-02, -9.548e-02, 2.601e-02, -8.392e-02, -2.338e-01, -2.762e-02, 7.071e-02, -2.745e-01) * s1_2_1;
	r2 += M4(-1.046e-01, 3.212e-02, -7.342e-02, -3.382e-01, 3.494e-02, 2.709e-03, 1.005e-02, 2.039e-02, 5.341e-02, 1.863e-02, 4.212e-02, 1.139e-02, -3.180e-01, -3.408e-02, 6.755e-03, 1.664e-02) * s1_2_1;
	r3 += M4(8.339e-02, -2.819e-02, 1.928e-01, -1.476e-01, -1.791e-01, -7.498e-02, -7.984e-02, -3.335e-02, -6.839e-02, 3.760e-02, 3.060e-02, 5.300e-02, 3.334e-02, 8.177e-02, 1.642e-01, -1.406e-01) * s1_2_1;
	r0 += M4(-3.814e-02, -3.397e-02, 2.559e-02, -2.008e-03, -3.402e-02, 5.837e-02, 1.175e-02, 5.024e-02, 7.633e-02, -3.470e-02, -3.154e-02, -1.857e-01, 5.317e-02, -5.619e-02, -1.023e-01, -1.124e-01) * s1_2_2;
	r1 += M4(2.526e-01, 6.742e-03, 1.210e-01, 4.652e-01, -1.853e-01, -4.606e-02, 5.785e-02, -1.775e-01, -5.514e-01, 4.040e-02, 5.321e-02, 2.823e-02, -8.644e-02, 2.675e-02, -1.406e-01, 6.408e-03) * s1_2_2;
	r2 += M4(-2.033e-01, -2.504e-02, 3.587e-02, 9.322e-02, 6.339e-02, -3.745e-03, -1.192e-02, 3.210e-02, 7.030e-02, 2.230e-02, -2.481e-02, -5.659e-02, -9.596e-02, -6.049e-02, 2.008e-02, 8.906e-02) * s1_2_2;
	r3 += M4(1.837e-02, 2.098e-02, 6.509e-02, 1.477e-01, -3.001e-02, -6.459e-03, -1.701e-02, -9.071e-02, -7.544e-02, -3.109e-02, 4.073e-02, 1.126e-01, 3.844e-02, 3.124e-02, 3.169e-02, 1.319e-02) * s1_2_2;
	r0 = clamp(r0, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0));
	r1 = clamp(r1, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r1));
	r2 = clamp(r2, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r2));
	r3 = clamp(r3, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r3));
}

//!DESC CuNNy-4x16-SOFT-conv3
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND conv2
//!BIND LUMA
//!SAVE conv3
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
shared V4 G[4][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(2, 2) + ivec2(1, 1)) * conv2_pt;
			V4 sr0 = V4(conv2_gather(p, 0));
			V4 sg0 = V4(conv2_gather(p, 1));
			V4 sb0 = V4(conv2_gather(p, 2));
			V4 sa0 = V4(conv2_gather(p, 3));
			G[0][ay][ax] = V4(sr0.w, sg0.w, sb0.w, sa0.w);
			G[1][ay][ax] = V4(sr0.z, sg0.z, sb0.z, sa0.z);
			G[2][ay][ax] = V4(sr0.x, sg0.x, sb0.x, sa0.x);
			G[3][ay][ax] = V4(sr0.y, sg0.y, sb0.y, sa0.y);
		}
	}
	barrier();
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0, r1, r2, r3;
	r0 = V4(0.0); r1 = V4(0.0); r2 = V4(0.0); r3 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2]; s1_0_0 = G[1][xy.y+0][xy.x+0];
	s1_0_1 = G[1][xy.y+0][xy.x+1]; s1_0_2 = G[1][xy.y+0][xy.x+2];
	s1_1_0 = G[1][xy.y+1][xy.x+0]; s1_1_1 = G[1][xy.y+1][xy.x+1];
	s1_1_2 = G[1][xy.y+1][xy.x+2]; s1_2_0 = G[1][xy.y+2][xy.x+0];
	s1_2_1 = G[1][xy.y+2][xy.x+1]; s1_2_2 = G[1][xy.y+2][xy.x+2];
	r0 += M4(-1.933e-01, 9.729e-02, -6.693e-02, -9.016e-03, -4.040e-02, -6.506e-02, -2.524e-02, 9.168e-03, -1.126e-02, 2.844e-02, 1.367e-02, 2.055e-01, 1.124e-02, -7.024e-02, -5.257e-02, 1.796e-02) * s0_0_0;
	r1 += M4(8.526e-02, 1.090e-01, -1.171e-01, -4.381e-02, -3.890e-02, -3.626e-02, 2.988e-03, -1.073e-01, -1.875e-03, 4.436e-02, 2.344e-03, 1.077e-01, 5.599e-02, -3.271e-03, 5.528e-02, 4.575e-02) * s0_0_0;
	r2 += M4(1.857e-02, -2.519e-02, -2.044e-01, 8.681e-02, 5.348e-03, 4.156e-02, -9.448e-02, 1.650e-02, -1.247e-01, -3.820e-02, 2.355e-02, 8.132e-02, 5.765e-03, 3.743e-02, 6.620e-02, 3.424e-02) * s0_0_0;
	r3 += M4(-8.473e-02, 2.405e-01, -1.183e-01, -1.287e-01, 6.510e-03, -2.575e-02, -1.963e-01, 3.444e-03, -2.274e-02, 2.132e-03, 8.472e-02, -4.074e-02, 2.774e-02, -1.573e-01, -2.193e-03, 5.376e-02) * s0_0_0;
	r0 += M4(4.061e-01, 8.404e-02, -7.152e-02, -3.423e-01, -2.057e-02, 2.274e-02, -3.367e-03, 1.721e-01, 6.757e-02, 1.194e-01, -1.297e-02, 1.371e-01, -1.927e-02, 7.767e-02, -5.516e-02, -1.323e-01) * s0_0_1;
	r1 += M4(1.414e-01, 7.884e-02, -9.600e-02, 9.641e-02, -1.043e-02, 2.560e-02, 1.035e-02, -5.251e-02, 5.767e-02, 1.135e-02, -7.446e-02, 2.895e-02, -6.811e-03, 6.134e-02, 5.483e-03, 1.800e-01) * s0_0_1;
	r2 += M4(-3.960e-01, 3.512e-02, -8.978e-02, -2.318e-02, -1.690e-02, -1.613e-02, -9.495e-03, 1.692e-01, -2.421e-01, 4.439e-02, -2.250e-02, 1.101e-01, -3.890e-01, 3.394e-02, 5.208e-02, 1.542e-02) * s0_0_1;
	r3 += M4(-3.949e-02, 3.341e-01, -1.691e-01, -2.116e-01, 7.007e-02, 1.946e-02, 1.422e-01, 4.033e-02, -2.881e-03, -2.267e-03, -2.094e-02, 1.246e-01, -1.642e-01, -9.561e-02, -1.235e-01, -1.055e-01) * s0_0_1;
	r0 += M4(-1.000e+00, -2.531e-01, -6.729e-02, 2.234e-01, -1.000e+00, 1.544e-01, -8.992e-02, -2.158e-02, -1.000e+00, 3.357e-05, 2.115e-02, -7.410e-02, -1.000e+00, -1.304e-01, 1.433e-02, -6.063e-01) * s0_0_2;
	r1 += M4(2.243e-02, 4.437e-02, -4.988e-02, -4.692e-02, 2.080e-02, 1.605e-03, 1.152e-02, -4.780e-02, -7.376e-02, 1.591e-02, 4.689e-03, 4.360e-02, 3.508e-02, 9.854e-03, 3.121e-02, 6.614e-02) * s0_0_2;
	r2 += M4(6.815e-02, -6.486e-03, 1.166e-01, 3.848e-02, -2.557e-02, -3.138e-02, -4.555e-02, 7.898e-02, -2.231e-02, 3.069e-02, 6.957e-03, -3.333e-02, 6.628e-02, -1.052e-02, -1.843e-02, -4.167e-02) * s0_0_2;
	r3 += M4(-3.046e-02, 5.532e-02, -6.214e-03, 1.729e-01, -2.900e-02, 9.259e-03, 5.892e-02, -7.738e-02, -2.404e-02, -3.439e-02, 7.864e-03, -3.451e-02, -9.146e-02, -1.969e-02, 3.982e-02, 7.445e-02) * s0_0_2;
	r0 += M4(-3.835e-02, 8.931e-02, -4.966e-03, -3.237e-01, -3.028e-02, -2.537e-02, -7.103e-02, 1.937e-01, -9.177e-02, -2.995e-03, 7.660e-02, -4.596e-02, 7.004e-02, 5.788e-02, -1.860e-02, 8.733e-02) * s0_1_0;
	r1 += M4(1.322e-01, -6.537e-02, -5.963e-02, -2.748e-01, 1.427e-01, 2.899e-02, -4.137e-02, 6.507e-02, -1.393e-01, -5.868e-02, -1.347e-02, 6.139e-02, -2.591e-02, -3.775e-02, -6.835e-02, 6.351e-02) * s0_1_0;
	r2 += M4(6.250e-02, 4.544e-02, -2.075e-02, -7.587e-02, 1.306e-01, 2.331e-01, -1.159e-01, 1.069e-01, -2.833e-02, -1.313e-01, 7.261e-02, -3.738e-03, 1.042e-01, -1.773e-01, -1.267e-01, 7.986e-02) * s0_1_0;
	r3 += M4(1.571e-01, 1.578e-01, 2.537e-02, 5.497e-02, 6.467e-02, 1.211e-01, -1.167e-01, -1.883e-02, -5.241e-02, -2.232e-01, -8.421e-02, 2.480e-02, 7.764e-02, -1.900e-01, -3.018e-01, 9.599e-02) * s0_1_0;
	r0 += M4(-2.313e-02, -1.003e-01, -8.327e-02, -2.909e-03, 1.079e-01, 1.928e-01, -1.230e-01, -5.286e-02, 2.800e-01, 1.320e-01, 1.179e-01, 1.080e-01, 3.556e-02, -8.311e-02, 2.494e-02, -6.429e-01) * s0_1_1;
	r1 += M4(-1.391e-01, -1.010e-01, -1.558e-01, -7.743e-02, 2.536e-01, 2.980e-01, 3.391e-01, -7.686e-02, 1.025e-03, -1.363e-01, 1.312e-01, -4.255e-02, 1.316e-01, -1.613e-02, 4.140e-01, -3.719e-03) * s0_1_1;
	r2 += M4(5.449e-01, 1.241e-02, -8.811e-01, 4.854e-01, -1.677e-01, 5.106e-02, -2.953e-01, -6.040e-02, 8.645e-02, 3.483e-02, 2.466e-01, 4.446e-01, 3.641e-01, -1.985e-02, -4.933e-02, -1.440e-01) * s0_1_1;
	r3 += M4(5.573e-02, 1.518e-01, -2.739e-02, 3.481e-01, 2.746e-01, 5.546e-02, 3.989e-01, -2.767e-01, 1.606e-01, -1.668e-01, 1.854e-01, 1.478e-01, 3.659e-02, 7.336e-02, 6.367e-01, -4.212e-01) * s0_1_1;
	r0 += M4(2.239e-01, 7.997e-02, -2.729e-02, -1.000e+00, 1.343e-01, 1.135e-01, -8.929e-02, 8.725e-02, 8.933e-04, -5.114e-02, -4.631e-02, 2.183e-01, 1.561e-01, 3.847e-01, -5.683e-02, -1.000e+00) * s0_1_2;
	r1 += M4(1.360e-01, 8.697e-02, 1.305e-02, 2.946e-02, 4.808e-03, -4.969e-02, -1.216e-01, -1.875e-02, 1.227e-02, -5.282e-02, 7.888e-02, 1.728e-02, 8.532e-02, -2.135e-01, 4.566e-02, -7.562e-02) * s0_1_2;
	r2 += M4(-1.622e-01, 1.386e-02, -1.287e-01, -2.683e-01, -6.889e-02, -2.347e-02, 2.368e-02, 8.034e-02, 1.368e-02, -9.759e-03, -8.691e-05, -1.289e-02, 2.346e-01, -6.941e-03, 7.757e-02, -6.297e-02) * s0_1_2;
	r3 += M4(4.511e-02, 1.640e-01, 1.113e-01, -9.356e-02, -6.815e-03, 3.472e-02, -1.136e-01, 1.033e-01, -2.220e-04, -4.525e-02, 2.259e-01, -1.005e-01, -1.182e-01, -1.648e-01, 1.897e-03, 8.804e-02) * s0_1_2;
	r0 += M4(-1.032e-02, -7.387e-03, 3.435e-02, 4.905e-02, 1.919e-02, 4.601e-02, -6.241e-02, 2.018e-01, 3.018e-02, 9.681e-02, 6.855e-02, 7.505e-02, 2.568e-02, 4.457e-02, -1.122e-02, -2.617e-01) * s0_2_0;
	r1 += M4(-1.893e-01, -4.120e-02, -1.531e-01, -2.158e-01, 1.488e-01, -6.237e-03, 9.495e-02, 9.114e-02, 1.541e-01, 1.295e-03, 1.963e-02, -9.568e-02, -8.890e-03, -8.284e-02, 7.106e-02, 5.092e-02) * s0_2_0;
	r2 += M4(-6.350e-03, 5.840e-02, 2.867e-01, -5.619e-02, 8.716e-02, 2.995e-02, 1.162e-02, 5.685e-02, -5.168e-02, -2.799e-02, -2.369e-01, -1.809e-02, 7.935e-02, 5.326e-03, 9.338e-02, 5.249e-02) * s0_2_0;
	r3 += M4(-1.841e-01, -5.331e-02, 1.523e-02, 7.639e-02, -4.662e-02, 1.139e-01, 3.316e-02, 1.232e-02, -1.003e-01, -1.770e-01, 7.070e-02, -8.769e-02, 1.071e-02, -1.040e-01, 4.079e-02, 8.153e-02) * s0_2_0;
	r0 += M4(-3.481e-02, -1.477e-01, -2.249e-01, -1.488e-01, -1.687e-02, 1.004e-01, -1.301e-01, -1.131e-01, -8.954e-02, 5.524e-02, 7.244e-02, -3.785e-01, -6.296e-02, -3.719e-02, -6.775e-03, 1.767e-01) * s0_2_1;
	r1 += M4(1.248e-01, -1.444e-02, -3.129e-01, -3.526e-01, 1.617e-01, -3.457e-02, 3.757e-02, 1.376e-02, -1.241e-01, 9.421e-03, -2.909e-01, -1.700e-01, -2.794e-02, -4.244e-02, -5.136e-02, -6.427e-02) * s0_2_1;
	r2 += M4(1.129e-02, 1.325e-02, 1.232e-01, -2.746e-02, 3.619e-02, -4.652e-02, -9.996e-02, -2.657e-05, 2.658e-02, 9.842e-02, 2.627e-02, -1.005e-02, -5.195e-02, -1.200e-02, 1.195e-01, -5.160e-02) * s0_2_1;
	r3 += M4(1.265e-01, 1.177e-02, -1.173e-01, 1.759e-01, 6.649e-02, 8.026e-02, 1.005e-01, -7.368e-02, 3.202e-03, -2.331e-01, -1.449e-01, 4.515e-02, -1.526e-01, -3.320e-02, 4.516e-02, 6.342e-02) * s0_2_1;
	r0 += M4(-6.176e-03, -3.370e-02, -1.093e-01, -1.609e-01, 3.499e-02, 5.047e-02, -2.965e-02, 1.585e-01, -7.149e-02, -2.052e-01, -5.622e-02, -6.065e-01, 2.015e-02, -1.106e-01, 9.765e-02, 1.727e-01) * s0_2_2;
	r1 += M4(3.874e-02, 4.258e-02, -8.326e-02, -6.092e-02, -4.026e-02, -1.726e-02, -5.122e-02, 2.719e-03, 1.082e-01, 7.086e-03, 9.632e-02, 8.140e-02, -6.378e-02, -4.991e-02, 1.130e-02, -1.130e-02) * s0_2_2;
	r2 += M4(-4.743e-02, -2.674e-02, 6.510e-02, 1.600e-02, 2.438e-02, -1.604e-02, -8.179e-02, 2.679e-02, -8.558e-02, -5.280e-03, -4.990e-02, -1.296e-01, -4.098e-02, 7.883e-03, 7.422e-02, -2.156e-02) * s0_2_2;
	r3 += M4(-4.660e-02, 1.162e-01, -3.902e-02, 1.625e-01, 3.960e-02, 2.832e-02, 2.048e-02, -3.481e-02, -8.543e-03, -4.858e-02, 5.437e-02, -3.134e-02, -1.150e-01, -1.205e-01, -4.861e-02, 1.087e-01) * s0_2_2;
	r0 += M4(-4.752e-02, 7.616e-02, 5.285e-02, 1.206e-01, 7.042e-03, -1.500e-01, 5.164e-02, -2.089e-02, -5.765e-03, 9.966e-02, 5.905e-03, 2.190e-01, -1.084e-01, 6.965e-02, 1.194e-01, -2.360e-01) * s1_0_0;
	r1 += M4(-4.990e-02, -3.311e-02, -5.514e-03, 4.286e-02, 1.413e-02, -4.670e-02, 7.694e-02, 8.769e-02, -1.736e-01, -5.446e-02, -9.539e-02, 2.040e-02, -2.675e-01, 6.430e-02, -6.352e-02, 8.794e-02) * s1_0_0;
	r2 += M4(9.546e-02, -3.338e-02, 9.722e-02, 2.810e-03, -4.434e-02, -1.965e-02, 1.584e-02, -6.798e-02, 7.146e-02, 7.456e-02, -2.345e-02, 6.768e-02, -3.826e-02, -1.536e-02, 6.416e-02, -5.053e-02) * s1_0_0;
	r3 += M4(3.210e-02, -5.175e-02, -1.202e-01, -1.714e-03, 6.319e-02, 8.983e-03, 5.977e-02, 3.453e-02, -1.001e-02, 2.379e-02, -4.821e-02, 1.728e-02, -7.353e-02, 1.146e-01, -4.821e-02, -4.476e-02) * s1_0_0;
	r0 += M4(4.797e-01, -2.697e-01, 3.128e-02, -2.673e-01, 7.470e-02, -3.538e-01, 3.413e-01, -2.115e-01, -4.658e-02, -5.600e-02, 2.708e-01, -2.821e-01, 1.527e-01, -7.118e-02, 1.159e-01, -3.647e-01) * s1_0_1;
	r1 += M4(-4.027e-02, -7.592e-02, 1.256e-01, -1.183e-01, -3.109e-01, -2.262e-01, 1.978e-01, -1.191e-01, 9.359e-03, -1.391e-01, -2.650e-01, -8.691e-02, -3.057e-01, -1.822e-02, 5.020e-02, -4.790e-03) * s1_0_1;
	r2 += M4(3.661e-01, -3.526e-02, 1.831e-01, -1.300e-01, -4.752e-01, -8.764e-02, -1.000e+00, -1.268e-01, 1.765e-01, -5.338e-02, -2.975e-01, -3.596e-01, -9.678e-02, -1.624e-02, 1.550e-01, -1.160e-01) * s1_0_1;
	r3 += M4(-1.146e-01, -1.585e-01, 1.519e-01, 2.731e-01, -8.286e-02, -3.790e-01, -5.564e-01, -2.864e-01, -5.314e-02, 3.868e-02, -1.446e-01, -1.633e-02, -4.741e-02, 5.921e-02, -1.548e-01, -1.372e-01) * s1_0_1;
	r0 += M4(-1.000e+00, 2.971e-01, -2.866e-02, 3.456e-01, -1.000e+00, 2.702e-01, -7.039e-02, -1.000e+00, -1.000e+00, -5.016e-01, 5.254e-02, -1.120e-01, -1.000e+00, -5.929e-02, 8.283e-02, -5.839e-01) * s1_0_2;
	r1 += M4(-2.284e-02, 5.604e-03, 1.135e-01, 1.083e-01, 4.252e-02, 9.636e-02, 9.811e-02, -5.262e-04, -5.709e-02, -4.822e-02, -5.990e-02, -2.167e-02, -2.487e-01, 3.697e-02, -6.062e-03, 5.572e-02) * s1_0_2;
	r2 += M4(-8.713e-02, -2.047e-02, -1.476e-02, -3.921e-02, -2.700e-01, 8.854e-03, -1.519e-01, -5.031e-03, 8.790e-02, -3.440e-03, 6.563e-02, -1.385e-01, -4.624e-02, -1.272e-02, 2.609e-02, -2.390e-02) * s1_0_2;
	r3 += M4(-2.062e-01, -1.200e-01, 5.407e-02, -5.992e-02, 6.271e-02, -1.894e-02, 1.301e-01, -1.823e-01, -5.851e-02, 3.164e-02, -1.307e-01, 4.333e-02, -4.218e-02, 6.019e-02, -9.016e-02, 6.711e-02) * s1_0_2;
	r0 += M4(5.268e-03, 3.792e-02, 3.621e-02, 1.065e-01, 2.645e-02, -7.529e-04, 6.851e-02, 1.387e-02, 1.866e-02, -6.192e-02, 2.004e-02, 3.135e-02, -1.109e-01, 5.256e-02, 8.004e-02, -1.370e-01) * s1_1_0;
	r1 += M4(5.139e-02, -1.560e-02, 1.415e-01, 2.734e-02, 1.142e-01, -7.698e-03, 1.018e-01, 6.474e-02, 6.951e-02, -1.005e-02, 3.222e-02, -2.431e-02, -2.924e-01, -2.905e-02, 2.589e-02, 4.333e-02) * s1_1_0;
	r2 += M4(1.104e-01, 1.143e-01, 2.164e-01, -7.303e-02, -2.562e-03, -3.721e-02, 3.969e-02, -4.070e-02, 4.454e-02, -1.379e-02, -1.351e-02, 6.682e-02, -5.879e-02, 6.266e-02, 6.669e-02, -1.832e-01) * s1_1_0;
	r3 += M4(-7.446e-02, -1.468e-01, 1.372e-01, 3.078e-02, -2.969e-02, -4.653e-02, -2.524e-02, -1.587e-02, 7.580e-02, 7.097e-02, 8.153e-02, 1.137e-02, -1.019e-01, 5.199e-02, 1.911e-03, -4.433e-02) * s1_1_0;
	r0 += M4(1.269e-01, 9.031e-02, -1.638e-01, 2.016e-01, 6.759e-02, -1.861e-02, -2.039e-01, -2.762e-01, 6.883e-02, -4.552e-03, 4.061e-02, 5.364e-01, -8.908e-02, -6.082e-02, 1.681e-01, -2.165e-01) * s1_1_1;
	r1 += M4(1.532e-01, 1.763e-01, -2.786e-01, 1.935e-02, 3.431e-01, -1.459e-01, 2.646e-01, 2.456e-01, -3.204e-01, -1.735e-02, -1.289e-02, -1.580e-01, -3.785e-02, -5.148e-02, -7.736e-02, -1.432e-01) * s1_1_1;
	r2 += M4(4.664e-03, 1.071e-02, -2.997e-01, 2.009e-01, 1.518e-01, 5.048e-02, -8.424e-02, -2.598e-02, 1.472e-01, -2.761e-02, 9.823e-03, 3.059e-02, -1.219e-01, 2.871e-02, 7.926e-02, -5.325e-02) * s1_1_1;
	r3 += M4(1.727e-01, -1.211e-01, -2.516e-01, 7.297e-02, 2.906e-01, 2.628e-02, -3.289e-02, 1.119e-02, 4.226e-02, -6.763e-02, 7.864e-02, 6.325e-02, -3.023e-01, 6.270e-02, -5.368e-02, -2.146e-01) * s1_1_1;
	r0 += M4(1.780e-01, -1.241e-03, 9.548e-03, -4.932e-01, 6.562e-02, 7.006e-02, -9.399e-02, -4.650e-01, -9.116e-03, -1.271e-01, 6.855e-02, 4.766e-01, -2.247e-01, -2.762e-01, 9.919e-02, 3.019e-01) * s1_1_2;
	r1 += M4(-4.012e-02, -1.941e-03, 2.304e-01, 1.629e-01, 4.245e-02, 5.876e-02, -2.403e-02, 7.105e-02, -7.619e-02, -3.034e-02, 8.427e-02, -6.147e-03, -3.116e-01, -3.859e-02, -1.063e-01, -5.415e-02) * s1_1_2;
	r2 += M4(-3.644e-02, -1.834e-02, -9.205e-02, -2.300e-01, 5.031e-02, -5.263e-03, 1.387e-02, 1.785e-02, 3.866e-02, -3.572e-03, 6.986e-03, -6.098e-02, -4.373e-03, 1.822e-03, 7.425e-02, -1.464e-01) * s1_1_2;
	r3 += M4(-1.580e-01, -1.276e-01, 1.934e-01, -2.952e-02, 6.237e-02, 2.219e-02, 6.268e-02, -2.300e-02, 2.941e-02, -9.961e-04, 3.208e-03, 1.242e-02, -2.541e-02, -5.059e-03, -1.608e-01, 1.574e-01) * s1_1_2;
	r0 += M4(-2.145e-02, 5.699e-02, -1.528e-02, -6.189e-02, 4.527e-03, -3.143e-02, 7.246e-02, 1.130e-01, -1.587e-02, 2.416e-02, -3.833e-02, 9.461e-02, -1.062e-01, -8.832e-02, 7.285e-02, -2.119e-01) * s1_2_0;
	r1 += M4(-6.426e-02, -2.024e-02, 1.150e-01, 3.105e-02, -1.916e-02, 1.551e-02, 6.149e-03, 4.749e-03, 1.774e-02, -2.278e-02, -3.373e-02, -6.918e-02, -2.461e-01, -9.246e-03, -2.406e-02, 1.597e-01) * s1_2_0;
	r2 += M4(-1.529e-02, -3.555e-02, -6.669e-03, -4.857e-02, 8.382e-03, -3.766e-03, -1.193e-02, -1.019e-04, 2.824e-02, 4.804e-03, 7.025e-03, 5.752e-02, -4.343e-02, 2.467e-02, -6.913e-03, -1.228e-01) * s1_2_0;
	r3 += M4(-4.637e-02, -1.317e-01, 7.396e-02, -7.169e-03, 2.119e-02, -1.854e-02, -2.607e-02, 2.013e-03, 8.432e-03, 2.623e-03, 2.282e-02, 1.071e-02, -6.367e-02, 6.427e-02, -2.705e-02, 8.955e-02) * s1_2_0;
	r0 += M4(2.368e-02, -3.240e-02, 6.577e-03, 2.031e-01, -1.438e-02, 3.276e-02, 3.835e-02, 7.065e-02, -7.264e-03, 6.207e-02, 2.547e-02, 1.304e-01, -7.639e-02, -1.471e-01, 1.713e-01, -3.664e-01) * s1_2_1;
	r1 += M4(-3.879e-02, -1.041e-01, 2.073e-01, 1.165e-01, -3.278e-02, -1.219e-03, 6.925e-02, 7.175e-02, 8.030e-02, 2.048e-02, -6.909e-02, -6.904e-02, -2.937e-01, 9.576e-02, -9.898e-02, 1.137e-01) * s1_2_1;
	r2 += M4(5.957e-02, -1.745e-02, -1.429e-01, 6.755e-02, 9.515e-03, 1.571e-02, 1.808e-02, -2.613e-02, -7.925e-03, 2.218e-02, -5.449e-02, 8.186e-03, -1.186e-01, 4.629e-02, 1.818e-01, -7.251e-02) * s1_2_1;
	r3 += M4(3.919e-02, -1.216e-01, 1.447e-01, -5.892e-02, -2.319e-02, 1.399e-03, -5.118e-03, -2.036e-02, -3.344e-02, -2.265e-02, 1.385e-02, -2.859e-02, -1.526e-01, 1.667e-02, -2.300e-01, 2.307e-01) * s1_2_1;
	r0 += M4(7.460e-02, 6.827e-02, 1.401e-03, 3.986e-01, 1.487e-02, 1.030e-02, 1.072e-02, -1.506e-01, -1.067e-01, -9.854e-02, -1.489e-03, 2.535e-01, -5.484e-02, -1.235e-01, 1.099e-01, -7.780e-01) * s1_2_2;
	r1 += M4(2.874e-02, 3.146e-03, 1.789e-02, 3.577e-02, -1.821e-02, -1.356e-03, -2.471e-03, -1.471e-03, 5.292e-02, -9.799e-03, -7.221e-04, -2.727e-02, -1.521e-01, 1.048e-02, -2.953e-02, 2.756e-02) * s1_2_2;
	r2 += M4(3.199e-02, -1.864e-02, 4.754e-02, -1.152e-02, 2.969e-03, 1.278e-02, -4.134e-02, 1.858e-02, 3.267e-03, 6.869e-03, -7.023e-02, 2.364e-02, -3.470e-02, 3.028e-02, -7.441e-03, -3.041e-02) * s1_2_2;
	r3 += M4(-4.440e-02, -1.375e-01, 2.299e-03, -6.207e-02, 4.169e-03, -2.472e-02, 1.649e-02, -3.290e-02, 2.284e-02, -1.010e-02, -2.051e-02, -6.866e-02, -3.862e-02, 9.189e-02, -3.526e-02, 1.470e-01) * s1_2_2;
	s0_0_0 = G[2][xy.y+0][xy.x+0]; s0_0_1 = G[2][xy.y+0][xy.x+1];
	s0_0_2 = G[2][xy.y+0][xy.x+2]; s0_1_0 = G[2][xy.y+1][xy.x+0];
	s0_1_1 = G[2][xy.y+1][xy.x+1]; s0_1_2 = G[2][xy.y+1][xy.x+2];
	s0_2_0 = G[2][xy.y+2][xy.x+0]; s0_2_1 = G[2][xy.y+2][xy.x+1];
	s0_2_2 = G[2][xy.y+2][xy.x+2]; s1_0_0 = G[3][xy.y+0][xy.x+0];
	s1_0_1 = G[3][xy.y+0][xy.x+1]; s1_0_2 = G[3][xy.y+0][xy.x+2];
	s1_1_0 = G[3][xy.y+1][xy.x+0]; s1_1_1 = G[3][xy.y+1][xy.x+1];
	s1_1_2 = G[3][xy.y+1][xy.x+2]; s1_2_0 = G[3][xy.y+2][xy.x+0];
	s1_2_1 = G[3][xy.y+2][xy.x+1]; s1_2_2 = G[3][xy.y+2][xy.x+2];
	r0 += M4(-4.203e-02, -1.228e-01, 6.237e-02, -1.096e-01, 1.671e-01, -1.741e-01, -8.766e-02, 2.956e-02, -6.151e-02, -3.562e-02, 4.223e-02, 1.656e-02, 8.150e-02, -7.116e-02, -3.785e-02, 1.895e-01) * s0_0_0;
	r1 += M4(-5.876e-03, 1.436e-02, -5.586e-03, 8.775e-02, 4.617e-02, -6.200e-03, 1.414e-01, 2.457e-02, -2.779e-02, 1.086e-01, -5.612e-02, 2.501e-02, 1.580e-02, 5.209e-02, -1.268e-01, -7.639e-02) * s0_0_0;
	r2 += M4(2.777e-02, 5.999e-02, 1.939e-02, -2.878e-02, -5.022e-02, 1.174e-01, 3.006e-02, -2.643e-02, 5.360e-02, -4.032e-02, 7.331e-02, 9.104e-02, 1.525e-01, -1.008e-01, -3.620e-03, 2.435e-01) * s0_0_0;
	r3 += M4(1.149e-02, 5.495e-02, -3.905e-02, -1.325e-02, 6.942e-02, -3.172e-02, 7.658e-02, 6.317e-03, -1.616e-01, -1.156e-01, 6.319e-02, -1.015e-01, 8.783e-02, 6.782e-02, 5.236e-02, 1.090e-01) * s0_0_0;
	r0 += M4(-1.137e-01, -1.611e-02, 6.830e-04, -6.413e-02, -8.097e-01, -6.705e-02, 7.052e-02, 1.179e-01, 1.051e-01, 2.952e-01, -3.389e-01, -5.587e-02, -6.065e-02, -1.866e-02, -9.767e-03, 1.238e-01) * s0_0_1;
	r1 += M4(1.798e-02, 7.883e-02, 1.139e-02, 4.655e-02, 8.190e-02, -5.353e-02, 8.450e-02, -6.603e-02, 3.276e-01, 3.725e-01, -1.356e-03, 1.642e-01, 1.976e-02, -1.381e-01, 4.287e-02, -1.255e-01) * s0_0_1;
	r2 += M4(-1.555e-02, 1.459e-02, 6.065e-02, -8.738e-02, 1.574e-01, -1.492e-02, -4.935e-02, 1.683e-02, -5.025e-01, -2.109e-02, 1.649e-01, 2.547e-01, -8.359e-02, 3.654e-02, 8.515e-02, 1.492e-01) * s0_0_1;
	r3 += M4(-7.374e-02, 3.563e-02, -1.851e-01, -4.870e-02, 6.565e-02, -1.056e-01, 1.013e-01, 2.096e-01, -6.845e-02, 2.053e-01, -2.172e-01, -7.930e-01, 6.862e-02, 1.000e-01, 2.808e-01, 3.052e-01) * s0_0_1;
	r0 += M4(-1.000e+00, -7.219e-02, 4.693e-02, -1.476e-01, -1.000e+00, 7.210e-02, -6.268e-03, -2.924e-02, -1.000e+00, -3.146e-01, 3.623e-03, 9.531e-02, -1.000e+00, -3.546e-02, 1.372e-01, 1.932e-01) * s0_0_2;
	r1 += M4(-2.770e-02, 4.173e-02, 2.719e-02, 5.996e-02, -1.193e-03, -1.905e-03, 7.901e-03, 4.800e-03, 1.462e-01, 7.195e-02, 4.144e-02, 5.635e-02, -1.198e-01, -8.294e-02, -7.570e-02, -1.196e-01) * s0_0_2;
	r2 += M4(-3.556e-02, 1.629e-02, -3.002e-02, -5.271e-02, -8.026e-03, -1.726e-03, -1.015e-02, 1.153e-02, 1.462e-01, 6.223e-03, 6.321e-02, -1.678e-02, 1.927e-01, -8.705e-04, 1.343e-01, -4.628e-02) * s0_0_2;
	r3 += M4(1.439e-02, 5.059e-02, -3.757e-03, -8.538e-03, 2.375e-02, 2.845e-02, 3.770e-02, -2.029e-02, 2.302e-02, -5.022e-03, 6.211e-02, 2.681e-02, -7.127e-02, 3.333e-02, -3.486e-02, 2.232e-01) * s0_0_2;
	r0 += M4(8.904e-02, 4.713e-03, 4.785e-02, -6.341e-02, 2.068e-02, 2.176e-02, -2.387e-01, 1.053e-01, 2.892e-02, -1.051e-01, 1.057e-01, -1.509e-01, 1.085e-01, -2.186e-02, -3.106e-02, -1.917e-02) * s0_1_0;
	r1 += M4(-1.314e-01, -4.641e-02, -1.140e-01, -1.438e-02, 1.123e-01, 7.098e-02, -8.321e-02, 1.143e-01, -2.233e-02, 3.197e-02, 4.427e-03, -6.134e-02, 1.110e-01, -1.105e-02, -2.097e-01, -1.510e-01) * s0_1_0;
	r2 += M4(-4.619e-02, -8.228e-02, 1.233e-01, -6.907e-02, 1.027e-01, 5.912e-01, -2.874e-01, 8.466e-02, -1.180e-02, 5.702e-02, 1.403e-01, -1.028e-01, 1.067e-01, 2.423e-01, -1.960e-01, 1.777e-01) * s0_1_0;
	r3 += M4(9.816e-03, -3.547e-02, 3.856e-02, 1.120e-01, 2.390e-01, 8.109e-02, -1.305e-01, -2.849e-03, -1.589e-01, -1.295e-01, -1.293e-01, -1.561e-03, 2.003e-01, 2.765e-01, -2.734e-02, 1.082e-01) * s0_1_0;
	r0 += M4(1.273e-02, -1.369e-01, -5.475e-02, -2.680e-01, 1.349e-01, 4.207e-01, -1.056e-01, 2.475e-02, -1.976e-02, 1.246e-01, 2.174e-01, 9.888e-02, 1.882e-01, -5.443e-02, -7.994e-02, -1.272e-01) * s0_1_1;
	r1 += M4(-7.779e-02, -9.819e-02, -1.723e-01, -8.269e-03, -1.668e-01, -2.109e-02, -2.436e-01, -1.882e-01, -4.189e-01, -7.176e-02, -3.933e-01, -1.778e-01, 1.535e-01, 2.593e-01, 1.536e-01, 1.219e-01) * s0_1_1;
	r2 += M4(7.009e-02, -1.663e-02, -1.089e-01, -2.169e-01, -3.461e-01, 2.702e-03, -3.970e-01, 1.037e-01, -3.175e-03, -1.083e-01, -7.912e-01, -8.296e-02, -8.138e-03, -9.178e-02, -6.812e-01, -1.731e-01) * s0_1_1;
	r3 += M4(-7.199e-02, -1.892e-02, -3.364e-01, 3.331e-01, -2.504e-02, -1.014e-01, -6.584e-02, -5.894e-01, -2.174e-01, -1.460e-01, -2.755e-01, -9.717e-02, -2.530e-01, -8.000e-02, 9.961e-02, -1.259e-01) * s0_1_1;
	r0 += M4(-1.209e-01, -2.085e-01, 5.048e-02, 1.464e-03, -8.778e-02, -1.815e-01, -1.613e-02, -1.000e+00, -7.006e-02, -3.599e-01, 9.864e-02, -4.435e-01, 1.624e-01, -8.630e-02, 6.348e-02, 3.678e-01) * s0_1_2;
	r1 += M4(-2.660e-02, 1.043e-01, 5.824e-02, 9.455e-02, -1.208e-02, -4.002e-02, -7.014e-02, -1.653e-04, 5.379e-02, 4.580e-03, -1.871e-02, -3.270e-02, 2.378e-02, -9.897e-02, -1.619e-01, -2.247e-01) * s0_1_2;
	r2 += M4(1.409e-02, 1.822e-02, -1.882e-02, -1.927e-01, -5.367e-02, 7.042e-03, -8.559e-03, 1.924e-02, 6.296e-02, -8.464e-03, -8.239e-02, -1.626e-01, -7.034e-02, 3.047e-02, 1.087e-01, 1.557e-01) * s0_1_2;
	r3 += M4(1.373e-02, 8.192e-02, 3.366e-02, 4.335e-02, -3.607e-02, -7.480e-03, -8.883e-02, 5.458e-02, -4.723e-02, -1.039e-01, -9.442e-04, -2.491e-02, 1.412e-02, -6.735e-02, -4.360e-02, 1.273e-01) * s0_1_2;
	r0 += M4(-2.507e-02, -7.264e-02, 5.394e-02, -1.592e-01, 9.218e-02, -1.484e-02, -1.205e-01, -9.634e-02, -2.925e-02, -3.471e-03, 2.612e-02, -6.346e-02, -2.547e-03, -5.704e-02, -4.484e-02, 2.403e-02) * s0_2_0;
	r1 += M4(-1.642e-01, 4.983e-02, -3.957e-02, 5.727e-02, 1.147e-01, 1.951e-02, 6.532e-02, 8.264e-02, 1.194e-03, 1.466e-02, -4.555e-02, -5.086e-02, 2.851e-02, 1.186e-02, -6.376e-02, -1.431e-01) * s0_2_0;
	r2 += M4(-4.351e-02, -1.544e-02, -1.399e-02, -6.897e-02, 5.235e-02, 3.406e-02, -2.099e-01, 4.993e-02, -1.033e-02, 1.326e-02, 4.675e-02, -4.053e-02, -6.646e-03, -3.001e-02, 5.344e-02, 6.620e-02) * s0_2_0;
	r3 += M4(-6.932e-03, 1.254e-02, -1.230e-01, 3.715e-03, 2.561e-02, 5.335e-02, 2.118e-02, -2.712e-02, -1.753e-02, -3.436e-02, -4.882e-02, 6.653e-03, 4.416e-02, 1.771e-02, 4.542e-02, 4.284e-02) * s0_2_0;
	r0 += M4(-1.101e-02, -5.709e-02, 4.119e-02, 2.516e-01, 1.825e-02, 1.849e-02, -1.405e-01, -6.948e-02, -1.199e-02, -3.016e-02, 1.010e-01, -7.674e-02, 8.584e-02, 3.474e-02, -8.258e-02, -7.162e-02) * s0_2_1;
	r1 += M4(-1.151e-01, -6.901e-03, 9.583e-02, 9.249e-02, 1.822e-04, 6.812e-02, 1.062e-01, 1.256e-01, -6.255e-02, 3.825e-02, -6.805e-02, -4.653e-02, 3.313e-02, -9.318e-02, 1.452e-01, -6.912e-02) * s0_2_1;
	r2 += M4(-2.116e-02, 2.564e-02, -3.457e-03, 8.584e-02, -5.820e-02, 1.997e-02, -1.340e-02, 4.058e-02, -5.926e-02, 3.044e-02, 2.381e-03, -3.974e-02, 1.755e-01, 4.445e-03, -1.514e-01, 2.073e-01) * s0_2_1;
	r3 += M4(2.500e-03, 4.902e-02, -1.220e-02, 2.453e-02, 1.829e-01, 1.620e-01, 7.705e-02, 1.799e-02, 1.123e-02, -5.089e-02, -7.946e-02, -2.867e-02, 1.318e-01, 1.222e-01, 2.194e-01, 6.122e-02) * s0_2_1;
	r0 += M4(3.500e-03, 2.066e-02, 3.478e-02, 5.693e-01, -4.769e-02, -1.667e-02, -1.080e-04, -3.557e-01, 1.228e-02, -4.630e-02, 5.560e-03, -3.154e-01, 7.791e-02, -1.060e-01, -4.514e-02, 1.102e-01) * s0_2_2;
	r1 += M4(-1.737e-02, 3.765e-02, 3.841e-02, 5.742e-02, -2.634e-02, 2.168e-02, 4.662e-02, 6.036e-02, 6.744e-04, -3.723e-03, 5.451e-03, -1.689e-03, -1.918e-02, 2.638e-02, -4.127e-02, -1.072e-01) * s0_2_2;
	r2 += M4(-1.081e-02, 9.549e-03, -3.563e-02, 5.186e-02, -1.398e-02, 3.741e-03, 2.446e-03, 1.224e-02, -2.304e-02, 5.961e-03, 1.776e-02, -3.934e-02, 8.080e-02, -2.171e-02, 1.558e-01, 1.181e-01) * s0_2_2;
	r3 += M4(-1.664e-02, 6.485e-02, -3.584e-02, -1.342e-02, 1.775e-02, 3.971e-02, 4.332e-02, -2.174e-02, -1.497e-02, -3.528e-02, -3.603e-02, 1.934e-02, 4.111e-02, 5.414e-02, 2.059e-03, 1.430e-01) * s0_2_2;
	r0 += M4(-2.689e-01, 1.649e-01, 3.338e-03, -1.431e-01, -6.910e-02, -5.138e-02, 4.134e-02, -4.455e-02, 9.485e-02, -8.217e-02, 3.253e-02, -3.959e-01, -8.637e-02, 2.353e-02, -7.080e-03, 2.057e-02) * s1_0_0;
	r1 += M4(7.262e-02, 6.106e-02, -1.140e-01, 2.834e-02, -1.331e-02, 1.619e-03, 3.287e-02, 3.678e-02, -2.118e-01, -3.430e-03, -1.849e-02, 4.324e-02, 2.403e-02, -1.057e-02, -1.679e-02, -7.022e-03) * s1_0_0;
	r2 += M4(1.798e-01, -2.958e-02, -6.054e-02, 4.908e-03, 4.722e-03, 1.690e-03, 1.757e-03, -4.392e-02, -1.810e-03, 3.405e-02, 8.202e-02, -4.676e-03, 7.223e-02, -8.217e-02, 1.044e-01, 1.288e-02) * s1_0_0;
	r3 += M4(-6.550e-02, 6.812e-02, -1.848e-01, -3.074e-02, -7.353e-03, -3.460e-02, -5.479e-02, 3.310e-02, 3.837e-02, -5.829e-02, 1.805e-03, 5.972e-02, -1.494e-02, 3.145e-03, 1.902e-02, -7.394e-03) * s1_0_0;
	r0 += M4(4.057e-01, 1.610e-02, -9.091e-02, 2.591e-01, 3.228e-02, -3.193e-01, 9.970e-02, -6.666e-02, -2.641e-01, -4.104e-01, 1.389e-02, -1.228e-01, -5.211e-02, 4.486e-02, -2.277e-02, 1.429e-01) * s1_0_1;
	r1 += M4(-1.181e-02, 8.735e-02, 4.113e-02, -1.562e-02, -2.050e-02, 5.016e-02, 1.013e-01, -1.273e-01, -7.272e-02, -5.299e-03, 3.857e-02, 5.583e-02, 3.408e-02, -8.177e-02, 1.232e-01, -6.649e-02) * s1_0_1;
	r2 += M4(-3.132e-01, -3.931e-03, -1.532e-02, -6.434e-02, 2.014e-02, -3.496e-04, 1.732e-02, 3.138e-02, 1.252e-01, 1.997e-03, 7.009e-02, 1.360e-01, 1.743e-01, 1.177e-02, 3.060e-01, 4.259e-02) * s1_0_1;
	r3 += M4(5.122e-02, -3.608e-02, 6.520e-02, 1.659e-01, 4.941e-02, 1.894e-02, -4.421e-01, 1.363e-01, 2.345e-03, -2.924e-02, 6.293e-02, 7.951e-02, 1.358e-02, -3.050e-02, 2.117e-01, -6.770e-02) * s1_0_1;
	r0 += M4(-1.000e+00, -4.426e-02, 7.090e-02, -1.618e-01, -1.000e+00, 1.048e-01, 8.658e-02, -8.413e-02, -1.000e+00, 4.194e-02, 4.961e-02, -4.950e-02, -1.000e+00, -3.316e-02, 2.515e-02, 1.473e-01) * s1_0_2;
	r1 += M4(-5.261e-04, -3.420e-02, -1.776e-02, 1.666e-02, -1.105e-01, -3.504e-02, 2.621e-02, 3.933e-02, -2.170e-01, 8.002e-03, -1.658e-02, 3.313e-02, 2.989e-02, 5.929e-02, -3.841e-02, -3.222e-02) * s1_0_2;
	r2 += M4(1.225e-02, 9.725e-03, 4.709e-02, -5.332e-03, -3.450e-01, 2.307e-02, -5.638e-02, 5.033e-02, -7.753e-02, 1.994e-02, -6.361e-03, -4.082e-02, 1.346e-01, 1.569e-03, -1.261e-02, 7.662e-02) * s1_0_2;
	r3 += M4(2.115e-02, 8.342e-03, -5.739e-02, 4.126e-02, 3.389e-02, 2.643e-02, -6.203e-02, -2.992e-01, 7.310e-04, 4.477e-02, 3.747e-02, 3.196e-02, -1.482e-02, 5.935e-02, 3.035e-02, 6.194e-02) * s1_0_2;
	r0 += M4(1.467e-02, -5.678e-02, 2.272e-01, -1.049e-01, -5.721e-02, -2.956e-02, 7.012e-02, 1.337e-03, 9.842e-03, -1.600e-01, 4.290e-02, -3.984e-01, 9.363e-03, -1.495e-02, -1.751e-02, -1.989e-02) * s1_1_0;
	r1 += M4(-2.996e-01, -8.512e-02, 3.635e-02, -3.706e-01, -1.687e-03, -2.239e-03, 8.138e-03, -7.477e-02, 3.097e-02, 2.366e-02, 1.081e-02, 1.349e-01, -4.460e-02, -1.349e-02, -1.565e-02, 5.400e-02) * s1_1_0;
	r2 += M4(-1.737e-01, -6.823e-02, -7.975e-01, -3.631e-01, 9.345e-03, 2.612e-01, 7.449e-02, -6.705e-02, -1.808e-02, -4.585e-02, 2.046e-01, -3.269e-02, 9.604e-02, -5.565e-02, 1.156e-01, 1.156e-01) * s1_1_0;
	r3 += M4(-2.452e-01, -1.375e-01, -7.903e-01, 1.860e-01, -9.104e-02, -3.329e-02, -1.226e-01, 6.770e-03, -1.430e-02, 7.824e-02, 2.373e-01, -1.360e-03, -1.408e-02, 3.124e-02, 2.738e-02, 3.130e-02) * s1_1_0;
	r0 += M4(-2.788e-02, -3.918e-01, -1.829e-01, -5.950e-01, 1.134e-01, -5.088e-02, -3.044e-01, -4.377e-02, 3.792e-02, -7.126e-02, 2.294e-01, 2.861e-01, -1.605e-01, -1.125e-01, 1.632e-02, -2.237e-01) * s1_1_1;
	r1 += M4(1.717e-01, 5.104e-01, 1.547e-01, 2.658e-01, 1.970e-01, 3.467e-01, 4.407e-02, 6.851e-02, -1.553e-01, -2.465e-02, -2.464e-01, 1.689e-01, 1.728e-02, -1.734e-01, 7.429e-02, 8.552e-02) * s1_1_1;
	r2 += M4(-5.659e-02, -3.995e-02, 1.384e-02, -2.534e-01, 1.062e-01, -1.780e-02, 3.364e-02, 1.524e-01, 2.878e-01, 5.612e-02, 3.374e-01, -1.634e-02, 4.785e-02, -9.429e-03, 4.585e-01, -4.161e-02) * s1_1_1;
	r3 += M4(1.802e-01, 3.700e-01, 2.970e-01, 9.737e-02, 3.267e-01, 1.383e-01, -3.197e-01, -4.761e-02, 8.169e-03, -7.375e-03, -6.105e-02, 2.086e-01, -3.130e-01, -1.480e-02, 3.239e-01, 9.526e-02) * s1_1_1;
	r0 += M4(-4.470e-02, 5.527e-02, 7.206e-02, -4.156e-01, 2.059e-01, 1.117e-01, 3.898e-01, -1.979e-01, -2.939e-01, 2.375e-01, 6.379e-02, -6.330e-01, 2.376e-01, -1.021e-01, 2.599e-02, 3.009e-01) * s1_1_2;
	r1 += M4(-5.408e-02, -6.986e-03, -2.797e-02, -6.666e-03, -2.901e-01, -2.479e-01, 8.267e-02, -8.143e-02, -1.199e-01, 1.558e-02, -1.389e-01, 3.120e-02, 1.138e-02, -5.167e-02, -5.797e-02, -9.204e-02) * s1_1_2;
	r2 += M4(-3.894e-02, 2.210e-02, 8.962e-02, 7.474e-03, -6.784e-01, 2.791e-02, -4.881e-03, -1.973e-01, -1.862e-02, 3.227e-02, 1.152e-01, 9.014e-03, 2.908e-01, -1.271e-02, 1.316e-01, 2.963e-01) * s1_1_2;
	r3 += M4(5.536e-03, 2.072e-02, -4.581e-02, 8.689e-02, -1.569e-01, -1.529e-01, 3.839e-02, -9.098e-01, 2.508e-02, -1.445e-02, 9.791e-02, -1.160e-03, 1.390e-01, -9.513e-02, 1.759e-01, 1.877e-01) * s1_1_2;
	r0 += M4(-2.438e-02, 1.507e-02, 3.732e-02, -1.017e-01, -4.711e-02, -1.265e-02, 3.298e-02, 6.754e-02, 2.679e-02, -3.738e-02, 2.713e-02, -2.850e-01, -2.279e-02, -1.551e-02, 3.985e-02, 4.345e-02) * s1_2_0;
	r1 += M4(-1.146e-01, 5.928e-02, 2.938e-02, -2.951e-02, -2.802e-02, 5.246e-02, -4.688e-02, -5.537e-02, -1.796e-01, -7.024e-04, -5.758e-02, 6.000e-02, 3.040e-02, -1.571e-03, 5.640e-04, -3.993e-02) * s1_2_0;
	r2 += M4(-5.056e-02, -3.270e-02, 9.287e-02, -2.479e-02, -6.478e-03, 1.335e-02, 2.007e-02, -1.462e-02, 6.841e-02, 1.964e-02, 5.053e-02, 1.059e-02, -3.164e-03, 1.880e-02, -3.105e-02, -2.853e-02) * s1_2_0;
	r3 += M4(-4.673e-02, -3.653e-02, 5.027e-02, -4.307e-02, -5.139e-02, 3.633e-03, -7.625e-02, 3.635e-02, 3.741e-02, 1.852e-02, 8.206e-02, -2.488e-02, 7.354e-02, 8.110e-03, -1.889e-02, -1.141e-02) * s1_2_0;
	r0 += M4(1.109e-03, -1.270e-01, -1.292e-03, -8.761e-01, -3.865e-03, -2.220e-02, 9.163e-02, 1.072e-01, -4.342e-02, 6.867e-02, 5.972e-02, -5.241e-02, 3.857e-02, -1.833e-02, 9.184e-02, -2.273e-02) * s1_2_1;
	r1 += M4(-2.886e-02, 6.253e-02, -7.501e-03, -1.811e-02, 1.101e-01, 3.361e-03, 2.368e-02, -8.944e-02, -2.698e-02, 4.092e-02, 2.634e-02, 9.274e-02, 2.291e-02, 3.629e-02, 1.937e-02, -7.177e-02) * s1_2_1;
	r2 += M4(-8.769e-02, -2.422e-02, 8.663e-03, -1.424e-02, 3.629e-02, 3.738e-02, 9.866e-02, -2.484e-02, -1.061e-01, 2.123e-02, 8.831e-02, -6.675e-02, 1.092e-01, -6.392e-03, 1.951e-01, -4.959e-02) * s1_2_1;
	r3 += M4(2.642e-02, -2.766e-02, 1.133e-03, 5.051e-02, -4.026e-02, -8.850e-02, -1.600e-01, 1.881e-02, -6.176e-02, 7.417e-03, 8.390e-02, 2.884e-02, -6.051e-02, -8.993e-02, 7.394e-03, -5.107e-03) * s1_2_1;
	r0 += M4(1.779e-02, 4.996e-02, 5.806e-02, -2.686e-01, 1.663e-01, 3.813e-02, 1.885e-01, 2.572e-01, -2.573e-02, -2.726e-02, 4.213e-02, -7.182e-01, -5.219e-02, -6.149e-02, 3.694e-02, 2.647e-01) * s1_2_2;
	r1 += M4(-6.558e-02, -2.499e-02, 2.232e-03, -1.826e-03, -1.555e-01, -2.932e-02, -3.713e-02, 1.823e-02, -2.080e-01, -1.034e-02, -1.412e-02, 1.872e-02, 1.300e-01, 2.736e-03, 1.250e-02, -9.569e-02) * s1_2_2;
	r2 += M4(-8.499e-03, 1.033e-02, 2.273e-02, 7.198e-02, 7.340e-02, 2.726e-02, -1.818e-02, 3.249e-04, -1.621e-01, 1.878e-02, 4.746e-02, 1.903e-02, 7.687e-02, -7.296e-03, -1.562e-02, 2.013e-02) * s1_2_2;
	r3 += M4(-1.542e-02, -2.773e-03, -1.393e-02, 2.115e-02, -1.072e-01, -5.407e-02, -4.716e-02, -2.468e-01, 1.737e-03, -4.933e-02, -7.306e-02, 2.036e-02, 1.159e-01, -8.847e-02, -4.429e-03, 2.062e-02) * s1_2_2;
	r0 = clamp(r0, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0));
	r1 = clamp(r1, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r1));
	r2 = clamp(r2, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r2));
	r3 = clamp(r3, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r3));
}

//!DESC CuNNy-4x16-SOFT-conv4
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND conv3
//!BIND LUMA
//!SAVE conv4
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
shared V4 G[4][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(2, 2) + ivec2(1, 1)) * conv3_pt;
			V4 sr0 = V4(conv3_gather(p, 0));
			V4 sg0 = V4(conv3_gather(p, 1));
			V4 sb0 = V4(conv3_gather(p, 2));
			V4 sa0 = V4(conv3_gather(p, 3));
			G[0][ay][ax] = V4(sr0.w, sg0.w, sb0.w, sa0.w);
			G[1][ay][ax] = V4(sr0.z, sg0.z, sb0.z, sa0.z);
			G[2][ay][ax] = V4(sr0.x, sg0.x, sb0.x, sa0.x);
			G[3][ay][ax] = V4(sr0.y, sg0.y, sb0.y, sa0.y);
		}
	}
	barrier();
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0, r1, r2, r3;
	r0 = V4(0.0); r1 = V4(0.0); r2 = V4(0.0); r3 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2]; s1_0_0 = G[1][xy.y+0][xy.x+0];
	s1_0_1 = G[1][xy.y+0][xy.x+1]; s1_0_2 = G[1][xy.y+0][xy.x+2];
	s1_1_0 = G[1][xy.y+1][xy.x+0]; s1_1_1 = G[1][xy.y+1][xy.x+1];
	s1_1_2 = G[1][xy.y+1][xy.x+2]; s1_2_0 = G[1][xy.y+2][xy.x+0];
	s1_2_1 = G[1][xy.y+2][xy.x+1]; s1_2_2 = G[1][xy.y+2][xy.x+2];
	r0 += M4(-1.179e-02, -1.191e-01, 7.751e-02, -1.433e-02, 9.470e-03, 1.083e-02, 2.285e-03, -1.743e-02, -1.499e-01, 2.499e-02, -2.388e-02, -5.634e-02, -1.254e-01, 8.595e-02, -5.783e-02, 2.444e-02) * s0_0_0;
	r1 += M4(-3.062e-01, 4.090e-02, -3.413e-01, 4.906e-02, 1.124e-01, -6.882e-02, 1.058e-01, -2.169e-02, -5.356e-02, -6.381e-02, 5.686e-02, -4.232e-02, -1.945e-01, -3.028e-02, -3.322e-02, -1.032e-01) * s0_0_0;
	r2 += M4(1.038e-02, 4.435e-03, -2.174e-01, 7.596e-02, 1.150e-01, -6.153e-03, 1.745e-01, -9.511e-02, 7.973e-02, -7.080e-03, 2.913e-02, -2.837e-02, -1.116e-01, -2.083e-02, -7.351e-02, 1.914e-01) * s0_0_0;
	r3 += M4(-5.040e-02, 2.438e-03, -5.628e-03, -1.406e-02, -2.586e-02, 3.233e-02, 7.923e-02, 7.991e-02, -4.567e-02, -1.297e-03, 9.014e-03, -6.769e-03, -3.063e-02, -4.544e-02, -8.695e-02, -1.121e-01) * s0_0_0;
	r0 += M4(-2.885e-02, -1.106e-01, -2.112e-02, 7.737e-02, 1.562e-02, -9.963e-02, 6.655e-02, -1.345e-02, -1.996e-01, 8.330e-02, -5.861e-02, 4.512e-02, -2.566e-01, -1.887e-01, 1.102e-02, 2.506e-02) * s0_0_1;
	r1 += M4(1.193e-02, 1.264e-02, -1.518e-01, -1.330e-01, 1.177e-01, -6.799e-05, 5.153e-02, 2.102e-02, -3.043e-01, -5.169e-02, -5.859e-01, -1.336e-01, -1.110e-01, -4.576e-02, -1.458e-02, 7.234e-02) * s0_0_1;
	r2 += M4(7.459e-02, 8.714e-02, 6.156e-02, -1.712e-02, 6.817e-02, -5.564e-02, 4.823e-02, 1.729e-02, -1.207e-01, -3.847e-02, 1.371e-01, 2.232e-03, -1.464e-01, 8.706e-03, -7.470e-02, 9.658e-02) * s0_0_1;
	r3 += M4(5.572e-02, 9.132e-02, 1.079e-02, -6.587e-03, -1.838e-03, 1.309e-02, 2.169e-02, 7.830e-02, -7.313e-02, -2.691e-02, -1.528e-02, -1.298e-01, -8.379e-02, -2.139e-01, 2.965e-02, -3.097e-01) * s0_0_1;
	r0 += M4(-6.429e-03, 3.136e-03, -6.965e-02, -2.454e-02, 3.039e-02, 1.496e-02, -3.817e-02, 1.801e-02, -4.776e-02, 1.003e-02, 4.162e-02, -4.924e-03, 5.676e-03, -2.747e-02, 5.337e-02, -1.752e-02) * s0_0_2;
	r1 += M4(-7.514e-02, 1.405e-02, -1.078e-01, -4.344e-02, -1.422e-02, -3.891e-03, 1.253e-02, -1.349e-02, -2.736e-02, -5.271e-02, -1.924e-01, -2.543e-02, -7.054e-02, -1.774e-02, -7.439e-02, -3.336e-02) * s0_0_2;
	r2 += M4(-5.914e-02, -4.818e-03, -1.157e-01, 9.710e-02, 4.576e-02, 2.726e-02, 3.879e-02, 3.622e-02, -2.142e-02, 3.061e-03, -1.995e-02, 2.483e-02, -6.268e-02, 4.016e-02, -6.575e-02, 9.311e-02) * s0_0_2;
	r3 += M4(-4.359e-02, -3.194e-02, -3.415e-02, -1.964e-03, 1.203e-02, 1.296e-02, -7.951e-03, -3.751e-02, -5.191e-02, -2.112e-02, 1.593e-02, -1.383e-02, 1.264e-02, 5.428e-02, 1.493e-02, 9.189e-02) * s0_0_2;
	r0 += M4(2.576e-01, 2.199e-01, 2.500e-01, 4.035e-01, -5.534e-02, 6.025e-02, -1.332e-01, -1.431e-01, -2.413e-01, -7.305e-03, -8.515e-02, -2.096e-01, -2.249e-02, -2.474e-01, 7.557e-02, -8.431e-02) * s0_1_0;
	r1 += M4(4.291e-01, 8.325e-02, 2.319e-01, 2.514e-01, -1.520e-01, 1.816e-02, 9.878e-02, -1.031e-01, 3.429e-02, -3.757e-02, -2.703e-02, 7.027e-02, -1.000e+00, 2.937e-02, -1.478e-01, -3.362e-02) * s0_1_0;
	r2 += M4(2.510e-01, 4.612e-02, 6.597e-01, 2.530e-01, -5.106e-01, -5.981e-03, -3.848e-01, -2.196e-01, -9.494e-02, 5.407e-03, -1.268e-01, -2.931e-01, -4.517e-01, 1.674e-02, -1.714e-01, 5.147e-01) * s0_1_0;
	r3 += M4(2.291e-01, -3.324e-01, 2.179e-01, -1.995e-01, -3.214e-01, 1.574e-02, -7.576e-02, 2.222e-01, -9.613e-03, 2.764e-03, -2.385e-02, -7.314e-01, 1.713e-01, -1.807e-01, -3.789e-01, -4.615e-01) * s0_1_0;
	r0 += M4(1.501e-01, 4.702e-01, 2.752e-01, 2.289e-01, 9.771e-03, 9.119e-02, 1.213e-01, 1.493e-03, 1.441e-01, -9.553e-02, -3.441e-01, -3.040e-02, -1.803e-01, -6.475e-03, -3.257e-01, 5.310e-02) * s0_1_1;
	r1 += M4(6.227e-01, 7.705e-02, 5.946e-01, 4.554e-01, 1.012e-02, -8.543e-02, -1.538e-01, -1.648e-01, 1.781e-01, -5.679e-01, -6.114e-01, -1.625e-01, -3.159e-01, 9.085e-02, -2.368e-01, 1.795e-01) * s0_1_1;
	r2 += M4(4.042e-01, 3.814e-01, 4.504e-01, 7.168e-02, 3.744e-02, 2.365e-01, 8.114e-03, 1.643e-01, -5.912e-01, -2.466e-01, -7.160e-01, -4.323e-01, -1.044e-02, -8.824e-02, -2.007e-01, 3.086e-01) * s0_1_1;
	r3 += M4(1.028e-01, 4.172e-01, -2.279e-02, -8.991e-03, 4.945e-02, 2.281e-01, 1.761e-03, 2.764e-01, -2.898e-01, 3.910e-02, 6.266e-02, -6.280e-01, -2.947e-02, -3.654e-01, 1.775e-01, -1.000e+00) * s0_1_1;
	r0 += M4(3.305e-02, 6.137e-02, -5.625e-02, 5.173e-02, 2.595e-02, -2.622e-02, -1.168e-02, -1.571e-02, -2.639e-02, 6.334e-03, 7.251e-02, -4.161e-02, 9.908e-02, 5.699e-02, -3.208e-02, 5.207e-03) * s0_1_2;
	r1 += M4(4.211e-02, -8.178e-03, -1.459e-01, -2.874e-01, -5.000e-02, 1.023e-02, -6.959e-02, -7.301e-03, 2.132e-02, 1.447e-01, -1.834e-01, -2.592e-01, -6.087e-03, 6.844e-02, -2.730e-01, -1.948e-02) * s0_1_2;
	r2 += M4(-4.302e-02, -1.025e-01, 1.861e-01, -6.247e-02, 3.337e-02, -3.739e-02, 9.889e-02, 2.144e-02, -5.166e-03, -1.064e-01, -1.256e-01, -1.565e-02, 2.123e-02, 5.946e-02, -7.729e-02, 9.270e-02) * s0_1_2;
	r3 += M4(-1.285e-02, 2.159e-03, -3.410e-02, -2.466e-02, 1.297e-02, 3.536e-03, -8.137e-03, -1.487e-02, -1.399e-01, -1.086e-01, -3.439e-03, 1.869e-01, -8.247e-03, 6.111e-02, -9.831e-02, 2.379e-01) * s0_1_2;
	r0 += M4(-7.040e-01, -7.251e-02, -1.252e-01, -1.121e-01, 7.244e-02, -2.270e-01, 3.411e-02, -2.724e-02, -1.412e-03, -2.044e-03, 8.342e-03, 4.480e-03, -2.854e-01, 1.182e-01, -7.853e-02, 2.443e-01) * s0_2_0;
	r1 += M4(1.052e-01, -2.723e-01, 1.524e-01, 3.802e-02, 7.090e-02, -4.230e-02, -1.808e-01, -2.435e-02, -2.390e-03, -2.318e-02, 1.215e-02, 1.687e-02, 2.819e-01, 4.860e-02, 1.616e-01, 1.101e-01) * s0_2_0;
	r2 += M4(6.996e-02, -4.591e-01, 2.098e-01, 2.963e-02, 8.429e-02, 5.813e-02, -1.154e-02, 2.841e-01, -3.706e-02, -5.052e-02, 2.867e-02, -1.451e-01, -3.480e-02, -7.642e-03, 2.406e-02, 5.839e-02) * s0_2_0;
	r3 += M4(6.083e-01, -4.104e-01, -5.047e-01, -2.213e-01, -5.634e-02, -1.485e-02, 1.124e-02, -4.557e-01, 9.444e-02, -1.446e-02, -2.806e-02, -7.614e-02, -1.748e-01, -3.108e-02, 3.033e-02, -8.598e-02) * s0_2_0;
	r0 += M4(-1.365e-01, -2.765e-02, -3.413e-01, -2.049e-01, 8.903e-03, -2.112e-02, 9.447e-02, 8.717e-02, -2.483e-03, 1.046e-02, -2.255e-02, -2.017e-01, 1.753e-01, 2.629e-01, -5.353e-02, -8.059e-02) * s0_2_1;
	r1 += M4(-3.151e-01, -3.451e-01, -3.651e-02, 4.332e-01, -3.618e-02, 1.408e-01, 8.964e-02, -7.990e-02, 5.754e-03, 1.517e-01, 1.305e-01, 1.625e-02, 1.880e-01, -2.074e-01, -2.608e-02, 3.604e-02) * s0_2_1;
	r2 += M4(1.752e-01, 7.873e-01, 6.654e-02, 1.016e-01, -9.930e-02, -3.935e-01, -2.283e-01, 2.081e-02, -6.194e-02, -1.566e-01, -2.398e-01, -1.017e-01, -9.547e-02, 1.170e-01, 1.167e-01, 1.569e-01) * s0_2_1;
	r3 += M4(2.036e-01, 4.204e-02, 1.814e-01, -1.444e-02, -7.017e-02, 8.891e-02, -1.648e-02, 4.647e-01, -4.123e-02, -1.376e-02, -2.143e-03, -1.333e-01, 7.676e-02, 1.264e-01, 9.290e-02, 4.868e-02) * s0_2_1;
	r0 += M4(2.393e-02, 2.666e-02, 2.702e-03, -6.976e-03, 4.177e-03, -1.734e-02, -3.869e-02, 2.881e-02, 2.074e-02, 1.683e-02, -5.543e-02, 8.698e-03, -5.656e-02, 1.217e-01, -1.095e-01, 1.786e-02) * s0_2_2;
	r1 += M4(4.183e-02, 3.980e-02, 7.592e-02, -1.840e-02, -3.114e-03, -5.778e-02, -2.552e-02, 1.212e-02, 4.986e-04, 4.417e-03, 6.702e-02, -5.845e-02, -1.045e-04, 1.813e-02, 1.060e-01, 1.554e-02) * s0_2_2;
	r2 += M4(-1.779e-03, -1.418e-01, -1.257e-01, -7.134e-02, 2.617e-02, 4.018e-02, -9.412e-02, 9.366e-02, -3.261e-02, -2.362e-02, -3.920e-02, -6.137e-02, -3.490e-02, -3.853e-02, 1.296e-02, 5.084e-02) * s0_2_2;
	r3 += M4(-6.645e-02, -1.933e-01, -1.541e-02, 4.711e-02, -5.798e-03, -2.564e-02, 1.913e-02, -1.041e-02, 1.749e-02, -3.007e-02, 3.762e-03, 2.653e-02, -3.948e-02, -8.049e-02, -4.217e-02, -4.220e-02) * s0_2_2;
	r0 += M4(5.543e-02, 1.438e-03, 2.439e-02, -1.918e-02, -1.678e-01, 7.963e-02, 6.060e-02, 3.242e-02, -8.457e-02, -5.299e-02, -3.398e-02, 3.924e-02, -8.275e-02, 5.639e-03, -1.471e-02, 6.161e-03) * s1_0_0;
	r1 += M4(8.423e-02, -1.002e-02, 1.433e-01, 2.967e-02, 1.682e-02, 2.487e-02, -2.694e-02, -1.362e-03, -4.530e-02, -4.008e-02, 1.946e-02, 1.958e-02, 4.419e-02, 5.920e-03, -5.390e-02, -5.627e-02) * s1_0_0;
	r2 += M4(1.273e-01, 3.607e-02, 9.009e-02, 1.392e-01, -7.736e-02, -1.519e-03, -7.962e-02, -4.635e-02, 8.375e-03, 2.437e-02, 2.423e-02, -1.061e-01, 9.259e-02, -1.319e-03, 6.175e-02, -6.435e-02) * s1_0_0;
	r3 += M4(5.738e-02, 1.493e-02, 8.885e-03, 9.912e-02, 5.943e-03, -1.747e-02, 7.342e-02, -9.817e-03, -3.210e-03, -3.240e-03, 3.739e-02, 6.698e-02, -5.312e-02, 8.312e-03, 1.905e-02, -1.128e-01) * s1_0_0;
	r0 += M4(1.819e-01, -3.174e-01, 2.056e-02, -7.028e-03, 8.659e-02, -1.323e-01, -1.486e-01, -2.418e-02, -3.996e-02, 3.850e-02, 1.106e-01, 7.148e-02, 1.238e-01, 3.804e-02, 9.822e-02, 5.469e-02) * s1_0_1;
	r1 += M4(4.409e-01, 2.361e-02, 2.580e-01, 5.337e-02, -1.874e-01, -1.609e-02, -1.264e-01, -6.035e-03, -1.294e-01, -3.388e-02, -3.043e-01, -3.546e-02, 3.466e-01, -1.801e-02, 4.799e-02, -7.651e-02) * s1_0_1;
	r2 += M4(-3.163e-02, 1.360e-03, 9.571e-02, 3.863e-01, -2.231e-01, -8.540e-02, -2.020e-01, -4.034e-02, -7.930e-02, 1.307e-02, -1.478e-02, 2.472e-02, -1.938e-01, 2.817e-02, -8.759e-02, 2.000e-02) * s1_0_1;
	r3 += M4(4.327e-02, 3.868e-02, 1.895e-02, -1.974e-02, 8.287e-03, -9.790e-02, -9.954e-02, -4.501e-02, -6.176e-02, -2.353e-02, 3.743e-02, 2.819e-02, -3.754e-02, 3.443e-02, 4.279e-02, -8.559e-02) * s1_0_1;
	r0 += M4(-4.888e-02, 2.804e-02, 5.741e-02, 1.606e-02, -5.107e-02, 3.991e-02, 2.239e-02, -1.705e-02, 6.267e-02, -2.348e-02, -8.344e-02, 3.688e-02, -3.455e-02, -3.183e-02, -1.392e-01, -2.478e-02) * s1_0_2;
	r1 += M4(1.162e-01, 3.490e-02, 3.070e-01, 2.707e-02, -7.743e-02, 7.644e-03, -4.330e-02, -4.499e-03, 4.946e-02, 3.244e-02, -2.242e-01, 3.951e-03, 1.130e-01, 3.108e-02, 2.436e-01, 9.340e-02) * s1_0_2;
	r2 += M4(3.912e-02, -4.077e-02, 1.149e-01, 2.041e-01, 6.977e-02, 5.471e-02, -1.446e-01, -7.152e-02, -3.815e-02, 2.526e-02, 6.948e-02, 6.893e-02, -4.057e-02, -2.069e-02, -2.469e-01, -1.731e-01) * s1_0_2;
	r3 += M4(4.106e-05, 3.816e-02, 2.585e-02, 3.015e-02, -1.785e-02, -7.921e-03, 9.708e-03, -1.006e-01, 7.319e-03, -4.050e-02, -3.809e-02, -8.291e-02, 8.776e-02, -3.799e-02, -3.543e-03, -1.365e-01) * s1_0_2;
	r0 += M4(1.069e-01, 2.581e-03, -3.454e-02, 1.450e-01, -1.283e-01, 8.128e-02, -1.102e-01, 8.622e-02, 1.015e-02, -9.830e-02, -1.928e-02, -4.677e-02, 1.290e-01, 1.194e-02, 2.993e-02, -1.112e-01) * s1_1_0;
	r1 += M4(5.341e-02, -6.615e-02, 8.506e-02, 2.173e-02, 2.859e-02, -4.523e-02, -2.796e-03, 3.087e-02, 8.952e-03, -1.026e-02, 7.508e-02, 8.246e-02, -1.061e-02, 1.456e-02, 1.095e-02, -9.278e-02) * s1_1_0;
	r2 += M4(5.463e-02, 4.104e-03, 1.145e-01, 1.305e-01, -7.393e-02, 5.074e-02, 7.396e-02, 2.137e-02, 5.407e-02, 6.425e-02, 2.402e-03, 1.940e-03, -2.295e-01, 3.901e-03, -2.218e-01, -1.402e-02) * s1_1_0;
	r3 += M4(7.074e-02, 2.131e-02, 2.024e-01, 9.311e-02, -3.502e-02, -2.519e-02, 4.658e-01, -9.647e-02, -1.932e-03, -2.116e-02, -1.789e-01, -3.481e-01, 2.957e-02, 4.761e-03, -6.457e-02, 7.289e-02) * s1_1_0;
	r0 += M4(-1.082e-01, 2.464e-01, -2.880e-02, -1.430e-01, 7.056e-02, 1.918e-01, 6.977e-01, 5.345e-01, 7.007e-01, -2.845e-02, 3.844e-01, 7.537e-02, -4.231e-01, 8.971e-02, -4.363e-01, -3.400e-01) * s1_1_1;
	r1 += M4(7.698e-02, -2.058e-01, -6.966e-02, -3.896e-02, 5.553e-02, 1.509e-01, 2.871e-02, -3.435e-01, -2.550e-01, 7.112e-01, 2.411e-01, -9.742e-02, -8.449e-02, 2.825e-02, -2.125e-02, -1.295e-02) * s1_1_1;
	r2 += M4(-2.508e-01, -9.068e-02, 2.327e-01, 3.939e-01, 4.759e-01, -1.834e-01, 3.068e-01, -3.585e-01, -1.012e-01, -2.104e-01, -1.066e-01, 5.599e-02, 1.327e-01, -2.351e-01, -2.586e-01, -8.322e-02) * s1_1_1;
	r3 += M4(-5.879e-01, -4.179e-02, -1.789e-01, 1.338e-01, 2.963e-02, -1.368e-01, -9.040e-02, 2.034e-01, 3.855e-01, 2.002e-02, -1.727e-01, 3.487e-01, -2.689e-01, -5.648e-02, -5.528e-04, -4.014e-01) * s1_1_1;
	r0 += M4(3.017e-02, -6.450e-03, -3.025e-02, 4.587e-02, -8.016e-02, 1.106e-01, 7.670e-03, -1.272e-01, 6.417e-03, -6.180e-02, -2.719e-01, 2.379e-02, 1.745e-02, 6.403e-02, 1.194e-01, -2.669e-02) * s1_1_2;
	r1 += M4(-2.179e-02, -1.072e-01, -5.115e-02, 1.081e-01, 3.028e-03, -2.048e-02, -6.761e-04, -1.907e-01, -6.892e-02, -4.417e-02, 9.377e-02, 1.433e-01, 2.681e-02, -1.814e-01, -1.484e-01, -6.579e-02) * s1_1_2;
	r2 += M4(7.348e-02, 2.721e-01, 1.744e-01, 2.642e-01, 5.947e-02, 2.270e-01, 2.882e-01, -7.942e-02, 1.155e-01, 1.015e-01, 5.963e-02, 5.486e-03, -3.771e-02, -2.099e-02, 2.257e-02, -3.137e-02) * s1_1_2;
	r3 += M4(7.898e-02, 2.213e-01, 8.228e-02, -5.154e-03, -1.774e-02, 2.202e-01, -7.401e-03, -1.295e-01, 3.230e-02, -7.592e-02, -1.711e-02, -2.378e-01, 1.104e-02, 5.340e-02, -1.065e-02, -3.210e-02) * s1_1_2;
	r0 += M4(-5.642e-04, -3.146e-03, -7.302e-03, -4.576e-03, 4.164e-02, -1.110e-02, 1.300e-02, -7.904e-02, 5.737e-02, -4.073e-03, 1.566e-02, -1.094e-01, -2.864e-02, -1.119e-02, 2.623e-02, 1.650e-01) * s1_2_0;
	r1 += M4(1.409e-02, 1.372e-03, 5.931e-02, 5.720e-03, -1.309e-02, -1.546e-02, 4.184e-02, 3.008e-02, -5.679e-02, 3.883e-02, -1.980e-02, 3.596e-02, -1.924e-02, 3.158e-03, -2.060e-01, -6.528e-02) * s1_2_0;
	r2 += M4(5.634e-02, -1.745e-02, 1.050e-01, 9.291e-02, -1.908e-02, 3.965e-02, -4.875e-03, -1.527e-02, -2.040e-02, 7.052e-02, -7.221e-02, 2.989e-02, 1.515e-02, -5.059e-02, 9.348e-02, -4.589e-02) * s1_2_0;
	r3 += M4(2.528e-02, -9.742e-04, -3.923e-02, 1.373e-01, -5.808e-04, -1.129e-02, 1.294e-02, -6.717e-02, -5.403e-02, -5.633e-03, 4.883e-02, -2.144e-01, -1.278e-01, 3.471e-03, -5.532e-02, 2.056e-01) * s1_2_0;
	r0 += M4(-2.694e-02, 2.152e-03, -2.193e-02, 8.454e-02, 7.298e-02, -3.307e-02, -2.364e-02, -2.530e-02, 4.531e-03, -2.118e-02, 3.526e-02, 1.064e-01, -1.723e-02, 3.804e-02, -4.114e-02, -1.734e-01) * s1_2_1;
	r1 += M4(2.394e-02, 3.531e-02, 2.317e-01, 3.845e-02, -5.744e-02, 4.217e-03, 6.909e-03, 8.723e-03, 7.360e-03, -2.481e-02, -1.470e-01, -7.299e-02, 5.688e-03, -1.402e-01, -1.881e-01, -4.115e-02) * s1_2_1;
	r2 += M4(-5.096e-02, -1.115e-02, -3.539e-02, 1.919e-01, -6.400e-02, -2.551e-02, -1.781e-01, 6.778e-02, 1.441e-02, -6.315e-02, -5.595e-02, -5.483e-03, 7.661e-03, 1.165e-01, 2.115e-01, -4.268e-02) * s1_2_1;
	r3 += M4(1.517e-01, 3.284e-02, 5.993e-02, -1.151e-02, -9.542e-02, -2.581e-02, 2.827e-02, 2.391e-01, -1.680e-01, -4.780e-02, -2.180e-02, 1.666e-01, 4.578e-02, 2.358e-02, 3.130e-02, -3.116e-01) * s1_2_1;
	r0 += M4(3.429e-02, 1.650e-02, 3.585e-03, -6.376e-02, 3.873e-02, -4.061e-02, 4.405e-02, 1.213e-01, 3.495e-02, -5.325e-03, -4.519e-02, -5.392e-02, -3.450e-02, -1.032e-02, 4.088e-03, 8.470e-03) * s1_2_2;
	r1 += M4(1.581e-02, 3.981e-02, 2.476e-01, 1.782e-02, -6.552e-03, -1.219e-02, -4.514e-02, 2.540e-02, 4.232e-03, 1.463e-02, -9.808e-02, -3.052e-02, 3.884e-03, 4.423e-02, -4.452e-03, -1.865e-03) * s1_2_2;
	r2 += M4(-7.546e-03, 1.660e-02, 4.181e-02, 1.098e-01, 1.859e-02, -2.156e-02, -6.326e-02, -2.157e-02, -9.157e-03, 3.333e-02, -6.391e-02, 2.381e-02, -4.199e-02, -9.292e-02, -1.179e-01, 1.930e-02) * s1_2_2;
	r3 += M4(-2.950e-03, -5.438e-03, 1.834e-02, -1.020e-02, 8.260e-04, -8.607e-02, 1.044e-03, -1.043e-01, -1.419e-02, -1.689e-02, -2.156e-02, -1.949e-01, 1.535e-03, 2.470e-03, 2.496e-02, 1.439e-01) * s1_2_2;
	s0_0_0 = G[2][xy.y+0][xy.x+0]; s0_0_1 = G[2][xy.y+0][xy.x+1];
	s0_0_2 = G[2][xy.y+0][xy.x+2]; s0_1_0 = G[2][xy.y+1][xy.x+0];
	s0_1_1 = G[2][xy.y+1][xy.x+1]; s0_1_2 = G[2][xy.y+1][xy.x+2];
	s0_2_0 = G[2][xy.y+2][xy.x+0]; s0_2_1 = G[2][xy.y+2][xy.x+1];
	s0_2_2 = G[2][xy.y+2][xy.x+2]; s1_0_0 = G[3][xy.y+0][xy.x+0];
	s1_0_1 = G[3][xy.y+0][xy.x+1]; s1_0_2 = G[3][xy.y+0][xy.x+2];
	s1_1_0 = G[3][xy.y+1][xy.x+0]; s1_1_1 = G[3][xy.y+1][xy.x+1];
	s1_1_2 = G[3][xy.y+1][xy.x+2]; s1_2_0 = G[3][xy.y+2][xy.x+0];
	s1_2_1 = G[3][xy.y+2][xy.x+1]; s1_2_2 = G[3][xy.y+2][xy.x+2];
	r0 += M4(-1.182e-01, -2.388e-02, -6.834e-02, 2.372e-02, 4.059e-02, 6.376e-04, 3.832e-05, -4.190e-02, 9.112e-02, 1.040e-02, 5.334e-02, 3.269e-02, 2.545e-02, -1.049e-01, -5.759e-02, 3.545e-03) * s0_0_0;
	r1 += M4(1.339e-02, -4.058e-02, 6.452e-02, -1.262e-02, -4.483e-02, -9.569e-03, -1.495e-02, 8.605e-03, -4.136e-03, 5.818e-02, 6.578e-02, 1.365e-02, 6.465e-02, -4.677e-03, 6.103e-02, -2.959e-02) * s0_0_0;
	r2 += M4(1.627e-02, 1.532e-02, 1.005e-01, 1.972e-01, 2.489e-02, -1.187e-02, -1.047e-03, -3.970e-02, -3.442e-02, 7.219e-03, -2.842e-03, 5.459e-03, 3.309e-02, 1.584e-03, 1.547e-01, 7.366e-02) * s0_0_0;
	r3 += M4(2.824e-02, -1.298e-02, -1.675e-02, -4.253e-02, -2.208e-02, -6.084e-04, 3.399e-03, 2.359e-02, 4.462e-02, 1.163e-02, -1.749e-03, 4.683e-02, -2.498e-02, 6.472e-03, -4.487e-02, 4.295e-02) * s0_0_0;
	r0 += M4(-1.566e-02, -2.837e-02, 4.273e-02, 3.842e-02, 7.060e-03, -1.254e-01, -3.782e-02, -3.557e-02, 1.285e-01, -4.403e-01, -7.945e-02, -8.620e-02, -1.213e-01, 1.082e-01, 9.239e-02, 4.312e-02) * s0_0_1;
	r1 += M4(1.063e-01, -1.033e-02, -9.385e-03, -8.072e-02, -1.657e-01, -5.015e-03, -2.315e-02, 4.314e-02, -6.070e-03, 1.251e-02, 9.084e-02, 1.814e-01, -8.192e-02, 2.694e-02, -1.898e-01, -2.018e-02) * s0_0_1;
	r2 += M4(-5.644e-02, -3.174e-03, 8.813e-02, 2.053e-01, -2.275e-02, 2.779e-02, -1.101e-01, -1.991e-02, -1.854e-01, -2.385e-02, -8.840e-03, -2.919e-01, 1.804e-01, 9.362e-02, 7.094e-02, -3.834e-03) * s0_0_1;
	r3 += M4(-6.259e-02, 1.666e-02, -2.528e-02, 6.250e-02, 5.690e-02, 1.398e-02, -8.907e-02, -1.937e-03, 1.581e-02, -9.357e-03, 4.926e-03, 3.607e-02, 2.016e-02, 7.519e-02, 3.932e-03, 8.765e-02) * s0_0_1;
	r0 += M4(-1.790e-02, -6.560e-03, 5.736e-02, -4.449e-03, -2.345e-02, 2.228e-02, -5.631e-03, -7.051e-02, -2.546e-02, 1.463e-03, -1.294e-02, 1.782e-02, 1.697e-02, 1.784e-02, -1.187e-02, 1.104e-03) * s0_0_2;
	r1 += M4(2.003e-02, 6.902e-02, 4.637e-02, 4.561e-04, -6.723e-02, -4.473e-02, 7.287e-02, 1.297e-02, 3.114e-03, 6.441e-02, 1.961e-01, 6.707e-02, 5.708e-03, -4.455e-02, -4.361e-02, -6.029e-02) * s0_0_2;
	r2 += M4(3.328e-02, 3.268e-02, 4.395e-02, 9.326e-03, 4.587e-02, 6.983e-03, -4.806e-02, 1.312e-01, 1.258e-01, -7.318e-03, 3.729e-02, -9.536e-02, -1.691e-02, -1.856e-02, 6.100e-02, -8.761e-02) * s0_0_2;
	r3 += M4(3.993e-02, -4.374e-03, 3.580e-03, 3.741e-02, -4.926e-02, 7.377e-02, -2.204e-02, -7.804e-02, 9.367e-02, 1.180e-02, 7.999e-04, -7.686e-02, -1.776e-03, -1.374e-02, -1.974e-04, 3.647e-02) * s0_0_2;
	r0 += M4(-1.519e-01, -3.808e-02, -9.151e-02, -9.450e-02, -1.331e-02, -1.470e-02, -2.060e-03, -1.731e-02, 5.613e-02, -2.077e-02, 7.350e-02, -8.999e-03, 4.383e-03, 2.083e-01, 9.173e-02, -1.173e-01) * s0_1_0;
	r1 += M4(-6.600e-02, -2.882e-02, -3.093e-02, -1.158e-02, -7.250e-03, 8.725e-03, -3.013e-02, -3.436e-02, -3.101e-03, 7.123e-02, -7.212e-02, -3.731e-03, 1.196e-02, 1.320e-02, 7.487e-02, -7.987e-02) * s0_1_0;
	r2 += M4(-9.279e-02, -6.142e-02, -2.049e-01, -1.154e-01, -2.674e-02, -2.570e-02, -1.890e-02, 1.117e-02, -9.707e-02, -2.700e-02, 3.402e-03, -2.696e-02, -4.018e-01, -1.724e-02, -5.425e-02, -6.993e-02) * s0_1_0;
	r3 += M4(-1.208e-01, -8.352e-03, -1.788e-01, -7.435e-02, 8.628e-04, -1.217e-02, -3.359e-02, -1.791e-02, -2.118e-02, 1.774e-03, 3.762e-02, 1.415e-01, -2.529e-01, 2.170e-02, -1.503e-01, 1.127e-01) * s0_1_0;
	r0 += M4(-3.553e-02, -1.379e-01, 2.608e-02, -7.113e-01, -8.223e-02, -3.453e-02, 5.936e-02, 7.832e-02, -7.575e-01, 2.366e-02, -2.427e-01, -5.204e-01, 7.739e-02, 3.005e-01, -4.034e-01, 1.224e-02) * s0_1_1;
	r1 += M4(-2.167e-01, -1.167e-01, -4.200e-01, -4.912e-01, -4.664e-02, 4.133e-02, -9.972e-02, 1.325e-01, -1.000e+00, -2.001e-01, -6.128e-01, -7.325e-01, -1.639e-01, 1.539e-01, -4.208e-02, 4.548e-01) * s0_1_1;
	r2 += M4(-3.596e-01, -3.163e-02, -1.000e+00, -4.821e-01, 2.823e-01, -1.443e-02, -2.531e-02, -2.664e-02, -3.339e-01, -1.000e+00, -6.664e-01, 4.229e-01, 3.176e-01, 1.553e-01, -3.105e-01, -3.388e-01) * s0_1_1;
	r3 += M4(-9.245e-03, -2.537e-02, -2.127e-01, -4.688e-01, 1.093e-01, -2.853e-02, -6.504e-01, -7.597e-02, -1.968e-01, -2.207e-01, -4.448e-01, -7.590e-01, 3.166e-01, -2.495e-01, 6.277e-02, -2.232e-01) * s0_1_1;
	r0 += M4(-4.497e-03, -2.464e-02, -1.928e-02, -2.166e-02, 1.392e-01, -2.753e-01, -3.629e-01, 2.114e-01, -5.087e-02, -2.560e-02, -1.048e-01, -7.390e-02, 2.599e-02, 8.222e-02, 7.176e-02, 5.822e-02) * s0_1_2;
	r1 += M4(-5.177e-02, -2.019e-02, -3.772e-02, 6.580e-02, -4.704e-02, -6.955e-02, -2.068e-01, 2.674e-01, -3.241e-03, -1.060e-01, -1.153e-01, 1.041e-01, 4.114e-02, -1.970e-02, 1.520e-01, -2.643e-01) * s0_1_2;
	r2 += M4(7.444e-02, 5.017e-02, -1.141e-01, -1.431e-02, 8.489e-02, 5.254e-01, 1.334e-02, 2.439e-01, 4.166e-02, 7.757e-02, 1.860e-02, -1.503e-01, -1.257e-01, -2.161e-01, 5.482e-02, -1.084e-01) * s0_1_2;
	r3 += M4(-3.669e-02, 3.450e-02, 2.494e-02, 1.173e-01, 1.898e-01, 3.818e-01, 3.010e-02, -2.603e-01, 1.080e-02, 1.225e-02, -2.651e-02, -2.541e-01, -3.505e-02, -4.509e-02, -4.024e-02, 7.112e-02) * s0_1_2;
	r0 += M4(-3.213e-02, 6.142e-02, 3.837e-03, -1.328e-01, -7.996e-03, -1.417e-02, -1.105e-02, 8.917e-03, -5.293e-03, -9.974e-03, 2.366e-02, -2.006e-02, 1.541e-02, -4.920e-02, -6.263e-02, -4.225e-02) * s0_2_0;
	r1 += M4(6.832e-03, -8.385e-02, -1.014e-01, -3.914e-02, 1.204e-02, -1.462e-02, 1.391e-02, 1.574e-02, 1.311e-03, 3.629e-02, 4.751e-02, -3.811e-03, 2.851e-03, -1.610e-02, 7.544e-02, 1.986e-02) * s0_2_0;
	r2 += M4(-7.172e-02, 1.070e-02, -2.812e-03, -8.515e-02, 6.460e-03, 2.231e-02, -3.562e-02, 1.892e-02, 3.509e-02, -8.920e-04, 5.002e-02, 2.944e-02, 3.952e-02, -3.255e-02, 1.135e-01, -6.460e-03) * s0_2_0;
	r3 += M4(-5.320e-02, 8.810e-03, -1.019e-01, -2.232e-01, 6.510e-03, 6.769e-03, -2.217e-02, 1.448e-02, -5.414e-02, -3.203e-03, 9.184e-03, 1.561e-01, 5.895e-02, -8.017e-03, -7.094e-02, 1.304e-01) * s0_2_0;
	r0 += M4(-6.443e-01, 2.479e-02, -1.136e-01, -3.209e-02, -5.332e-02, 2.108e-02, -8.870e-02, -1.715e-01, -1.324e-02, -8.367e-03, 5.416e-02, 3.023e-01, 2.874e-02, -1.479e-01, 5.653e-02, 4.576e-02) * s0_2_1;
	r1 += M4(-3.355e-02, 3.779e-02, -4.447e-01, 6.200e-02, -2.238e-02, -5.894e-02, -5.133e-02, 3.043e-03, -2.656e-02, -5.904e-03, 3.846e-02, 1.020e-02, 5.168e-02, 1.953e-02, 7.976e-02, -6.638e-02) * s0_2_1;
	r2 += M4(5.771e-02, -2.997e-01, -2.914e-01, -6.342e-02, -2.869e-02, 8.322e-02, 1.692e-02, -1.260e-01, 1.112e-01, 1.851e-01, 1.554e-01, -1.457e-01, 1.617e-02, 1.160e-01, 1.895e-01, 1.861e-01) * s0_2_1;
	r3 += M4(-2.415e-01, -6.937e-02, -1.227e-01, -5.842e-01, -5.375e-03, 3.132e-02, -1.489e-01, -1.906e-01, -6.619e-02, 7.961e-03, 1.766e-02, -1.944e-01, 4.000e-02, 2.701e-02, 2.256e-02, -1.983e-02) * s0_2_1;
	r0 += M4(-1.062e-02, -1.445e-02, 1.303e-01, -6.857e-02, -6.030e-02, 5.405e-02, -4.913e-02, -2.786e-01, -1.672e-05, -1.900e-03, 4.855e-02, 6.307e-02, 1.931e-02, -1.679e-02, -1.974e-02, 5.074e-02) * s0_2_2;
	r1 += M4(-6.207e-04, 1.461e-01, -6.826e-02, 2.342e-02, 2.220e-03, -1.051e-01, -1.170e-01, 1.013e-02, -1.067e-02, -1.339e-01, 4.147e-02, 3.093e-02, -2.215e-02, 2.695e-02, 8.935e-03, -1.517e-02) * s0_2_2;
	r2 += M4(4.747e-02, 8.258e-02, 3.397e-02, 1.872e-02, -4.850e-03, -1.395e-01, -1.853e-01, -5.515e-02, 6.732e-02, 1.129e-01, 1.756e-01, 2.162e-02, -4.769e-03, -1.169e-01, 9.350e-02, -1.106e-01) * s0_2_2;
	r3 += M4(3.529e-02, 4.723e-02, 3.094e-04, -9.183e-02, -7.957e-02, 5.428e-02, -2.938e-03, -1.496e-01, 8.172e-02, 8.948e-03, -7.851e-03, -1.128e-01, 1.930e-02, -2.631e-02, -2.191e-02, 6.468e-02) * s0_2_2;
	r0 += M4(-5.710e-02, 1.722e-02, 2.354e-02, 3.634e-02, 1.418e-01, -1.204e-01, 1.014e-02, 7.191e-03, -2.178e-01, -2.111e-02, 3.590e-02, 7.029e-03, 1.294e-01, -4.615e-02, 6.135e-02, 1.550e-02) * s1_0_0;
	r1 += M4(6.414e-02, 1.461e-02, -9.394e-02, 4.578e-03, 2.126e-02, 7.238e-02, 9.004e-02, -2.171e-02, -2.952e-02, -9.929e-03, -5.537e-04, 2.860e-02, -1.218e-02, 9.960e-02, -2.591e-02, 2.570e-02) * s1_0_0;
	r2 += M4(-1.017e-01, -1.562e-04, 1.232e-02, 6.470e-02, -1.442e-01, -5.631e-02, -1.182e-01, -4.423e-02, 6.228e-02, -3.092e-02, -4.330e-02, -1.113e-01, -2.190e-02, -2.979e-04, -1.784e-02, -4.307e-02) * s1_0_0;
	r3 += M4(5.550e-02, 4.844e-03, 6.578e-02, 1.783e-02, -6.313e-05, -1.635e-02, -4.299e-02, 2.133e-02, 1.872e-02, -1.560e-02, 3.839e-02, -9.758e-03, 2.136e-02, -8.644e-03, -2.275e-03, 7.100e-02) * s1_0_0;
	r0 += M4(-1.137e-01, 1.786e-01, -3.759e-02, -1.539e-02, -1.778e-01, -2.289e-03, -5.196e-02, -4.359e-03, 1.221e-01, -7.671e-02, 5.475e-02, -4.038e-03, 6.707e-02, -7.557e-02, -4.103e-02, 1.556e-02) * s1_0_1;
	r1 += M4(2.155e-01, -3.857e-02, -9.528e-02, 1.150e-01, -1.442e-04, -2.044e-02, 1.752e-01, 1.279e-01, 3.900e-02, -8.513e-03, 1.690e-03, -1.593e-01, 7.741e-02, 1.448e-02, 1.269e-01, 1.050e-01) * s1_0_1;
	r2 += M4(3.791e-02, -7.639e-03, 1.117e-01, -3.786e-02, 1.149e-01, 1.376e-02, -7.506e-02, -1.796e-01, 1.017e-01, 1.653e-02, 3.351e-02, -3.236e-02, -5.218e-02, 2.142e-02, -1.218e-01, -7.594e-02) * s1_0_1;
	r3 += M4(-8.948e-02, -3.027e-02, 7.419e-02, 1.519e-02, 2.045e-03, 8.081e-03, 4.722e-02, -1.998e-01, 2.967e-02, 2.206e-02, -4.118e-02, 5.591e-02, 4.374e-02, -3.199e-02, -5.408e-03, -1.337e-01) * s1_0_1;
	r0 += M4(3.850e-02, 1.962e-02, -3.818e-02, 5.387e-02, 2.579e-02, -2.885e-02, 3.246e-02, 5.015e-02, 3.356e-02, -2.054e-02, -6.716e-02, 7.075e-03, 1.577e-02, -2.020e-02, -2.170e-02, -1.506e-02) * s1_0_2;
	r1 += M4(2.015e-02, 3.700e-02, -2.050e-01, -7.435e-02, -6.454e-03, -5.257e-02, -2.496e-01, -1.247e-01, -7.725e-02, -5.007e-03, 1.179e-01, 5.586e-02, 1.890e-02, -2.827e-03, -1.806e-02, -2.351e-02) * s1_0_2;
	r2 += M4(-2.146e-02, 4.066e-02, 4.245e-02, -1.292e-01, -5.689e-02, -2.342e-02, 8.616e-02, 9.897e-02, 1.420e-02, -2.274e-02, 1.911e-02, 1.327e-01, -8.629e-03, -3.081e-02, -4.340e-02, -5.150e-03) * s1_0_2;
	r3 += M4(4.614e-02, -6.142e-02, -2.243e-03, 4.681e-03, -4.636e-02, -3.108e-03, -8.773e-03, 1.498e-01, 9.060e-03, -5.306e-02, -1.670e-02, 5.356e-02, -7.757e-04, -2.476e-02, -2.670e-03, -3.123e-02) * s1_0_2;
	r0 += M4(7.933e-02, -2.392e-02, 9.566e-02, -6.413e-03, -1.463e-01, -8.247e-02, -3.564e-02, 1.292e-01, 9.720e-02, -7.917e-02, -1.981e-02, 6.685e-02, 2.883e-01, -1.015e-01, 5.869e-02, 1.296e-01) * s1_1_0;
	r1 += M4(3.361e-03, 1.142e-01, 1.851e-02, -4.396e-03, -2.920e-02, -1.163e-02, -1.005e-01, 4.548e-02, -4.044e-02, -4.049e-02, 6.144e-02, 3.578e-02, -6.070e-02, 9.160e-03, -1.139e-01, 1.731e-02) * s1_1_0;
	r2 += M4(-9.502e-02, -8.482e-02, -1.523e-01, 6.891e-02, 1.492e-01, -7.826e-02, 1.463e-01, 4.320e-02, 1.961e-01, 5.452e-02, 2.837e-02, 1.802e-01, -1.835e-01, 2.185e-02, 3.891e-02, -1.337e-01) * s1_1_0;
	r3 += M4(3.311e-02, 1.985e-02, 2.399e-01, 4.786e-02, -4.621e-02, -2.138e-02, -4.644e-02, 3.042e-02, 1.169e-01, 4.790e-02, 3.390e-01, 1.800e-01, -9.950e-02, 3.366e-03, 8.774e-02, 7.960e-02) * s1_1_0;
	r0 += M4(1.311e-01, -7.558e-02, -3.273e-01, 1.466e-01, 2.892e-02, -9.999e-02, 2.287e-01, -2.358e-01, -6.045e-01, -2.445e-01, -4.291e-01, -1.675e-01, -7.719e-02, -4.761e-01, -1.229e-01, 2.253e-03) * s1_1_1;
	r1 += M4(-8.176e-02, 4.357e-02, 3.369e-01, 1.657e-01, -2.113e-01, -1.360e-01, -2.123e-01, -2.068e-01, -2.209e-02, -6.904e-02, -6.935e-02, -1.664e-02, -5.059e-02, -4.497e-02, -7.054e-02, -2.216e-01) * s1_1_1;
	r2 += M4(6.569e-02, 7.006e-02, -2.394e-02, -1.535e-01, -4.854e-01, -8.227e-03, -2.499e-01, -2.824e-01, -2.115e-01, -4.970e-01, -3.171e-01, -5.488e-01, -1.114e-02, -1.461e-01, -1.000e+00, -8.458e-02) * s1_1_1;
	r3 += M4(6.055e-01, -2.153e-01, 9.427e-02, 9.812e-02, 1.526e-01, 3.048e-02, 3.159e-02, -2.826e-01, -2.503e-01, -8.411e-02, 1.337e-01, -2.124e-01, -2.612e-02, -2.762e-01, 2.393e-02, 1.533e-01) * s1_1_1;
	r0 += M4(-1.660e-02, -4.127e-02, 2.329e-01, -8.279e-02, 2.337e-02, -6.471e-02, -1.782e-01, 6.413e-02, 4.318e-03, -6.372e-02, 5.040e-02, 3.947e-02, 3.953e-03, 4.565e-03, 1.780e-02, 1.477e-02) * s1_1_2;
	r1 += M4(3.663e-02, 1.544e-01, 2.202e-01, 9.308e-02, -1.592e-02, 1.087e-01, 1.450e-01, 1.791e-01, 3.891e-02, -1.137e-02, -1.321e-01, -9.299e-02, -1.871e-02, 1.751e-02, 4.224e-02, 2.083e-02) * s1_1_2;
	r2 += M4(-1.030e-01, -5.329e-01, -7.724e-02, -1.127e-02, 6.881e-02, -1.174e-01, -3.069e-01, 1.029e-02, -7.378e-02, -1.204e-01, -3.178e-01, -1.952e-02, -4.713e-02, -3.821e-02, -2.125e-02, -1.618e-02) * s1_1_2;
	r3 += M4(-8.037e-02, -6.366e-03, -3.315e-02, 1.649e-01, 4.641e-02, -1.519e-01, -1.346e-02, 1.125e-02, 1.701e-02, -1.187e-01, 9.332e-03, -5.997e-02, 2.763e-02, 1.820e-04, 1.048e-02, -3.502e-02) * s1_1_2;
	r0 += M4(-6.599e-03, -1.021e-02, 3.724e-02, 3.470e-02, 1.800e-02, 3.892e-02, -3.449e-02, -1.759e-01, 1.917e-02, 2.173e-02, 4.049e-02, -6.435e-02, 3.044e-02, -4.335e-02, 3.225e-02, 1.524e-01) * s1_2_0;
	r1 += M4(-1.651e-02, 2.436e-02, -4.835e-02, 5.362e-03, 1.475e-03, 1.829e-02, 3.391e-02, 8.937e-03, 1.369e-02, -3.222e-02, 1.195e-02, 4.346e-03, -3.651e-03, 9.242e-02, -3.237e-02, 3.580e-02) * s1_2_0;
	r2 += M4(-2.281e-02, -3.121e-02, 3.025e-02, -2.599e-02, -6.555e-02, 3.939e-02, -1.623e-01, 3.509e-03, 1.000e-01, 1.725e-02, 9.454e-02, 1.427e-02, 7.310e-02, -5.988e-03, -8.594e-02, 1.127e-01) * s1_2_0;
	r3 += M4(-2.404e-02, -1.260e-02, 8.044e-02, 1.066e-01, 4.045e-02, -8.722e-03, -2.533e-02, -3.695e-01, 4.469e-02, 1.141e-02, 7.187e-02, 1.960e-01, 7.494e-02, 1.192e-02, 3.754e-02, 6.892e-02) * s1_2_0;
	r0 += M4(1.812e-02, -1.060e-02, 4.819e-02, 7.367e-03, -4.291e-02, -2.799e-02, 7.447e-03, 3.313e-01, 6.181e-02, 7.009e-02, 6.406e-02, -2.017e-01, -5.775e-03, 1.276e-02, -7.546e-02, -4.637e-01) * s1_2_1;
	r1 += M4(-1.157e-02, -6.517e-02, -3.269e-02, 3.441e-02, 4.759e-02, 1.662e-01, -1.043e-01, -3.469e-03, -1.974e-02, -1.420e-01, -1.045e-01, -6.067e-02, -1.703e-02, -1.724e-01, -3.519e-01, -1.813e-01) * s1_2_1;
	r2 += M4(9.965e-02, 1.361e-01, 9.761e-02, -1.024e-01, -6.029e-02, -2.342e-01, -1.086e-01, 2.443e-01, -8.425e-02, -5.371e-02, 5.059e-02, -6.125e-02, -2.318e-01, -2.848e-01, -3.406e-01, -1.739e-01) * s1_2_1;
	r3 += M4(6.307e-02, -4.697e-02, 3.425e-03, 6.836e-02, -1.928e-01, -4.181e-02, -1.245e-02, 1.459e-01, 1.053e-02, 2.684e-03, -9.001e-02, -3.384e-01, -1.415e-01, -3.591e-02, 2.666e-02, -2.438e-01) * s1_2_1;
	r0 += M4(-5.815e-04, 5.095e-04, 4.523e-02, 8.529e-02, -3.542e-02, 2.756e-04, -1.311e-02, -4.856e-02, -1.937e-02, 3.211e-02, 1.372e-02, 3.233e-02, -6.078e-04, -8.200e-03, 1.028e-02, -6.357e-03) * s1_2_2;
	r1 += M4(-9.858e-03, 1.672e-02, -2.085e-02, 2.028e-02, -7.533e-03, -2.150e-01, -2.699e-01, 1.308e-02, -2.795e-03, -4.600e-02, -7.552e-02, -2.205e-02, 4.183e-03, 4.512e-02, -2.815e-01, -5.664e-02) * s1_2_2;
	r2 += M4(-2.758e-02, -6.212e-02, 7.769e-03, 1.054e-02, 1.010e-01, 2.055e-01, 1.560e-01, -1.154e-02, 3.637e-02, -6.270e-02, 1.127e-01, 5.772e-03, -4.034e-02, -6.994e-02, -3.086e-01, -9.456e-02) * s1_2_2;
	r3 += M4(3.629e-02, -4.759e-03, 6.007e-04, 2.130e-01, 2.423e-02, 3.378e-02, -1.611e-03, -2.527e-01, -1.678e-02, -6.149e-02, -5.252e-04, 1.446e-01, -6.889e-02, -3.410e-02, 2.985e-03, -7.187e-03) * s1_2_2;
	r0 = clamp(r0, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0));
	r1 = clamp(r1, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r1));
	r2 = clamp(r2, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r2));
	r3 = clamp(r3, V4(0.0), V4(1.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r3));
}

//!DESC CuNNy-4x16-SOFT-out-shuffle
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND conv4
//!BIND LUMA
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 1
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
shared V4 G[4][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(2, 2) + ivec2(1, 1)) * conv4_pt;
			V4 sr0 = V4(conv4_gather(p, 0));
			V4 sg0 = V4(conv4_gather(p, 1));
			V4 sb0 = V4(conv4_gather(p, 2));
			V4 sa0 = V4(conv4_gather(p, 3));
			G[0][ay][ax] = V4(sr0.w, sg0.w, sb0.w, sa0.w);
			G[1][ay][ax] = V4(sr0.z, sg0.z, sb0.z, sa0.z);
			G[2][ay][ax] = V4(sr0.x, sg0.x, sb0.x, sa0.x);
			G[3][ay][ax] = V4(sr0.y, sg0.y, sb0.y, sa0.y);
		}
	}
	barrier();
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0;
	r0 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2]; s1_0_0 = G[1][xy.y+0][xy.x+0];
	s1_0_1 = G[1][xy.y+0][xy.x+1]; s1_0_2 = G[1][xy.y+0][xy.x+2];
	s1_1_0 = G[1][xy.y+1][xy.x+0]; s1_1_1 = G[1][xy.y+1][xy.x+1];
	s1_1_2 = G[1][xy.y+1][xy.x+2]; s1_2_0 = G[1][xy.y+2][xy.x+0];
	s1_2_1 = G[1][xy.y+2][xy.x+1]; s1_2_2 = G[1][xy.y+2][xy.x+2];
	r0 += M4(3.838e-03, -8.749e-04, -3.373e-04, -4.668e-05, -8.889e-08, 2.230e-04, -1.076e-06, 5.979e-07, -1.140e-03, 1.033e-02, 1.859e-03, -1.661e-03, 8.868e-03, -1.026e-03, -1.621e-03, 1.091e-04) * s0_0_0;
	r0 += M4(-1.658e-02, 1.836e-02, -3.499e-03, -1.255e-03, -1.189e-05, -5.387e-04, 2.178e-06, -2.361e-06, -5.147e-04, 1.692e-02, 3.657e-04, 2.363e-04, 1.343e-01, 1.008e-01, -1.198e-03, 3.245e-04) * s0_0_1;
	r0 += M4(-3.922e-03, 1.019e-02, -5.831e-04, -2.411e-03, 7.987e-06, -1.544e-07, -1.099e-06, -4.632e-08, -7.969e-07, 3.470e-04, 5.605e-05, 5.584e-07, 1.309e-03, 3.459e-02, -6.640e-05, -5.265e-04) * s0_0_2;
	r0 += M4(-2.462e-02, -3.983e-03, 1.120e-02, -2.511e-03, 4.622e-02, 2.821e-03, -3.490e-03, 5.825e-04, -4.811e-02, 7.531e-03, -5.797e-02, -1.750e-02, 1.381e-03, -1.327e-03, -2.603e-02, 1.052e-03) * s0_1_0;
	r0 += M4(3.623e-01, 3.593e-02, -9.592e-04, 5.289e-03, 2.771e-01, 2.432e-01, 6.990e-04, -1.023e-03, 8.421e-02, -5.317e-01, -3.925e-03, 1.026e-02, 2.305e-02, -1.332e-02, 4.048e-01, -3.238e-02) * s0_1_1;
	r0 += M4(-3.306e-03, 1.328e-01, 3.259e-03, 1.392e-01, 9.607e-03, 8.639e-02, 1.762e-03, 4.058e-04, 3.296e-03, 3.243e-02, 1.439e-03, 1.277e-03, 2.403e-03, 6.723e-02, -4.212e-03, 5.391e-02) * s0_1_2;
	r0 += M4(-7.866e-04, -5.049e-04, 1.132e-02, -2.000e-03, 9.258e-04, -8.090e-04, -3.958e-02, -5.834e-03, 7.432e-04, 1.604e-03, -2.681e-02, -2.129e-03, 1.058e-05, -8.047e-05, -1.501e-03, -6.636e-04) * s0_2_0;
	r0 += M4(-1.467e-03, 2.339e-03, 1.384e-01, 1.352e-01, 4.930e-04, 4.917e-04, -2.941e-01, -2.646e-01, -7.793e-03, 6.234e-03, -9.431e-02, -1.313e-01, 1.616e-03, -1.549e-03, -1.837e-02, -6.077e-03) * s0_2_1;
	r0 += M4(-3.712e-05, -4.442e-04, -1.372e-03, 3.920e-02, -1.451e-03, 3.191e-04, -1.193e-02, -7.623e-02, -2.757e-04, 1.332e-05, 9.473e-04, -6.995e-03, -3.421e-04, -3.171e-03, -4.104e-03, -9.369e-03) * s0_2_2;
	r0 += M4(9.191e-05, -2.715e-04, 2.894e-05, -2.443e-05, -4.338e-02, -3.485e-03, -1.797e-03, 7.535e-04, 1.823e-03, -1.240e-02, 4.838e-03, -8.582e-04, 1.390e-02, -6.703e-03, 1.299e-03, 6.944e-04) * s1_0_0;
	r0 += M4(1.941e-05, 3.307e-04, -1.891e-05, 2.066e-05, -9.406e-02, -1.243e-01, -8.246e-03, 2.317e-03, -3.401e-03, -6.492e-03, 5.356e-03, 6.582e-03, 6.929e-03, -4.768e-03, -1.499e-04, 6.466e-04) * s1_0_1;
	r0 += M4(-7.421e-06, 3.735e-05, -1.040e-05, 3.585e-06, 4.670e-04, -1.247e-02, -3.899e-04, 2.350e-03, -1.296e-02, -1.682e-02, -3.286e-03, -2.190e-03, -5.137e-05, 4.047e-04, -1.768e-04, -8.980e-05) * s1_0_2;
	r0 += M4(-3.978e-02, -6.556e-03, 5.694e-03, -1.408e-03, -1.109e-01, -1.532e-02, -1.214e-01, 9.258e-03, 2.627e-01, 3.094e-02, -1.744e-01, -2.614e-02, 1.351e-01, -2.215e-03, 1.333e-01, 6.000e-03) * s1_1_0;
	r0 += M4(-2.770e-01, -2.538e-01, -3.875e-03, 7.160e-04, -2.645e-03, 5.016e-02, 5.892e-02, -4.073e-01, 1.164e-01, 3.669e-01, -1.211e-01, -3.530e-01, -3.645e-02, 3.525e-01, 9.372e-04, -4.219e-02) * s1_1_1;
	r0 += M4(-6.754e-03, -6.418e-02, -1.135e-03, 7.699e-04, 1.981e-04, 1.556e-05, 1.739e-03, 2.519e-02, 7.858e-03, 2.127e-02, -5.464e-03, 3.179e-04, -2.875e-03, -3.576e-02, -9.635e-04, -3.271e-03) * s1_1_2;
	r0 += M4(-1.739e-03, 4.855e-04, 3.788e-02, 3.795e-03, 5.080e-04, -8.459e-04, -1.204e-03, 6.718e-03, -2.762e-04, 1.287e-03, 1.930e-02, -9.254e-03, -1.444e-04, -3.416e-05, 3.967e-02, -8.793e-04) * s1_2_0;
	r0 += M4(7.578e-04, -8.171e-04, 2.761e-01, 2.646e-01, 2.605e-04, 3.028e-04, -8.813e-04, 1.788e-02, 4.265e-04, -2.141e-03, 2.008e-02, 2.594e-02, 1.472e-03, -1.267e-03, 1.265e-01, 1.244e-01) * s1_2_1;
	r0 += M4(3.322e-04, -1.353e-03, 8.941e-03, 6.285e-02, -2.012e-08, -3.186e-06, -1.491e-06, -1.540e-04, 1.171e-04, 1.519e-04, 1.039e-03, 1.157e-02, 1.348e-03, -5.735e-04, 5.405e-03, 2.014e-02) * s1_2_2;
	s0_0_0 = G[2][xy.y+0][xy.x+0]; s0_0_1 = G[2][xy.y+0][xy.x+1];
	s0_0_2 = G[2][xy.y+0][xy.x+2]; s0_1_0 = G[2][xy.y+1][xy.x+0];
	s0_1_1 = G[2][xy.y+1][xy.x+1]; s0_1_2 = G[2][xy.y+1][xy.x+2];
	s0_2_0 = G[2][xy.y+2][xy.x+0]; s0_2_1 = G[2][xy.y+2][xy.x+1];
	s0_2_2 = G[2][xy.y+2][xy.x+2]; s1_0_0 = G[3][xy.y+0][xy.x+0];
	s1_0_1 = G[3][xy.y+0][xy.x+1]; s1_0_2 = G[3][xy.y+0][xy.x+2];
	s1_1_0 = G[3][xy.y+1][xy.x+0]; s1_1_1 = G[3][xy.y+1][xy.x+1];
	s1_1_2 = G[3][xy.y+1][xy.x+2]; s1_2_0 = G[3][xy.y+2][xy.x+0];
	s1_2_1 = G[3][xy.y+2][xy.x+1]; s1_2_2 = G[3][xy.y+2][xy.x+2];
	r0 += M4(1.842e-03, 8.646e-05, 3.634e-05, 3.280e-05, 2.447e-02, 4.585e-03, -3.135e-03, -8.027e-04, 1.071e-02, -1.075e-03, 2.523e-05, 6.265e-04, -7.523e-04, -9.243e-05, 4.544e-04, -6.683e-04) * s0_0_0;
	r0 += M4(8.257e-03, 2.248e-03, 7.538e-04, 5.368e-04, 8.619e-02, 1.265e-01, 9.650e-04, -1.400e-03, 2.453e-02, 2.032e-02, -3.224e-04, -2.503e-04, 1.912e-02, 9.186e-03, 2.009e-02, 1.971e-02) * s0_0_1;
	r0 += M4(4.912e-03, 4.894e-03, 7.703e-04, 3.203e-04, 2.939e-03, 1.749e-02, 1.358e-03, -4.665e-04, 6.577e-04, 9.816e-03, -3.575e-05, 6.347e-04, -4.906e-05, 1.043e-02, 7.227e-04, 5.619e-03) * s0_0_2;
	r0 += M4(2.935e-02, 1.468e-03, -1.215e-03, 3.430e-04, 1.109e-02, 2.961e-03, 1.042e-02, -6.700e-03, -1.455e-01, -1.327e-02, 1.395e-01, 4.210e-03, -2.290e-02, 6.778e-03, -5.940e-03, 7.396e-03) * s0_1_0;
	r0 += M4(-5.375e-01, 8.101e-02, -2.491e-02, 6.545e-03, -6.140e-03, 6.752e-02, -7.224e-02, 5.254e-01, -1.753e-01, -4.090e-01, 1.655e-01, 3.661e-01, -1.519e-01, -1.489e-01, -1.441e-01, -1.038e-01) * s0_1_1;
	r0 += M4(1.033e-02, -1.995e-02, -3.677e-03, -2.937e-02, -2.757e-04, 1.873e-03, -4.108e-03, -3.461e-02, -2.379e-03, -1.502e-02, 3.771e-03, 9.904e-03, 2.292e-02, -1.249e-02, 2.703e-02, -1.006e-02) * s0_1_2;
	r0 += M4(-9.690e-04, -3.616e-04, -5.490e-03, 8.432e-04, 2.639e-04, -5.505e-04, 2.535e-03, -1.365e-03, 1.476e-03, -6.348e-04, -1.226e-02, -3.867e-03, 4.019e-03, 4.193e-04, -1.366e-02, -2.057e-04) * s0_2_0;
	r0 += M4(-1.696e-03, -4.675e-03, -1.527e-01, -9.103e-02, -2.204e-03, 4.212e-03, -1.615e-02, -1.557e-02, 3.359e-03, 2.993e-03, -1.486e-02, -2.422e-02, 1.387e-03, 1.338e-02, -3.633e-02, -3.308e-02) * s0_2_1;
	r0 += M4(7.762e-04, -4.000e-03, -4.484e-03, -3.940e-02, -2.672e-04, -1.204e-04, -3.654e-04, -1.393e-03, -2.030e-04, 2.155e-03, -8.438e-03, -1.789e-02, 9.445e-04, 1.793e-03, 4.078e-03, -1.011e-02) * s0_2_2;
	r0 += M4(-1.752e-02, 4.511e-04, 4.005e-03, -3.361e-04, 3.868e-02, -8.142e-03, 4.950e-03, 6.943e-04, -5.527e-04, 8.047e-04, -4.338e-04, -2.232e-05, -1.700e-02, 1.616e-03, -1.678e-02, 6.361e-04) * s1_0_0;
	r0 += M4(-1.228e-01, -1.033e-01, 5.048e-04, -5.854e-03, 1.257e-02, -1.284e-02, 1.213e-03, -3.674e-05, -3.207e-02, 7.716e-03, -3.921e-03, 1.066e-03, 1.794e-01, -1.381e-01, 7.197e-03, -1.074e-02) * s1_0_1;
	r0 += M4(-3.590e-03, -4.063e-02, -7.872e-05, 2.748e-04, 1.036e-04, -1.716e-04, 1.139e-04, 6.681e-05, -7.468e-03, 1.806e-02, -1.219e-03, -9.252e-04, -4.236e-04, 1.613e-02, 9.041e-04, 3.693e-04) * s1_0_2;
	r0 += M4(-2.452e-04, 2.803e-04, 1.869e-02, 2.075e-03, 2.647e-01, 7.828e-03, 2.455e-01, 5.842e-03, 1.013e-03, -6.137e-04, 1.221e-03, -4.431e-05, -1.436e-02, 6.476e-03, -1.158e-02, 1.271e-02) * s1_1_0;
	r0 += M4(3.119e-02, -5.919e-03, -4.580e-01, 3.699e-02, -1.123e-02, -3.057e-01, -1.274e-02, -2.938e-01, -2.725e-01, -6.562e-03, -2.559e-01, -1.024e-02, 1.072e-01, -1.304e-01, 3.662e-01, -3.697e-01) * s1_1_1;
	r0 += M4(-1.309e-02, -1.058e-01, 2.819e-03, -8.716e-02, -1.027e-04, 2.078e-04, -4.197e-04, -7.353e-04, 7.438e-03, 2.928e-01, 8.563e-03, 2.854e-01, 1.104e-03, 1.274e-02, -1.397e-03, 2.430e-02) * s1_1_2;
	r0 += M4(2.505e-06, 5.821e-05, 2.721e-06, 6.458e-05, 1.504e-03, -2.236e-04, 4.994e-02, -7.897e-03, -2.293e-05, 1.222e-06, 1.795e-06, 1.855e-04, -1.116e-02, -1.271e-03, -2.247e-02, -1.480e-03) * s1_2_0;
	r0 += M4(3.267e-04, 2.044e-04, 1.465e-02, -7.401e-04, -1.317e-03, 1.335e-03, 1.210e-02, -2.064e-02, -1.979e-03, -1.535e-03, -4.305e-02, 9.863e-03, 5.490e-03, -6.542e-03, 1.670e-02, 1.317e-03) * s1_2_1;
	r0 += M4(-6.292e-04, 6.963e-04, 3.805e-03, -3.546e-03, 2.919e-05, 1.801e-06, 1.597e-05, 1.165e-04, -1.637e-04, 1.190e-03, -8.133e-03, 3.039e-02, 1.752e-04, 3.927e-04, 8.290e-04, 8.303e-03) * s1_2_2;
	r0 += V4(-2.609e-09, 1.479e-08, -1.486e-08, 1.782e-09);
	vec2 opt = 0.5 * LUMA_pt;
	vec2 fpos = (vec2(opos) + vec2(0.5)) * opt;
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0.x + LUMA_tex(fpos + vec2(0.0, 0.0) * opt).r, 0.0, 0.0, 1.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r0.y + LUMA_tex(fpos + vec2(1.0, 0.0) * opt).r, 0.0, 0.0, 1.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r0.z + LUMA_tex(fpos + vec2(0.0, 1.0) * opt).r, 0.0, 0.0, 1.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r0.w + LUMA_tex(fpos + vec2(1.0, 1.0) * opt).r, 0.0, 0.0, 1.0));
}
